

Microchip Technology PIC18 LITE Macro Assembler V1.31 build 56723 
                                                                                               Tue Jul 15 19:03:28 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    51  0000                     
    52                           	psect	idataBANK0
    53  001FBC                     __pidataBANK0:
    54                           	opt stack 0
    55                           
    56                           ;initializer for _CommFsmState
    57  001FBC  204A               	dw	_CommFsmIdle& (0+65535)
    58                           
    59                           ;initializer for _ReadTimeFsm
    60  001FBE  01                 	db	1
    61  001FBF  100F               	dw	STR_1& (0+65535)
    62  001FC1  204A               	dw	_CommFsmIdle& (0+65535)
    63  001FC3  00                 	db	0
    64  001FC4  1014               	dw	STR_2& (0+65535)
    65  001FC6  204A               	dw	_CommFsmIdle& (0+65535)
    66  001FC8  01                 	db	1
    67  001FC9  1009               	dw	STR_3& (0+65535)
    68  001FCB  204A               	dw	_CommFsmIdle& (0+65535)
    69  001FCD  00                 	db	0
    70  001FCE  1001               	dw	STR_4& (0+65535)
    71  001FD0  204C               	dw	_TimeDecode& (0+65535)
    72  001FD2  02                 	db	2
    73  001FD3  1013               	dw	(STR_1+4)& (0+65535)
    74  001FD5  204A               	dw	_CommFsmIdle& (0+65535)
    75  0000                     _ADCON1bits	set	4033
    76  0000                     _BAUDCONbits	set	4024
    77  0000                     _INTCON2bits	set	4081
    78  0000                     _INTCONbits	set	4082
    79  0000                     _IPR1bits	set	3999
    80  0000                     _IPR2bits	set	4002
    81  0000                     _LATBbits	set	3978
    82  0000                     _PIE1bits	set	3997
    83  0000                     _PIE2bits	set	4000
    84  0000                     _PIR1bits	set	3998
    85  0000                     _PIR2bits	set	4001
    86  0000                     _RCONbits	set	4048
    87  0000                     _RCREG	set	4014
    88  0000                     _RCSTAbits	set	4011
    89  0000                     _SPBRG	set	4015
    90  0000                     _SPBRGH	set	4016
    91  0000                     _SSPADD	set	4040
    92  0000                     _SSPBUF	set	4041
    93  0000                     _SSPCON1	set	4038
    94  0000                     _SSPCON2	set	4037
    95  0000                     _SSPCON2bits	set	4037
    96  0000                     _SSPSTAT	set	4039
    97  0000                     _T0CONbits	set	4053
    98  0000                     _T1CONbits	set	4045
    99  0000                     _T3CONbits	set	4017
   100  0000                     _TMR0H	set	4055
   101  0000                     _TMR0L	set	4054
   102  0000                     _TMR1H	set	4047
   103  0000                     _TMR1L	set	4046
   104  0000                     _TMR3H	set	4019
   105  0000                     _TMR3L	set	4018
   106  0000                     _TRISA	set	3986
   107  0000                     _TRISB	set	3987
   108  0000                     _TRISC	set	3988
   109  0000                     _TRISCbits	set	3988
   110  0000                     _TRISE	set	3990
   111  0000                     _TXREG	set	4013
   112  0000                     _TXSTAbits	set	4012
   113  0000                     _START	set	32315
   114                           
   115                           	psect	nvCOMRAM
   116  000060                     __pnvCOMRAM:
   117                           	opt stack 0
   118  000060                     _Timer0_ms:
   119                           	opt stack 0
   120  000060                     	ds	2
   121  000062                     _Timer3_ms:
   122                           	opt stack 0
   123  000062                     	ds	2
   124                           
   125                           	psect	smallconst
   126  001000                     __psmallconst:
   127                           	opt stack 0
   128  001000  00                 	db	0
   129  001001                     __stringdata:
   130                           	opt stack 0
   131  001001                     STR_4:
   132  001001  2A                 	db	42
   133  001002  63                 	db	99	;'c'
   134  001003  6C                 	db	108	;'l'
   135  001004  6F                 	db	111	;'o'
   136  001005  73                 	db	115	;'s'
   137  001006  65                 	db	101	;'e'
   138  001007  2A                 	db	42
   139  001008  00                 	db	0
   140  001009                     STR_3:
   141  001009  6F                 	db	111	;'o'
   142  00100A  70                 	db	112	;'p'
   143  00100B  65                 	db	101	;'e'
   144  00100C  6E                 	db	110	;'n'
   145  00100D  0A                 	db	10
   146  00100E  00                 	db	0
   147  00100F                     STR_1:
   148  00100F  24                 	db	36
   149  001010  24                 	db	36
   150  001011  24                 	db	36
   151  001012  0A                 	db	10
   152  001013  00                 	db	0
   153  001014                     STR_2:
   154  001014  43                 	db	67	;'C'
   155  001015  4D                 	db	77	;'M'
   156  001016  44                 	db	68	;'D'
   157  001017  00                 	db	0
   158  001018                     __end_of__stringdata:
   159                           	opt stack 0
   160                           
   161                           ; #config settings
   162  001018  00                 	db	0	; dummy byte at the end
   163  0000                     
   164                           	psect	cinit
   165  001E2E                     __pcinit:
   166                           	opt stack 0
   167  001E2E                     start_initialization:
   168                           	opt stack 0
   169  001E2E                     __initialization:
   170                           	opt stack 0
   171                           
   172                           ; Clear objects allocated to BANK1 (64 bytes)
   173  001E2E  EE01  F000         	lfsr	0,__pbssBANK1
   174  001E32  0E40               	movlw	64
   175  001E34                     clear_0:
   176  001E34  6AEE               	clrf	postinc0,c
   177  001E36  06E8               	decf	wreg,f,c
   178  001E38  E1FD               	bnz	clear_0
   179                           
   180                           ; Clear objects allocated to BANK0 (40 bytes)
   181  001E3A  EE00  F080         	lfsr	0,__pbssBANK0
   182  001E3E  0E28               	movlw	40
   183  001E40                     clear_1:
   184  001E40  6AEE               	clrf	postinc0,c
   185  001E42  06E8               	decf	wreg,f,c
   186  001E44  E1FD               	bnz	clear_1
   187                           
   188                           ; Clear objects allocated to COMRAM (38 bytes)
   189  001E46  EE00  F03A         	lfsr	0,__pbssCOMRAM
   190  001E4A  0E26               	movlw	38
   191  001E4C                     clear_2:
   192  001E4C  6AEE               	clrf	postinc0,c
   193  001E4E  06E8               	decf	wreg,f,c
   194  001E50  E1FD               	bnz	clear_2
   195                           
   196                           ; Initialize objects allocated to BANK0 (27 bytes)
   197                           ; load TBLPTR registers with __pidataBANK0
   198  001E52  0EBC               	movlw	low __pidataBANK0
   199  001E54  6EF6               	movwf	tblptrl,c
   200  001E56  0E1F               	movlw	high __pidataBANK0
   201  001E58  6EF7               	movwf	tblptrh,c
   202  001E5A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   203  001E5C  6EF8               	movwf	tblptru,c
   204  001E5E  EE00  F0A8         	lfsr	0,__pdataBANK0
   205  001E62  EE10 F01B          	lfsr	1,27
   206  001E66                     copy_data0:
   207  001E66  0009               	tblrd		*+
   208  001E68  CFF5 FFEE          	movff	tablat,postinc0
   209  001E6C  50E5               	movf	postdec1,w,c
   210  001E6E  50E1               	movf	fsr1l,w,c
   211  001E70  E1FA               	bnz	copy_data0
   212  001E72                     end_of_initialization:
   213                           	opt stack 0
   214  001E72                     __end_of__initialization:
   215                           	opt stack 0
   216  001E72  0100               	movlb	0
   217  001E74  EFBC  F00A         	goto	_main	;jump to C main() function
   218                           tblptru	equ	0xFF8
   219                           tblptrh	equ	0xFF7
   220                           tblptrl	equ	0xFF6
   221                           tablat	equ	0xFF5
   222                           postinc0	equ	0xFEE
   223                           wreg	equ	0xFE8
   224                           postdec1	equ	0xFE5
   225                           fsr1l	equ	0xFE1
   226                           
   227                           	psect	bssCOMRAM
   228  00003A                     __pbssCOMRAM:
   229                           	opt stack 0
   230  00003A                     _DutyCycle:
   231                           	opt stack 0
   232  00003A                     	ds	2
   233  00003C                     _FsmStructActive:
   234                           	opt stack 0
   235  00003C                     	ds	2
   236  00003E                     _OneHzTick:
   237                           	opt stack 0
   238  00003E                     	ds	2
   239  000040                     _RXerr:
   240                           	opt stack 0
   241  000040                     	ds	2
   242  000042                     _i:
   243                           	opt stack 0
   244  000042                     	ds	2
   245  000044                     _j:
   246                           	opt stack 0
   247  000044                     	ds	2
   248  000046                     _CommFsmFlag:
   249                           	opt stack 0
   250  000046                     	ds	1
   251  000047                     _FsmIndx:
   252                           	opt stack 0
   253  000047                     	ds	1
   254  000048                     _I2cAdr:
   255                           	opt stack 0
   256  000048                     	ds	1
   257  000049                     _I2cBusCollFlag:
   258                           	opt stack 0
   259  000049                     	ds	1
   260  00004A                     _I2cBusyFlag:
   261                           	opt stack 0
   262  00004A                     	ds	1
   263  00004B                     _I2cDevPtr:
   264                           	opt stack 0
   265  00004B                     	ds	1
   266  00004C                     _I2cEventFlag:
   267                           	opt stack 0
   268  00004C                     	ds	1
   269  00004D                     _I2cStat:
   270                           	opt stack 0
   271  00004D                     	ds	1
   272  00004E                     _Ptr:
   273                           	opt stack 0
   274  00004E                     	ds	1
   275  00004F                     _RxBuffIndx:
   276                           	opt stack 0
   277  00004F                     	ds	1
   278  000050                     _RxFlag:
   279                           	opt stack 0
   280  000050                     	ds	1
   281  000051                     _TimerStatus:
   282                           	opt stack 0
   283  000051                     	ds	1
   284  000052                     _TxBuffIndx:
   285                           	opt stack 0
   286  000052                     	ds	1
   287  000053                     _TxBuffLen:
   288                           	opt stack 0
   289  000053                     	ds	1
   290  000054                     _USART_Status:
   291                           	opt stack 0
   292  000054                     	ds	1
   293  000055                     _VARbits1:
   294                           	opt stack 0
   295  000055                     	ds	1
   296  000056                     _I2c:
   297                           	opt stack 0
   298  000056                     	ds	10
   299                           tblptru	equ	0xFF8
   300                           tblptrh	equ	0xFF7
   301                           tblptrl	equ	0xFF6
   302                           tablat	equ	0xFF5
   303                           postinc0	equ	0xFEE
   304                           wreg	equ	0xFE8
   305                           postdec1	equ	0xFE5
   306                           fsr1l	equ	0xFE1
   307                           
   308                           	psect	bssBANK0
   309  000080                     __pbssBANK0:
   310                           	opt stack 0
   311  000080                     _Hour:
   312                           	opt stack 0
   313  000080                     	ds	1
   314  000081                     _Min:
   315                           	opt stack 0
   316  000081                     	ds	1
   317  000082                     _NtpHour:
   318                           	opt stack 0
   319  000082                     	ds	1
   320  000083                     _NtpMin:
   321                           	opt stack 0
   322  000083                     	ds	1
   323  000084                     _NtpSec:
   324                           	opt stack 0
   325  000084                     	ds	1
   326  000085                     _RxFsmFlag:
   327                           	opt stack 0
   328  000085                     	ds	1
   329  000086                     _Sec:
   330                           	opt stack 0
   331  000086                     	ds	1
   332  000087                     _TxFsmFlag:
   333                           	opt stack 0
   334  000087                     	ds	1
   335  000088                     _TxBuff:
   336                           	opt stack 0
   337  000088                     	ds	32
   338                           tblptru	equ	0xFF8
   339                           tblptrh	equ	0xFF7
   340                           tblptrl	equ	0xFF6
   341                           tablat	equ	0xFF5
   342                           postinc0	equ	0xFEE
   343                           wreg	equ	0xFE8
   344                           postdec1	equ	0xFE5
   345                           fsr1l	equ	0xFE1
   346                           
   347                           	psect	dataBANK0
   348  0000A8                     __pdataBANK0:
   349                           	opt stack 0
   350  0000A8                     _CommFsmState:
   351                           	opt stack 0
   352  0000A8                     	ds	2
   353  0000AA                     _ReadTimeFsm:
   354                           	opt stack 0
   355  0000AA                     	ds	25
   356                           tblptru	equ	0xFF8
   357                           tblptrh	equ	0xFF7
   358                           tblptrl	equ	0xFF6
   359                           tablat	equ	0xFF5
   360                           postinc0	equ	0xFEE
   361                           wreg	equ	0xFE8
   362                           postdec1	equ	0xFE5
   363                           fsr1l	equ	0xFE1
   364                           
   365                           	psect	bssBANK1
   366  000100                     __pbssBANK1:
   367                           	opt stack 0
   368  000100                     _RXbuff:
   369                           	opt stack 0
   370  000100                     	ds	64
   371                           tblptru	equ	0xFF8
   372                           tblptrh	equ	0xFF7
   373                           tblptrl	equ	0xFF6
   374                           tablat	equ	0xFF5
   375                           postinc0	equ	0xFEE
   376                           wreg	equ	0xFE8
   377                           postdec1	equ	0xFE5
   378                           fsr1l	equ	0xFE1
   379                           
   380                           	psect	cstackBANK0
   381  0000C3                     __pcstackBANK0:
   382                           	opt stack 0
   383  0000C3                     ??_I2cBuffChk:
   384  0000C3                     ?_strlen:
   385                           	opt stack 0
   386  0000C3                     ?___awdiv:
   387                           	opt stack 0
   388  0000C3                     ?___lwmod:
   389                           	opt stack 0
   390  0000C3                     ?___wmul:
   391                           	opt stack 0
   392  0000C3                     RtcReadTime@Units:
   393                           	opt stack 0
   394  0000C3                     I2cData@TxBytes:
   395                           	opt stack 0
   396  0000C3                     OpenI2C@slew:
   397                           	opt stack 0
   398  0000C3                     SetTimer1@Count:
   399                           	opt stack 0
   400  0000C3                     SetTimer3@Count:
   401                           	opt stack 0
   402  0000C3                     StartCommFsmSched@FsmStruct:
   403                           	opt stack 0
   404  0000C3                     StartRx@TxStr:
   405                           	opt stack 0
   406  0000C3                     ___awdiv@dividend:
   407                           	opt stack 0
   408  0000C3                     ___lwmod@dividend:
   409                           	opt stack 0
   410  0000C3                     memcpy@d1:
   411                           	opt stack 0
   412  0000C3                     strlen@s:
   413                           	opt stack 0
   414  0000C3                     ___wmul@multiplier:
   415                           	opt stack 0
   416                           
   417                           ; 2 bytes @ 0x0
   418  0000C3                     	ds	1
   419  0000C4                     RtcReadTime@Tens:
   420                           	opt stack 0
   421  0000C4                     _I2cBuffChk$1337:
   422                           	opt stack 0
   423  0000C4                     I2cData@TX1:
   424                           	opt stack 0
   425  0000C4                     OpenI2C@sync_mode:
   426                           	opt stack 0
   427                           
   428                           ; 1 bytes @ 0x1
   429  0000C4                     	ds	1
   430  0000C5                     ??_SetTimer3:
   431  0000C5                     ??_StartCommFsmSched:
   432  0000C5                     ??_SetTimer1:
   433  0000C5                     ??_StartRx:
   434  0000C5                     ??_strlen:
   435  0000C5                     I2cBuffChk@I2cDevice:
   436                           	opt stack 0
   437  0000C5                     I2cData@TX2:
   438                           	opt stack 0
   439  0000C5                     ___awdiv@divisor:
   440                           	opt stack 0
   441  0000C5                     ___lwmod@divisor:
   442                           	opt stack 0
   443  0000C5                     memcpy@s1:
   444                           	opt stack 0
   445  0000C5                     ___wmul@multiplicand:
   446                           	opt stack 0
   447                           
   448                           ; 2 bytes @ 0x2
   449  0000C5                     	ds	1
   450  0000C6                     I2cData@TX3:
   451                           	opt stack 0
   452                           
   453                           ; 1 bytes @ 0x3
   454  0000C6                     	ds	1
   455  0000C7                     ??___awdiv:
   456  0000C7                     ??___lwmod:
   457  0000C7                     I2cData@TX4:
   458                           	opt stack 0
   459  0000C7                     memcpy@n:
   460                           	opt stack 0
   461  0000C7                     strlen@cp:
   462                           	opt stack 0
   463  0000C7                     ___wmul@product:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x4
   467  0000C7                     	ds	1
   468  0000C8                     I2cData@RxBytes:
   469                           	opt stack 0
   470  0000C8                     ___awdiv@counter:
   471                           	opt stack 0
   472  0000C8                     ___lwmod@counter:
   473                           	opt stack 0
   474                           
   475                           ; 1 bytes @ 0x5
   476  0000C8                     	ds	1
   477  0000C9                     ??_I2cData:
   478  0000C9                     ??_I2cSettings:
   479  0000C9                     ___awdiv@sign:
   480                           	opt stack 0
   481  0000C9                     memcpy@d:
   482                           	opt stack 0
   483                           
   484                           ; 2 bytes @ 0x6
   485  0000C9                     	ds	1
   486  0000CA                     I2cData@DevPtr:
   487                           	opt stack 0
   488  0000CA                     ___awdiv@quotient:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0x7
   492  0000CA                     	ds	1
   493  0000CB                     memcpy@s:
   494                           	opt stack 0
   495                           
   496                           ; 2 bytes @ 0x8
   497  0000CB                     	ds	1
   498  0000CC                     ??_RtcWriteTime:
   499                           
   500                           ; 0 bytes @ 0x9
   501  0000CC                     	ds	1
   502  0000CD                     StartTx@TxStr:
   503                           	opt stack 0
   504                           
   505                           ; 2 bytes @ 0xA
   506  0000CD                     	ds	2
   507  0000CF                     ??_StartTx:
   508  0000CF                     RtcWriteTime@Units:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0xC
   512  0000CF                     	ds	1
   513  0000D0                     RtcWriteTime@Tens:
   514                           	opt stack 0
   515  0000D0                     CommFsmSched@FsmStruct:
   516                           	opt stack 0
   517                           
   518                           ; 2 bytes @ 0xD
   519  0000D0                     	ds	2
   520  0000D2                     ??_CommFsmSched:
   521                           
   522                           ; 0 bytes @ 0xF
   523  0000D2                     	ds	2
   524  0000D4                     CommFsmSched@FsmStat:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x11
   528  0000D4                     	ds	1
   529  0000D5                     ??_main:
   530                           
   531                           ; 0 bytes @ 0x12
   532  0000D5                     	ds	6
   533                           tblptru	equ	0xFF8
   534                           tblptrh	equ	0xFF7
   535                           tblptrl	equ	0xFF6
   536                           tablat	equ	0xFF5
   537                           postinc0	equ	0xFEE
   538                           wreg	equ	0xFE8
   539                           postdec1	equ	0xFE5
   540                           fsr1l	equ	0xFE1
   541                           
   542                           	psect	cstackCOMRAM
   543  000001                     __pcstackCOMRAM:
   544                           	opt stack 0
   545  000001                     i2SetTimer3@Count:
   546                           	opt stack 0
   547                           
   548                           ; 2 bytes @ 0x0
   549  000001                     	ds	2
   550  000003                     ??i2_SetTimer3:
   551                           
   552                           ; 0 bytes @ 0x2
   553  000003                     	ds	2
   554  000005                     ??_high_isr:
   555                           
   556                           ; 0 bytes @ 0x4
   557  000005                     	ds	15
   558  000014                     ?_strchr:
   559                           	opt stack 0
   560  000014                     ?i1_strlen:
   561                           	opt stack 0
   562  000014                     ReadUSART@data:
   563                           	opt stack 0
   564  000014                     SetTimer0@Count:
   565                           	opt stack 0
   566  000014                     strchr@ptr:
   567                           	opt stack 0
   568  000014                     i1strlen@s:
   569                           	opt stack 0
   570                           
   571                           ; 2 bytes @ 0x13
   572  000014                     	ds	2
   573  000016                     ??_SetTimer0:
   574  000016                     ??i1_strlen:
   575  000016                     strchr@chr:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x15
   579  000016                     	ds	2
   580  000018                     i1strlen@cp:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0x17
   584  000018                     	ds	2
   585  00001A                     ?_strncmp:
   586                           	opt stack 0
   587  00001A                     strncmp@s1:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0x19
   591  00001A                     	ds	2
   592  00001C                     strncmp@s2:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x1B
   596  00001C                     	ds	2
   597  00001E                     strncmp@len:
   598                           	opt stack 0
   599                           
   600                           ; 2 bytes @ 0x1D
   601  00001E                     	ds	2
   602  000020                     ??_strncmp:
   603                           
   604                           ; 0 bytes @ 0x1F
   605  000020                     	ds	3
   606  000023                     ?_strstr:
   607                           	opt stack 0
   608  000023                     strstr@s1:
   609                           	opt stack 0
   610                           
   611                           ; 2 bytes @ 0x22
   612  000023                     	ds	2
   613  000025                     strstr@s2:
   614                           	opt stack 0
   615                           
   616                           ; 2 bytes @ 0x24
   617  000025                     	ds	2
   618  000027                     ??_low_isr:
   619                           
   620                           ; 0 bytes @ 0x26
   621  000027                     	ds	19
   622                           tblptru	equ	0xFF8
   623                           tblptrh	equ	0xFF7
   624                           tblptrl	equ	0xFF6
   625                           tablat	equ	0xFF5
   626                           postinc0	equ	0xFEE
   627                           wreg	equ	0xFE8
   628                           postdec1	equ	0xFE5
   629                           fsr1l	equ	0xFE1
   630                           
   631 ;;
   632 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
   633 ;;
   634 ;; *************** function _main *****************
   635 ;; Defined at:
   636 ;;		line 52 in file "../WordClock.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;		None
   639 ;; Auto vars:     Size  Location     Type
   640 ;;		None
   641 ;; Return value:  Size  Location     Type
   642 ;;		None               void
   643 ;; Registers used:
   644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   652 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   653 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   654 ;;Total ram usage:        6 bytes
   655 ;; Hardware stack levels required when called:    8
   656 ;; This function calls:
   657 ;;		_CommFsmSched
   658 ;;		_CommSetting
   659 ;;		_I2cBuffChk
   660 ;;		_I2cData
   661 ;;		_I2cSettings
   662 ;;		_InterruptSettings
   663 ;;		_RtcReadTime
   664 ;;		_RtcWriteTime
   665 ;;		_SetTimer1
   666 ;;		_SetTimer3
   667 ;;		_Settings
   668 ;;		_StartCommFsmSched
   669 ;;		___lwmod
   670 ;; This function is called by:
   671 ;;		Startup code after reset
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           	psect	text0
   676  001578                     __ptext0:
   677                           	opt stack 0
   678  001578                     _main:
   679                           	opt stack 23
   680                           
   681                           ;WordClock.c: 55: INTCONbits.GIEH=0;
   682                           
   683                           ;incstack = 0
   684  001578  9EF2               	bcf	intcon,7,c	;volatile
   685                           
   686                           ;WordClock.c: 56: INTCONbits.GIEL=0;
   687  00157A  9CF2               	bcf	intcon,6,c	;volatile
   688                           
   689                           ;WordClock.c: 58: Settings();
   690  00157C  ECB5  F00E         	call	_Settings	;wreg free
   691                           
   692                           ;WordClock.c: 59: I2cSettings();
   693  001580  EC0D  F008         	call	_I2cSettings	;wreg free
   694                           
   695                           ;WordClock.c: 62: INTCONbits.GIEH=1;
   696  001584  8EF2               	bsf	intcon,7,c	;volatile
   697                           
   698                           ;WordClock.c: 63: INTCONbits.GIEL=1;
   699  001586  8CF2               	bsf	intcon,6,c	;volatile
   700                           
   701                           ;WordClock.c: 65: SetTimer3(Timer3_ms);
   702  001588  C062  F0C3         	movff	_Timer3_ms,SetTimer3@Count
   703  00158C  C063  F0C4         	movff	_Timer3_ms+1,SetTimer3@Count+1
   704  001590  ECEC  F00F         	call	_SetTimer3	;wreg free
   705                           
   706                           ;WordClock.c: 67: VARbits1.bit1=0;
   707  001594  9255               	bcf	_VARbits1,1,c
   708                           
   709                           ;WordClock.c: 70: CommSetting();
   710  001596  ECAE  F00F         	call	_CommSetting	;wreg free
   711                           
   712                           ;WordClock.c: 71: InterruptSettings();
   713  00159A  EC06  F010         	call	_InterruptSettings	;wreg free
   714                           
   715                           ;WordClock.c: 80: StartCommFsmSched(ReadTimeFsm);
   716  00159E  0100               	movlb	0	; () banked
   717  0015A0  0E00               	movlw	high _ReadTimeFsm
   718  0015A2  0100               	movlb	0	; () banked
   719  0015A4  0100               	movlb	0	; () banked
   720  0015A6  6FC4               	movwf	(StartCommFsmSched@FsmStruct+1)& (0+255),b
   721  0015A8  0100               	movlb	0	; () banked
   722  0015AA  0EAA               	movlw	low _ReadTimeFsm
   723  0015AC  0100               	movlb	0	; () banked
   724  0015AE  0100               	movlb	0	; () banked
   725  0015B0  6FC3               	movwf	StartCommFsmSched@FsmStruct& (0+255),b
   726  0015B2  EC3C  F00F         	call	_StartCommFsmSched	;wreg free
   727  0015B6                     l190:
   728  0015B6  0004               	clrwdt		;# 
   729                           
   730                           ;WordClock.c: 95: if(VARbits1.bit1)
   731  0015B8  A255               	btfss	_VARbits1,1,c
   732  0015BA  D060               	goto	l2963
   733                           
   734                           ;WordClock.c: 96: {
   735                           ;WordClock.c: 97: OneHzTick ++;
   736  0015BC  4A3E               	infsnz	_OneHzTick,f,c
   737  0015BE  2A3F               	incf	_OneHzTick+1,f,c
   738                           
   739                           ;WordClock.c: 98: if(!(OneHzTick % 900))
   740  0015C0  C03E  F0C3         	movff	_OneHzTick,___lwmod@dividend
   741  0015C4  C03F  F0C4         	movff	_OneHzTick+1,___lwmod@dividend+1
   742  0015C8  0E03               	movlw	3
   743  0015CA  0100               	movlb	0	; () banked
   744  0015CC  0100               	movlb	0	; () banked
   745  0015CE  6FC6               	movwf	(___lwmod@divisor+1)& (0+255),b
   746  0015D0  0E84               	movlw	132
   747  0015D2  0100               	movlb	0	; () banked
   748  0015D4  6FC5               	movwf	___lwmod@divisor& (0+255),b
   749  0015D6  ECD7  F00C         	call	___lwmod	;wreg free
   750  0015DA  0100               	movlb	0	; () banked
   751  0015DC  0100               	movlb	0	; () banked
   752  0015DE  51C4               	movf	(?___lwmod+1)& (0+255),w,b
   753  0015E0  0100               	movlb	0	; () banked
   754  0015E2  11C3               	iorwf	?___lwmod& (0+255),w,b
   755  0015E4  A4D8               	btfss	status,2,c
   756  0015E6  D00F               	goto	l2957
   757                           
   758                           ; BSR set to: 0
   759                           ;WordClock.c: 99: {
   760                           ;WordClock.c: 100: StartCommFsmSched(ReadTimeFsm);
   761  0015E8  0100               	movlb	0	; () banked
   762  0015EA  0E00               	movlw	high _ReadTimeFsm
   763  0015EC  0100               	movlb	0	; () banked
   764  0015EE  0100               	movlb	0	; () banked
   765  0015F0  6FC4               	movwf	(StartCommFsmSched@FsmStruct+1)& (0+255),b
   766  0015F2  0100               	movlb	0	; () banked
   767  0015F4  0EAA               	movlw	low _ReadTimeFsm
   768  0015F6  0100               	movlb	0	; () banked
   769  0015F8  0100               	movlb	0	; () banked
   770  0015FA  6FC3               	movwf	StartCommFsmSched@FsmStruct& (0+255),b
   771  0015FC  EC3C  F00F         	call	_StartCommFsmSched	;wreg free
   772                           
   773                           ;WordClock.c: 101: RtcWriteTime();
   774  001600  EC10  F00A         	call	_RtcWriteTime	;wreg free
   775                           
   776                           ;WordClock.c: 102: }
   777  001604  D039               	goto	l2961
   778  001606                     l2957:
   779                           
   780                           ;WordClock.c: 103: else if(I2cBuffChk(0))
   781  001606  0E00               	movlw	0
   782  001608  EC4D  F00E         	call	_I2cBuffChk
   783  00160C  0900               	iorlw	0
   784  00160E  B4D8               	btfsc	status,2,c
   785  001610  D033               	goto	l2961
   786                           
   787                           ;WordClock.c: 104: {
   788                           ;WordClock.c: 105: I2cData(0,1,0,0,0,0,3);
   789  001612  0100               	movlb	0	; () banked
   790  001614  6FD5               	movwf	??_main& (0+255),b
   791  001616  0E01               	movlw	1
   792  001618  0100               	movlb	0	; () banked
   793  00161A  0100               	movlb	0	; () banked
   794  00161C  6FC3               	movwf	I2cData@TxBytes& (0+255),b
   795  00161E  0100               	movlb	0	; () banked
   796  001620  51D5               	movf	??_main& (0+255),w,b
   797  001622  0100               	movlb	0	; () banked
   798  001624  6FD6               	movwf	(??_main+1)& (0+255),b
   799  001626  0E00               	movlw	0
   800  001628  0100               	movlb	0	; () banked
   801  00162A  0100               	movlb	0	; () banked
   802  00162C  6FC4               	movwf	I2cData@TX1& (0+255),b
   803  00162E  0100               	movlb	0	; () banked
   804  001630  51D6               	movf	(??_main+1)& (0+255),w,b
   805  001632  0100               	movlb	0	; () banked
   806  001634  6FD7               	movwf	(??_main+2)& (0+255),b
   807  001636  0E00               	movlw	0
   808  001638  0100               	movlb	0	; () banked
   809  00163A  0100               	movlb	0	; () banked
   810  00163C  6FC5               	movwf	I2cData@TX2& (0+255),b
   811  00163E  0100               	movlb	0	; () banked
   812  001640  51D7               	movf	(??_main+2)& (0+255),w,b
   813  001642  0100               	movlb	0	; () banked
   814  001644  6FD8               	movwf	(??_main+3)& (0+255),b
   815  001646  0E00               	movlw	0
   816  001648  0100               	movlb	0	; () banked
   817  00164A  0100               	movlb	0	; () banked
   818  00164C  6FC6               	movwf	I2cData@TX3& (0+255),b
   819  00164E  0100               	movlb	0	; () banked
   820  001650  51D8               	movf	(??_main+3)& (0+255),w,b
   821  001652  0100               	movlb	0	; () banked
   822  001654  6FD9               	movwf	(??_main+4)& (0+255),b
   823  001656  0E00               	movlw	0
   824  001658  0100               	movlb	0	; () banked
   825  00165A  0100               	movlb	0	; () banked
   826  00165C  6FC7               	movwf	I2cData@TX4& (0+255),b
   827  00165E  0100               	movlb	0	; () banked
   828  001660  51D9               	movf	(??_main+4)& (0+255),w,b
   829  001662  0100               	movlb	0	; () banked
   830  001664  6FDA               	movwf	(??_main+5)& (0+255),b
   831  001666  0E03               	movlw	3
   832  001668  0100               	movlb	0	; () banked
   833  00166A  0100               	movlb	0	; () banked
   834  00166C  6FC8               	movwf	I2cData@RxBytes& (0+255),b
   835  00166E  0100               	movlb	0	; () banked
   836  001670  51DA               	movf	(??_main+5)& (0+255),w,b
   837  001672  0E00               	movlw	0
   838  001674  ECFB  F00B         	call	_I2cData
   839  001678                     l2961:
   840                           
   841                           ;WordClock.c: 106: }
   842                           ;WordClock.c: 108: VARbits1.bit1=0;
   843  001678  9255               	bcf	_VARbits1,1,c
   844                           
   845                           ;WordClock.c: 109: }
   846  00167A  D00B               	goto	l2969
   847  00167C                     l2963:
   848                           
   849                           ;WordClock.c: 110: else if(I2c[0].Done == 1)
   850  00167C  0457               	decf	_I2c+1,w,c
   851  00167E  A4D8               	btfss	status,2,c
   852  001680  D008               	goto	l2969
   853                           
   854                           ;WordClock.c: 111: {
   855                           ;WordClock.c: 112: RtcReadTime();
   856  001682  ECA5  F00D         	call	_RtcReadTime	;wreg free
   857                           
   858                           ;WordClock.c: 113: I2c[0].Done = 0;
   859  001686  0100               	movlb	0	; () banked
   860  001688  6FD5               	movwf	??_main& (0+255),b
   861  00168A  0E00               	movlw	0
   862  00168C  6E57               	movwf	_I2c+1,c
   863  00168E  0100               	movlb	0	; () banked
   864  001690  51D5               	movf	??_main& (0+255),w,b
   865  001692                     l2969:
   866                           
   867                           ;WordClock.c: 114: }
   868                           ;WordClock.c: 116: if(VARbits1.bit2)
   869  001692  A455               	btfss	_VARbits1,2,c
   870  001694  D009               	goto	l2977
   871                           
   872                           ;WordClock.c: 117: {
   873                           ;WordClock.c: 133: SetTimer1(DutyCycle);
   874  001696  C03A  F0C3         	movff	_DutyCycle,SetTimer1@Count
   875  00169A  C03B  F0C4         	movff	_DutyCycle+1,SetTimer1@Count+1
   876  00169E  ECF9  F00F         	call	_SetTimer1	;wreg free
   877                           
   878                           ;WordClock.c: 134: T1CONbits.TMR1ON=1;
   879  0016A2  80CD               	bsf	4045,0,c	;volatile
   880                           
   881                           ;WordClock.c: 136: VARbits1.bit2=0;
   882  0016A4  9455               	bcf	_VARbits1,2,c
   883  0016A6  0004               	clrwdt		;# 
   884  0016A8                     l2977:
   885                           
   886                           ;WordClock.c: 138: }
   887                           ;WordClock.c: 140: if(CommFsmFlag)
   888  0016A8  5046               	movf	_CommFsmFlag,w,c
   889  0016AA  B4D8               	btfsc	status,2,c
   890  0016AC  D784               	goto	l190
   891                           
   892                           ;WordClock.c: 141: {
   893                           ;WordClock.c: 142: CommFsmSched(FsmStructActive);
   894  0016AE  0100               	movlb	0	; () banked
   895  0016B0  C03D  F0D1         	movff	_FsmStructActive+1,CommFsmSched@FsmStruct+1
   896  0016B4  0100               	movlb	0	; () banked
   897  0016B6  C03C  F0D0         	movff	_FsmStructActive,CommFsmSched@FsmStruct
   898  0016BA  EC15  F009         	call	_CommFsmSched	;wreg free
   899  0016BE  D77B               	goto	l190
   900  0016C0                     __end_of_main:
   901                           	opt stack 0
   902                           tblptru	equ	0xFF8
   903                           tblptrh	equ	0xFF7
   904                           tblptrl	equ	0xFF6
   905                           tablat	equ	0xFF5
   906                           intcon	equ	0xFF2
   907                           postinc0	equ	0xFEE
   908                           wreg	equ	0xFE8
   909                           postdec1	equ	0xFE5
   910                           fsr1l	equ	0xFE1
   911                           status	equ	0xFD8
   912                           
   913 ;; *************** function ___lwmod *****************
   914 ;; Defined at:
   915 ;;		line 8 in file "/Applications/microchip/xc8/v1.31/sources/common/lwmod.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;  dividend        2    0[BANK0 ] unsigned int 
   918 ;;  divisor         2    2[BANK0 ] unsigned int 
   919 ;; Auto vars:     Size  Location     Type
   920 ;;  counter         1    5[BANK0 ] unsigned char 
   921 ;; Return value:  Size  Location     Type
   922 ;;                  2    0[BANK0 ] unsigned int 
   923 ;; Registers used:
   924 ;;		wreg, status,2, status,0
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   930 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   931 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   932 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   933 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   934 ;;Total ram usage:        6 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; Hardware stack levels required when called:    5
   937 ;; This function calls:
   938 ;;		Nothing
   939 ;; This function is called by:
   940 ;;		_main
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           	psect	text1
   945  0019AE                     __ptext1:
   946                           	opt stack 0
   947  0019AE                     ___lwmod:
   948                           	opt stack 25
   949                           
   950                           ;incstack = 0
   951  0019AE  0100               	movlb	0	; () banked
   952  0019B0  0100               	movlb	0	; () banked
   953  0019B2  51C6               	movf	(___lwmod@divisor+1)& (0+255),w,b
   954  0019B4  11C5               	iorwf	___lwmod@divisor& (0+255),w,b
   955  0019B6  B4D8               	btfsc	status,2,c
   956  0019B8  D03A               	goto	l983
   957                           
   958                           ; BSR set to: 0
   959  0019BA  0100               	movlb	0	; () banked
   960  0019BC  6FC7               	movwf	??___lwmod& (0+255),b
   961  0019BE  0E01               	movlw	1
   962  0019C0  0100               	movlb	0	; () banked
   963  0019C2  0100               	movlb	0	; () banked
   964  0019C4  6FC8               	movwf	___lwmod@counter& (0+255),b
   965  0019C6  0100               	movlb	0	; () banked
   966  0019C8  51C7               	movf	??___lwmod& (0+255),w,b
   967  0019CA  D009               	goto	l2887
   968  0019CC                     l2885:
   969                           
   970                           ; BSR set to: 0
   971  0019CC  0100               	movlb	0	; () banked
   972  0019CE  0100               	movlb	0	; () banked
   973  0019D0  0100               	movlb	0	; () banked
   974  0019D2  90D8               	bcf	status,0,c
   975  0019D4  37C5               	rlcf	___lwmod@divisor& (0+255),f,b
   976  0019D6  37C6               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
   977  0019D8  0100               	movlb	0	; () banked
   978  0019DA  0100               	movlb	0	; () banked
   979  0019DC  2BC8               	incf	___lwmod@counter& (0+255),f,b
   980  0019DE                     l2887:
   981                           
   982                           ; BSR set to: 0
   983  0019DE  0100               	movlb	0	; () banked
   984  0019E0  0100               	movlb	0	; () banked
   985  0019E2  AFC6               	btfss	(___lwmod@divisor+1)& (0+255),7,b
   986  0019E4  D7F3               	goto	l2885
   987  0019E6                     l2889:
   988                           
   989                           ; BSR set to: 0
   990  0019E6  0100               	movlb	0	; () banked
   991  0019E8  0100               	movlb	0	; () banked
   992  0019EA  51C5               	movf	___lwmod@divisor& (0+255),w,b
   993  0019EC  0100               	movlb	0	; () banked
   994  0019EE  0100               	movlb	0	; () banked
   995  0019F0  5DC3               	subwf	___lwmod@dividend& (0+255),w,b
   996  0019F2  0100               	movlb	0	; () banked
   997  0019F4  0100               	movlb	0	; () banked
   998  0019F6  51C6               	movf	(___lwmod@divisor+1)& (0+255),w,b
   999  0019F8  0100               	movlb	0	; () banked
  1000  0019FA  0100               	movlb	0	; () banked
  1001  0019FC  59C4               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1002  0019FE  A0D8               	btfss	status,0,c
  1003  001A00  D00C               	goto	l2893
  1004                           
  1005                           ; BSR set to: 0
  1006  001A02  0100               	movlb	0	; () banked
  1007  001A04  0100               	movlb	0	; () banked
  1008  001A06  51C5               	movf	___lwmod@divisor& (0+255),w,b
  1009  001A08  0100               	movlb	0	; () banked
  1010  001A0A  0100               	movlb	0	; () banked
  1011  001A0C  5FC3               	subwf	___lwmod@dividend& (0+255),f,b
  1012  001A0E  0100               	movlb	0	; () banked
  1013  001A10  0100               	movlb	0	; () banked
  1014  001A12  51C6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1015  001A14  0100               	movlb	0	; () banked
  1016  001A16  0100               	movlb	0	; () banked
  1017  001A18  5BC4               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1018  001A1A                     l2893:
  1019                           
  1020                           ; BSR set to: 0
  1021  001A1A  0100               	movlb	0	; () banked
  1022  001A1C  0100               	movlb	0	; () banked
  1023  001A1E  0100               	movlb	0	; () banked
  1024  001A20  90D8               	bcf	status,0,c
  1025  001A22  33C6               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1026  001A24  33C5               	rrcf	___lwmod@divisor& (0+255),f,b
  1027                           
  1028                           ; BSR set to: 0
  1029  001A26  0100               	movlb	0	; () banked
  1030  001A28  0100               	movlb	0	; () banked
  1031  001A2A  2FC8               	decfsz	___lwmod@counter& (0+255),f,b
  1032  001A2C  D7DC               	goto	l2889
  1033  001A2E                     l983:
  1034                           
  1035                           ; BSR set to: 0
  1036  001A2E  C0C3  F0C3         	movff	___lwmod@dividend,?___lwmod
  1037  001A32  C0C4  F0C4         	movff	___lwmod@dividend+1,?___lwmod+1
  1038                           
  1039                           ; BSR set to: 0
  1040  001A36  0012               	return	
  1041  001A38                     __end_of___lwmod:
  1042                           	opt stack 0
  1043                           tblptru	equ	0xFF8
  1044                           tblptrh	equ	0xFF7
  1045                           tblptrl	equ	0xFF6
  1046                           tablat	equ	0xFF5
  1047                           intcon	equ	0xFF2
  1048                           postinc0	equ	0xFEE
  1049                           wreg	equ	0xFE8
  1050                           postdec1	equ	0xFE5
  1051                           fsr1l	equ	0xFE1
  1052                           status	equ	0xFD8
  1053                           
  1054 ;; *************** function _StartCommFsmSched *****************
  1055 ;; Defined at:
  1056 ;;		line 62 in file "../comm.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;  FsmStruct       2    0[BANK0 ] PTR struct FsmTable
  1059 ;;		 -> ReadTimeFsm(25), 
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;		None
  1062 ;; Return value:  Size  Location     Type
  1063 ;;		None               void
  1064 ;; Registers used:
  1065 ;;		wreg, status,2, status,0
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1071 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1073 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1074 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1075 ;;Total ram usage:        3 bytes
  1076 ;; Hardware stack levels used:    1
  1077 ;; Hardware stack levels required when called:    5
  1078 ;; This function calls:
  1079 ;;		Nothing
  1080 ;; This function is called by:
  1081 ;;		_main
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           	psect	text2
  1086  001E78                     __ptext2:
  1087                           	opt stack 0
  1088  001E78                     _StartCommFsmSched:
  1089                           	opt stack 25
  1090                           
  1091                           ;comm.c: 64: FsmIndx = 0;
  1092                           
  1093                           ; BSR set to: 0
  1094                           ;incstack = 0
  1095  001E78  0100               	movlb	0	; () banked
  1096  001E7A  6FC5               	movwf	??_StartCommFsmSched& (0+255),b
  1097  001E7C  0E00               	movlw	0
  1098  001E7E  6E47               	movwf	_FsmIndx,c
  1099  001E80  0100               	movlb	0	; () banked
  1100  001E82  51C5               	movf	??_StartCommFsmSched& (0+255),w,b
  1101                           
  1102                           ;comm.c: 65: CommFsmFlag = 1;
  1103  001E84  0100               	movlb	0	; () banked
  1104  001E86  6FC5               	movwf	??_StartCommFsmSched& (0+255),b
  1105  001E88  0E01               	movlw	1
  1106  001E8A  6E46               	movwf	_CommFsmFlag,c
  1107  001E8C  0100               	movlb	0	; () banked
  1108  001E8E  51C5               	movf	??_StartCommFsmSched& (0+255),w,b
  1109                           
  1110                           ;comm.c: 66: TxFsmFlag = 0;
  1111  001E90  0100               	movlb	0	; () banked
  1112  001E92  6FC5               	movwf	??_StartCommFsmSched& (0+255),b
  1113  001E94  0E00               	movlw	0
  1114  001E96  0100               	movlb	0	; () banked
  1115  001E98  0100               	movlb	0	; () banked
  1116  001E9A  6F87               	movwf	_TxFsmFlag& (0+255),b
  1117  001E9C  0100               	movlb	0	; () banked
  1118  001E9E  51C5               	movf	??_StartCommFsmSched& (0+255),w,b
  1119                           
  1120                           ;comm.c: 67: RxFsmFlag = 0;
  1121  001EA0  0100               	movlb	0	; () banked
  1122  001EA2  6FC5               	movwf	??_StartCommFsmSched& (0+255),b
  1123  001EA4  0E00               	movlw	0
  1124  001EA6  0100               	movlb	0	; () banked
  1125  001EA8  0100               	movlb	0	; () banked
  1126  001EAA  6F85               	movwf	_RxFsmFlag& (0+255),b
  1127  001EAC  0100               	movlb	0	; () banked
  1128  001EAE  51C5               	movf	??_StartCommFsmSched& (0+255),w,b
  1129                           
  1130                           ; BSR set to: 0
  1131                           ;comm.c: 68: FsmStructActive = FsmStruct;
  1132  001EB0  0100               	movlb	0	; () banked
  1133  001EB2  C0C4  F03D         	movff	StartCommFsmSched@FsmStruct+1,_FsmStructActive+1
  1134  001EB6  0100               	movlb	0	; () banked
  1135  001EB8  C0C3  F03C         	movff	StartCommFsmSched@FsmStruct,_FsmStructActive
  1136                           
  1137                           ; BSR set to: 0
  1138  001EBC  0012               	return	
  1139  001EBE                     __end_of_StartCommFsmSched:
  1140                           	opt stack 0
  1141                           tblptru	equ	0xFF8
  1142                           tblptrh	equ	0xFF7
  1143                           tblptrl	equ	0xFF6
  1144                           tablat	equ	0xFF5
  1145                           intcon	equ	0xFF2
  1146                           postinc0	equ	0xFEE
  1147                           wreg	equ	0xFE8
  1148                           postdec1	equ	0xFE5
  1149                           fsr1l	equ	0xFE1
  1150                           status	equ	0xFD8
  1151                           
  1152 ;; *************** function _Settings *****************
  1153 ;; Defined at:
  1154 ;;		line 6 in file "../settings.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;		None
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;		None
  1159 ;; Return value:  Size  Location     Type
  1160 ;;		None               void
  1161 ;; Registers used:
  1162 ;;		wreg, status,2
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1172 ;;Total ram usage:        0 bytes
  1173 ;; Hardware stack levels used:    1
  1174 ;; Hardware stack levels required when called:    5
  1175 ;; This function calls:
  1176 ;;		Nothing
  1177 ;; This function is called by:
  1178 ;;		_main
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           	psect	text3
  1183  001D6A                     __ptext3:
  1184                           	opt stack 0
  1185  001D6A                     _Settings:
  1186                           	opt stack 25
  1187                           
  1188                           ;settings.c: 17: TRISA = 0b11000001;
  1189                           
  1190                           ; BSR set to: 0
  1191                           ;incstack = 0
  1192  001D6A  0EC1               	movlw	193
  1193  001D6C  6E92               	movwf	3986,c	;volatile
  1194                           
  1195                           ;settings.c: 27: TRISB = 0b11000001;
  1196  001D6E  0EC1               	movlw	193
  1197  001D70  6E93               	movwf	3987,c	;volatile
  1198                           
  1199                           ;settings.c: 39: TRISC = 0b11011100;
  1200  001D72  0EDC               	movlw	220
  1201  001D74  6E94               	movwf	3988,c	;volatile
  1202                           
  1203                           ;settings.c: 51: TRISC = 0b00000000;
  1204  001D76  0E00               	movlw	0
  1205  001D78  6E94               	movwf	3988,c	;volatile
  1206                           
  1207                           ;settings.c: 59: TRISE = 0b11111000;
  1208  001D7A  0EF8               	movlw	248
  1209  001D7C  6E96               	movwf	3990,c	;volatile
  1210                           
  1211                           ;settings.c: 63: ADCON1bits.PCFG=0b1110;
  1212  001D7E  50C1               	movf	4033,w,c	;volatile
  1213  001D80  0BF0               	andlw	-16
  1214  001D82  090E               	iorlw	14
  1215  001D84  6EC1               	movwf	4033,c	;volatile
  1216                           
  1217                           ;settings.c: 66: T0CONbits.TMR0ON=0;
  1218  001D86  9ED5               	bcf	4053,7,c	;volatile
  1219                           
  1220                           ;settings.c: 67: T0CONbits.T08BIT=0;
  1221  001D88  9CD5               	bcf	4053,6,c	;volatile
  1222                           
  1223                           ;settings.c: 68: T0CONbits.T0CS=0;
  1224  001D8A  9AD5               	bcf	4053,5,c	;volatile
  1225                           
  1226                           ;settings.c: 69: T0CONbits.T0SE=0;
  1227  001D8C  98D5               	bcf	4053,4,c	;volatile
  1228                           
  1229                           ;settings.c: 70: T0CONbits.PSA=0;
  1230  001D8E  96D5               	bcf	4053,3,c	;volatile
  1231                           
  1232                           ;settings.c: 72: T0CONbits.T0PS=7;
  1233  001D90  80D5               	bsf	4053,0,c	;volatile
  1234  001D92  82D5               	bsf	4053,1,c	;volatile
  1235  001D94  84D5               	bsf	4053,2,c	;volatile
  1236                           
  1237                           ;settings.c: 77: Timer0_ms = (int)(65535 - (1.5 * (40000000 / 4) / 256));
  1238  001D96  0E1B               	movlw	27
  1239  001D98  6E61               	movwf	_Timer0_ms+1,c
  1240  001D9A  0E1D               	movlw	29
  1241  001D9C  6E60               	movwf	_Timer0_ms,c
  1242                           
  1243                           ;settings.c: 78: VARbits1.bit0 = 0;
  1244  001D9E  9055               	bcf	_VARbits1,0,c
  1245                           
  1246                           ;settings.c: 79: INTCONbits.TMR0IF = 0;
  1247  001DA0  94F2               	bcf	intcon,2,c	;volatile
  1248                           
  1249                           ;settings.c: 82: T1CONbits.TMR1ON=0;
  1250  001DA2  90CD               	bcf	4045,0,c	;volatile
  1251                           
  1252                           ;settings.c: 83: T1CONbits.TMR1CS=0;
  1253  001DA4  92CD               	bcf	4045,1,c	;volatile
  1254                           
  1255                           ;settings.c: 84: T1CONbits.RD16=1;
  1256  001DA6  8ECD               	bsf	4045,7,c	;volatile
  1257                           
  1258                           ;settings.c: 85: T1CONbits.T1OSCEN=0;
  1259  001DA8  96CD               	bcf	4045,3,c	;volatile
  1260                           
  1261                           ;settings.c: 86: T1CONbits.T1RUN=0;
  1262  001DAA  9CCD               	bcf	4045,6,c	;volatile
  1263                           
  1264                           ;settings.c: 87: T1CONbits.T1SYNC=1;
  1265  001DAC  84CD               	bsf	4045,2,c	;volatile
  1266                           
  1267                           ;settings.c: 90: T1CONbits.T1CKPS=3;
  1268  001DAE  0E30               	movlw	48
  1269  001DB0  12CD               	iorwf	4045,f,c	;volatile
  1270                           
  1271                           ;settings.c: 94: PIR1bits.TMR1IF = 0;
  1272  001DB2  909E               	bcf	3998,0,c	;volatile
  1273                           
  1274                           ;settings.c: 97: T3CONbits.TMR3ON=0;
  1275  001DB4  90B1               	bcf	4017,0,c	;volatile
  1276                           
  1277                           ;settings.c: 98: T3CONbits.RD16=1;
  1278  001DB6  8EB1               	bsf	4017,7,c	;volatile
  1279                           
  1280                           ;settings.c: 99: T3CONbits.TMR3CS=0;
  1281  001DB8  92B1               	bcf	4017,1,c	;volatile
  1282                           
  1283                           ;settings.c: 101: T3CONbits.T3CKPS=3;
  1284  001DBA  0E30               	movlw	48
  1285  001DBC  12B1               	iorwf	4017,f,c	;volatile
  1286                           
  1287                           ;settings.c: 106: Timer3_ms = (int)(65535 - (0.001 * (40000000 / 4) / 8));
  1288  001DBE  0EFB               	movlw	251
  1289  001DC0  6E63               	movwf	_Timer3_ms+1,c
  1290  001DC2  0E1D               	movlw	29
  1291  001DC4  6E62               	movwf	_Timer3_ms,c
  1292                           
  1293                           ;settings.c: 107: VARbits1.bit2 = 0;
  1294  001DC6  9455               	bcf	_VARbits1,2,c
  1295                           
  1296                           ;settings.c: 108: PIR2bits.TMR3IF = 0;
  1297  001DC8  92A1               	bcf	4001,1,c	;volatile
  1298  001DCA  0012               	return	
  1299  001DCC                     __end_of_Settings:
  1300                           	opt stack 0
  1301                           tblptru	equ	0xFF8
  1302                           tblptrh	equ	0xFF7
  1303                           tblptrl	equ	0xFF6
  1304                           tablat	equ	0xFF5
  1305                           intcon	equ	0xFF2
  1306                           postinc0	equ	0xFEE
  1307                           wreg	equ	0xFE8
  1308                           postdec1	equ	0xFE5
  1309                           fsr1l	equ	0xFE1
  1310                           status	equ	0xFD8
  1311                           
  1312 ;; *************** function _SetTimer3 *****************
  1313 ;; Defined at:
  1314 ;;		line 174 in file "../WordClock.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;  Count           2    0[BANK0 ] int 
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;		None
  1319 ;; Return value:  Size  Location     Type
  1320 ;;		None               void
  1321 ;; Registers used:
  1322 ;;		wreg, status,2
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1328 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1330 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1331 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1332 ;;Total ram usage:        4 bytes
  1333 ;; Hardware stack levels used:    1
  1334 ;; Hardware stack levels required when called:    5
  1335 ;; This function calls:
  1336 ;;		Nothing
  1337 ;; This function is called by:
  1338 ;;		_main
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text4
  1343  001FD8                     __ptext4:
  1344                           	opt stack 0
  1345  001FD8                     _SetTimer3:
  1346                           	opt stack 25
  1347                           
  1348                           ;WordClock.c: 181: TMR3H = Count >> 8;
  1349                           
  1350                           ;incstack = 0
  1351  001FD8  0100               	movlb	0	; () banked
  1352  001FDA  C0C4  F0C5         	movff	SetTimer3@Count+1,??_SetTimer3
  1353  001FDE  0100               	movlb	0	; () banked
  1354  001FE0  6BC6               	clrf	(??_SetTimer3+1)& (0+255),b
  1355  001FE2  BFC5               	btfsc	??_SetTimer3& (0+255),7,b
  1356  001FE4  69C6               	setf	(??_SetTimer3+1)& (0+255),b
  1357  001FE6  0100               	movlb	0	; () banked
  1358  001FE8  51C5               	movf	??_SetTimer3& (0+255),w,b
  1359  001FEA  6EB3               	movwf	4019,c	;volatile
  1360                           
  1361                           ; BSR set to: 0
  1362                           ;WordClock.c: 182: TMR3L = Count;
  1363  001FEC  C0C3  FFB2         	movff	SetTimer3@Count,4018	;volatile
  1364                           
  1365                           ; BSR set to: 0
  1366  001FF0  0012               	return	
  1367  001FF2                     __end_of_SetTimer3:
  1368                           	opt stack 0
  1369                           tblptru	equ	0xFF8
  1370                           tblptrh	equ	0xFF7
  1371                           tblptrl	equ	0xFF6
  1372                           tablat	equ	0xFF5
  1373                           intcon	equ	0xFF2
  1374                           postinc0	equ	0xFEE
  1375                           wreg	equ	0xFE8
  1376                           postdec1	equ	0xFE5
  1377                           fsr1l	equ	0xFE1
  1378                           status	equ	0xFD8
  1379                           
  1380 ;; *************** function _SetTimer1 *****************
  1381 ;; Defined at:
  1382 ;;		line 166 in file "../WordClock.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;  Count           2    0[BANK0 ] int 
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;		None
  1387 ;; Return value:  Size  Location     Type
  1388 ;;		None               void
  1389 ;; Registers used:
  1390 ;;		wreg, status,2
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1396 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1398 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1399 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1400 ;;Total ram usage:        4 bytes
  1401 ;; Hardware stack levels used:    1
  1402 ;; Hardware stack levels required when called:    5
  1403 ;; This function calls:
  1404 ;;		Nothing
  1405 ;; This function is called by:
  1406 ;;		_main
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text5
  1411  001FF2                     __ptext5:
  1412                           	opt stack 0
  1413  001FF2                     _SetTimer1:
  1414                           	opt stack 25
  1415                           
  1416                           ;WordClock.c: 170: TMR1H = Count >> 8;
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;incstack = 0
  1420  001FF2  0100               	movlb	0	; () banked
  1421  001FF4  C0C4  F0C5         	movff	SetTimer1@Count+1,??_SetTimer1
  1422  001FF8  0100               	movlb	0	; () banked
  1423  001FFA  6BC6               	clrf	(??_SetTimer1+1)& (0+255),b
  1424  001FFC  BFC5               	btfsc	??_SetTimer1& (0+255),7,b
  1425  001FFE  69C6               	setf	(??_SetTimer1+1)& (0+255),b
  1426  002000  0100               	movlb	0	; () banked
  1427  002002  51C5               	movf	??_SetTimer1& (0+255),w,b
  1428  002004  6ECF               	movwf	4047,c	;volatile
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;WordClock.c: 171: TMR1L = Count;
  1432  002006  C0C3  FFCE         	movff	SetTimer1@Count,4046	;volatile
  1433                           
  1434                           ; BSR set to: 0
  1435  00200A  0012               	return	
  1436  00200C                     __end_of_SetTimer1:
  1437                           	opt stack 0
  1438                           tblptru	equ	0xFF8
  1439                           tblptrh	equ	0xFF7
  1440                           tblptrl	equ	0xFF6
  1441                           tablat	equ	0xFF5
  1442                           intcon	equ	0xFF2
  1443                           postinc0	equ	0xFEE
  1444                           wreg	equ	0xFE8
  1445                           postdec1	equ	0xFE5
  1446                           fsr1l	equ	0xFE1
  1447                           status	equ	0xFD8
  1448                           
  1449 ;; *************** function _RtcWriteTime *****************
  1450 ;; Defined at:
  1451 ;;		line 205 in file "../WordClock.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;		None
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;  Tens            1   13[BANK0 ] unsigned char 
  1456 ;;  Units           1   12[BANK0 ] unsigned char 
  1457 ;; Return value:  Size  Location     Type
  1458 ;;		None               void
  1459 ;; Registers used:
  1460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1467 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1468 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1469 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1470 ;;Total ram usage:        5 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    6
  1473 ;; This function calls:
  1474 ;;		_I2cBuffChk
  1475 ;;		_I2cData
  1476 ;;		___awdiv
  1477 ;; This function is called by:
  1478 ;;		_main
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           	psect	text6
  1483  001420                     __ptext6:
  1484                           	opt stack 0
  1485  001420                     _RtcWriteTime:
  1486                           	opt stack 24
  1487                           
  1488                           ;WordClock.c: 207: unsigned char Units;
  1489                           ;WordClock.c: 208: unsigned char Tens;
  1490                           ;WordClock.c: 210: Tens = NtpSec / 10;
  1491                           
  1492                           ; BSR set to: 0
  1493                           ;incstack = 0
  1494  001420  0100               	movlb	0	; () banked
  1495  001422  0100               	movlb	0	; () banked
  1496  001424  C084  F0C3         	movff	_NtpSec,___awdiv@dividend
  1497  001428  0100               	movlb	0	; () banked
  1498  00142A  0100               	movlb	0	; () banked
  1499  00142C  6BC4               	clrf	(___awdiv@dividend+1)& (0+255),b
  1500  00142E  0E00               	movlw	0
  1501  001430  0100               	movlb	0	; () banked
  1502  001432  0100               	movlb	0	; () banked
  1503  001434  6FC6               	movwf	(___awdiv@divisor+1)& (0+255),b
  1504  001436  0E0A               	movlw	10
  1505  001438  0100               	movlb	0	; () banked
  1506  00143A  6FC5               	movwf	___awdiv@divisor& (0+255),b
  1507  00143C  EC60  F00B         	call	___awdiv	;wreg free
  1508  001440  0100               	movlb	0	; () banked
  1509  001442  0100               	movlb	0	; () banked
  1510  001444  51C3               	movf	?___awdiv& (0+255),w,b
  1511  001446  0100               	movlb	0	; () banked
  1512  001448  0100               	movlb	0	; () banked
  1513  00144A  6FD0               	movwf	RtcWriteTime@Tens& (0+255),b
  1514                           
  1515                           ; BSR set to: 0
  1516                           ;WordClock.c: 211: Units = NtpSec - (Tens * 10);
  1517  00144C  0100               	movlb	0	; () banked
  1518  00144E  0100               	movlb	0	; () banked
  1519  001450  51D0               	movf	RtcWriteTime@Tens& (0+255),w,b
  1520  001452  0D0A               	mullw	10
  1521  001454  50F3               	movf	prodl,w,c
  1522  001456  0800               	sublw	0
  1523  001458  0100               	movlb	0	; () banked
  1524  00145A  0100               	movlb	0	; () banked
  1525  00145C  2584               	addwf	_NtpSec& (0+255),w,b
  1526  00145E  0100               	movlb	0	; () banked
  1527  001460  0100               	movlb	0	; () banked
  1528  001462  6FCF               	movwf	RtcWriteTime@Units& (0+255),b
  1529                           
  1530                           ; BSR set to: 0
  1531                           ;WordClock.c: 212: Sec = (Tens << 4) | Units;
  1532  001464  0100               	movlb	0	; () banked
  1533  001466  0100               	movlb	0	; () banked
  1534  001468  39D0               	swapf	RtcWriteTime@Tens& (0+255),w,b
  1535  00146A  0BF0               	andlw	240
  1536  00146C  0100               	movlb	0	; () banked
  1537  00146E  0100               	movlb	0	; () banked
  1538  001470  11CF               	iorwf	RtcWriteTime@Units& (0+255),w,b
  1539  001472  0100               	movlb	0	; () banked
  1540  001474  0100               	movlb	0	; () banked
  1541  001476  6F86               	movwf	_Sec& (0+255),b
  1542                           
  1543                           ; BSR set to: 0
  1544                           ;WordClock.c: 215: Tens = NtpMin / 10;
  1545  001478  0100               	movlb	0	; () banked
  1546  00147A  0100               	movlb	0	; () banked
  1547  00147C  C083  F0C3         	movff	_NtpMin,___awdiv@dividend
  1548  001480  0100               	movlb	0	; () banked
  1549  001482  0100               	movlb	0	; () banked
  1550  001484  6BC4               	clrf	(___awdiv@dividend+1)& (0+255),b
  1551  001486  0E00               	movlw	0
  1552  001488  0100               	movlb	0	; () banked
  1553  00148A  0100               	movlb	0	; () banked
  1554  00148C  6FC6               	movwf	(___awdiv@divisor+1)& (0+255),b
  1555  00148E  0E0A               	movlw	10
  1556  001490  0100               	movlb	0	; () banked
  1557  001492  6FC5               	movwf	___awdiv@divisor& (0+255),b
  1558  001494  EC60  F00B         	call	___awdiv	;wreg free
  1559  001498  0100               	movlb	0	; () banked
  1560  00149A  0100               	movlb	0	; () banked
  1561  00149C  51C3               	movf	?___awdiv& (0+255),w,b
  1562  00149E  0100               	movlb	0	; () banked
  1563  0014A0  0100               	movlb	0	; () banked
  1564  0014A2  6FD0               	movwf	RtcWriteTime@Tens& (0+255),b
  1565                           
  1566                           ; BSR set to: 0
  1567                           ;WordClock.c: 216: Units = NtpMin - (Tens * 10);
  1568  0014A4  0100               	movlb	0	; () banked
  1569  0014A6  0100               	movlb	0	; () banked
  1570  0014A8  51D0               	movf	RtcWriteTime@Tens& (0+255),w,b
  1571  0014AA  0D0A               	mullw	10
  1572  0014AC  50F3               	movf	prodl,w,c
  1573  0014AE  0800               	sublw	0
  1574  0014B0  0100               	movlb	0	; () banked
  1575  0014B2  0100               	movlb	0	; () banked
  1576  0014B4  2583               	addwf	_NtpMin& (0+255),w,b
  1577  0014B6  0100               	movlb	0	; () banked
  1578  0014B8  0100               	movlb	0	; () banked
  1579  0014BA  6FCF               	movwf	RtcWriteTime@Units& (0+255),b
  1580                           
  1581                           ;WordClock.c: 217: Min = (Tens << 4) | Units;
  1582  0014BC  0100               	movlb	0	; () banked
  1583  0014BE  0100               	movlb	0	; () banked
  1584  0014C0  39D0               	swapf	RtcWriteTime@Tens& (0+255),w,b
  1585  0014C2  0BF0               	andlw	240
  1586  0014C4  0100               	movlb	0	; () banked
  1587  0014C6  0100               	movlb	0	; () banked
  1588  0014C8  11CF               	iorwf	RtcWriteTime@Units& (0+255),w,b
  1589  0014CA  0100               	movlb	0	; () banked
  1590  0014CC  0100               	movlb	0	; () banked
  1591  0014CE  6F81               	movwf	_Min& (0+255),b
  1592                           
  1593                           ; BSR set to: 0
  1594                           ;WordClock.c: 219: Tens = NtpHour / 10;
  1595  0014D0  0100               	movlb	0	; () banked
  1596  0014D2  0100               	movlb	0	; () banked
  1597  0014D4  C082  F0C3         	movff	_NtpHour,___awdiv@dividend
  1598  0014D8  0100               	movlb	0	; () banked
  1599  0014DA  0100               	movlb	0	; () banked
  1600  0014DC  6BC4               	clrf	(___awdiv@dividend+1)& (0+255),b
  1601  0014DE  0E00               	movlw	0
  1602  0014E0  0100               	movlb	0	; () banked
  1603  0014E2  0100               	movlb	0	; () banked
  1604  0014E4  6FC6               	movwf	(___awdiv@divisor+1)& (0+255),b
  1605  0014E6  0E0A               	movlw	10
  1606  0014E8  0100               	movlb	0	; () banked
  1607  0014EA  6FC5               	movwf	___awdiv@divisor& (0+255),b
  1608  0014EC  EC60  F00B         	call	___awdiv	;wreg free
  1609  0014F0  0100               	movlb	0	; () banked
  1610  0014F2  0100               	movlb	0	; () banked
  1611  0014F4  51C3               	movf	?___awdiv& (0+255),w,b
  1612  0014F6  0100               	movlb	0	; () banked
  1613  0014F8  0100               	movlb	0	; () banked
  1614  0014FA  6FD0               	movwf	RtcWriteTime@Tens& (0+255),b
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;WordClock.c: 220: Units = NtpHour - (Tens * 10);
  1618  0014FC  0100               	movlb	0	; () banked
  1619  0014FE  0100               	movlb	0	; () banked
  1620  001500  51D0               	movf	RtcWriteTime@Tens& (0+255),w,b
  1621  001502  0D0A               	mullw	10
  1622  001504  50F3               	movf	prodl,w,c
  1623  001506  0800               	sublw	0
  1624  001508  0100               	movlb	0	; () banked
  1625  00150A  0100               	movlb	0	; () banked
  1626  00150C  2582               	addwf	_NtpHour& (0+255),w,b
  1627  00150E  0100               	movlb	0	; () banked
  1628  001510  0100               	movlb	0	; () banked
  1629  001512  6FCF               	movwf	RtcWriteTime@Units& (0+255),b
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;WordClock.c: 221: Hour = (Tens<<4) | Units;
  1633  001514  0100               	movlb	0	; () banked
  1634  001516  0100               	movlb	0	; () banked
  1635  001518  39D0               	swapf	RtcWriteTime@Tens& (0+255),w,b
  1636  00151A  0BF0               	andlw	240
  1637  00151C  0100               	movlb	0	; () banked
  1638  00151E  0100               	movlb	0	; () banked
  1639  001520  11CF               	iorwf	RtcWriteTime@Units& (0+255),w,b
  1640  001522  0100               	movlb	0	; () banked
  1641  001524  0100               	movlb	0	; () banked
  1642  001526  6F80               	movwf	_Hour& (0+255),b
  1643                           
  1644                           ; BSR set to: 0
  1645                           ;WordClock.c: 223: if(I2cBuffChk(0))
  1646  001528  0E00               	movlw	0
  1647  00152A  EC4D  F00E         	call	_I2cBuffChk
  1648  00152E  0900               	iorlw	0
  1649  001530  B4D8               	btfsc	status,2,c
  1650  001532  D021               	goto	l217
  1651                           
  1652                           ;WordClock.c: 224: {
  1653                           ;WordClock.c: 225: I2cData(0, 4, 0, Sec, Min, Hour, 0);
  1654  001534  0100               	movlb	0	; () banked
  1655  001536  6FCC               	movwf	??_RtcWriteTime& (0+255),b
  1656  001538  0E04               	movlw	4
  1657  00153A  0100               	movlb	0	; () banked
  1658  00153C  0100               	movlb	0	; () banked
  1659  00153E  6FC3               	movwf	I2cData@TxBytes& (0+255),b
  1660  001540  0100               	movlb	0	; () banked
  1661  001542  51CC               	movf	??_RtcWriteTime& (0+255),w,b
  1662  001544  0100               	movlb	0	; () banked
  1663  001546  6FCD               	movwf	(??_RtcWriteTime+1)& (0+255),b
  1664  001548  0E00               	movlw	0
  1665  00154A  0100               	movlb	0	; () banked
  1666  00154C  0100               	movlb	0	; () banked
  1667  00154E  6FC4               	movwf	I2cData@TX1& (0+255),b
  1668  001550  0100               	movlb	0	; () banked
  1669  001552  51CD               	movf	(??_RtcWriteTime+1)& (0+255),w,b
  1670  001554  C086  F0C5         	movff	_Sec,I2cData@TX2
  1671  001558  C081  F0C6         	movff	_Min,I2cData@TX3
  1672  00155C  C080  F0C7         	movff	_Hour,I2cData@TX4
  1673  001560  0100               	movlb	0	; () banked
  1674  001562  6FCE               	movwf	(??_RtcWriteTime+2)& (0+255),b
  1675  001564  0E00               	movlw	0
  1676  001566  0100               	movlb	0	; () banked
  1677  001568  0100               	movlb	0	; () banked
  1678  00156A  6FC8               	movwf	I2cData@RxBytes& (0+255),b
  1679  00156C  0100               	movlb	0	; () banked
  1680  00156E  51CE               	movf	(??_RtcWriteTime+2)& (0+255),w,b
  1681  001570  0E00               	movlw	0
  1682  001572  ECFB  F00B         	call	_I2cData
  1683  001576                     l217:
  1684  001576  0012               	return	
  1685  001578                     __end_of_RtcWriteTime:
  1686                           	opt stack 0
  1687                           tblptru	equ	0xFF8
  1688                           tblptrh	equ	0xFF7
  1689                           tblptrl	equ	0xFF6
  1690                           tablat	equ	0xFF5
  1691                           prodl	equ	0xFF3
  1692                           intcon	equ	0xFF2
  1693                           postinc0	equ	0xFEE
  1694                           wreg	equ	0xFE8
  1695                           postdec1	equ	0xFE5
  1696                           fsr1l	equ	0xFE1
  1697                           status	equ	0xFD8
  1698                           
  1699 ;; *************** function ___awdiv *****************
  1700 ;; Defined at:
  1701 ;;		line 8 in file "/Applications/microchip/xc8/v1.31/sources/common/awdiv.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;  dividend        2    0[BANK0 ] int 
  1704 ;;  divisor         2    2[BANK0 ] int 
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;  quotient        2    7[BANK0 ] int 
  1707 ;;  sign            1    6[BANK0 ] unsigned char 
  1708 ;;  counter         1    5[BANK0 ] unsigned char 
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  2    0[BANK0 ] int 
  1711 ;; Registers used:
  1712 ;;		wreg, status,2, status,0, prodl
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1718 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1719 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1720 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1721 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1722 ;;Total ram usage:        9 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; Hardware stack levels required when called:    5
  1725 ;; This function calls:
  1726 ;;		Nothing
  1727 ;; This function is called by:
  1728 ;;		_RtcWriteTime
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text7
  1733  0016C0                     __ptext7:
  1734                           	opt stack 0
  1735  0016C0                     ___awdiv:
  1736                           	opt stack 24
  1737                           
  1738                           ;incstack = 0
  1739  0016C0  0100               	movlb	0	; () banked
  1740  0016C2  6FC7               	movwf	??___awdiv& (0+255),b
  1741  0016C4  0E00               	movlw	0
  1742  0016C6  0100               	movlb	0	; () banked
  1743  0016C8  0100               	movlb	0	; () banked
  1744  0016CA  6FC9               	movwf	___awdiv@sign& (0+255),b
  1745  0016CC  0100               	movlb	0	; () banked
  1746  0016CE  51C7               	movf	??___awdiv& (0+255),w,b
  1747                           
  1748                           ; BSR set to: 0
  1749  0016D0  0100               	movlb	0	; () banked
  1750  0016D2  0100               	movlb	0	; () banked
  1751  0016D4  51C6               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1752  0016D6  0A80               	xorlw	128
  1753  0016D8  6EF3               	movwf	prodl,c
  1754  0016DA  0E80               	movlw	128
  1755  0016DC  5CF3               	subwf	prodl,w,c
  1756  0016DE  0E00               	movlw	0
  1757  0016E0  B4D8               	btfsc	status,2,c
  1758  0016E2  5DC5               	subwf	___awdiv@divisor& (0+255),w,b
  1759  0016E4  B0D8               	btfsc	status,0,c
  1760  0016E6  D00F               	goto	l2629
  1761                           
  1762                           ; BSR set to: 0
  1763  0016E8  0100               	movlb	0	; () banked
  1764  0016EA  0100               	movlb	0	; () banked
  1765  0016EC  6DC5               	negf	___awdiv@divisor& (0+255),b
  1766  0016EE  0100               	movlb	0	; () banked
  1767  0016F0  1FC6               	comf	(___awdiv@divisor+1)& (0+255),f,b
  1768  0016F2  B0D8               	btfsc	status,0,c
  1769  0016F4  2BC6               	incf	(___awdiv@divisor+1)& (0+255),f,b
  1770                           
  1771                           ; BSR set to: 0
  1772  0016F6  0100               	movlb	0	; () banked
  1773  0016F8  6FC7               	movwf	??___awdiv& (0+255),b
  1774  0016FA  0E01               	movlw	1
  1775  0016FC  0100               	movlb	0	; () banked
  1776  0016FE  0100               	movlb	0	; () banked
  1777  001700  6FC9               	movwf	___awdiv@sign& (0+255),b
  1778  001702  0100               	movlb	0	; () banked
  1779  001704  51C7               	movf	??___awdiv& (0+255),w,b
  1780  001706                     l2629:
  1781                           
  1782                           ; BSR set to: 0
  1783  001706  0100               	movlb	0	; () banked
  1784  001708  0100               	movlb	0	; () banked
  1785  00170A  51C4               	movf	(___awdiv@dividend+1)& (0+255),w,b
  1786  00170C  0A80               	xorlw	128
  1787  00170E  6EF3               	movwf	prodl,c
  1788  001710  0E80               	movlw	128
  1789  001712  5CF3               	subwf	prodl,w,c
  1790  001714  0E00               	movlw	0
  1791  001716  B4D8               	btfsc	status,2,c
  1792  001718  5DC3               	subwf	___awdiv@dividend& (0+255),w,b
  1793  00171A  B0D8               	btfsc	status,0,c
  1794  00171C  D00B               	goto	l2635
  1795                           
  1796                           ; BSR set to: 0
  1797  00171E  0100               	movlb	0	; () banked
  1798  001720  0100               	movlb	0	; () banked
  1799  001722  6DC3               	negf	___awdiv@dividend& (0+255),b
  1800  001724  0100               	movlb	0	; () banked
  1801  001726  1FC4               	comf	(___awdiv@dividend+1)& (0+255),f,b
  1802  001728  B0D8               	btfsc	status,0,c
  1803  00172A  2BC4               	incf	(___awdiv@dividend+1)& (0+255),f,b
  1804                           
  1805                           ; BSR set to: 0
  1806  00172C  0E01               	movlw	1
  1807  00172E  0100               	movlb	0	; () banked
  1808  001730  0100               	movlb	0	; () banked
  1809  001732  1BC9               	xorwf	___awdiv@sign& (0+255),f,b
  1810  001734                     l2635:
  1811                           
  1812                           ; BSR set to: 0
  1813  001734  0E00               	movlw	0
  1814  001736  0100               	movlb	0	; () banked
  1815  001738  0100               	movlb	0	; () banked
  1816  00173A  6FCB               	movwf	(___awdiv@quotient+1)& (0+255),b
  1817  00173C  0E00               	movlw	0
  1818  00173E  0100               	movlb	0	; () banked
  1819  001740  6FCA               	movwf	___awdiv@quotient& (0+255),b
  1820                           
  1821                           ; BSR set to: 0
  1822  001742  0100               	movlb	0	; () banked
  1823  001744  0100               	movlb	0	; () banked
  1824  001746  51C6               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1825  001748  11C5               	iorwf	___awdiv@divisor& (0+255),w,b
  1826  00174A  B4D8               	btfsc	status,2,c
  1827  00174C  D043               	goto	l2657
  1828                           
  1829                           ; BSR set to: 0
  1830  00174E  0100               	movlb	0	; () banked
  1831  001750  6FC7               	movwf	??___awdiv& (0+255),b
  1832  001752  0E01               	movlw	1
  1833  001754  0100               	movlb	0	; () banked
  1834  001756  0100               	movlb	0	; () banked
  1835  001758  6FC8               	movwf	___awdiv@counter& (0+255),b
  1836  00175A  0100               	movlb	0	; () banked
  1837  00175C  51C7               	movf	??___awdiv& (0+255),w,b
  1838  00175E  D009               	goto	l2643
  1839  001760                     l2641:
  1840                           
  1841                           ; BSR set to: 0
  1842  001760  0100               	movlb	0	; () banked
  1843  001762  0100               	movlb	0	; () banked
  1844  001764  0100               	movlb	0	; () banked
  1845  001766  90D8               	bcf	status,0,c
  1846  001768  37C5               	rlcf	___awdiv@divisor& (0+255),f,b
  1847  00176A  37C6               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  1848  00176C  0100               	movlb	0	; () banked
  1849  00176E  0100               	movlb	0	; () banked
  1850  001770  2BC8               	incf	___awdiv@counter& (0+255),f,b
  1851  001772                     l2643:
  1852                           
  1853                           ; BSR set to: 0
  1854  001772  0100               	movlb	0	; () banked
  1855  001774  0100               	movlb	0	; () banked
  1856  001776  AFC6               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  1857  001778  D7F3               	goto	l2641
  1858  00177A                     l2645:
  1859                           
  1860                           ; BSR set to: 0
  1861  00177A  0100               	movlb	0	; () banked
  1862  00177C  0100               	movlb	0	; () banked
  1863  00177E  0100               	movlb	0	; () banked
  1864  001780  90D8               	bcf	status,0,c
  1865  001782  37CA               	rlcf	___awdiv@quotient& (0+255),f,b
  1866  001784  37CB               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  1867                           
  1868                           ; BSR set to: 0
  1869  001786  0100               	movlb	0	; () banked
  1870  001788  0100               	movlb	0	; () banked
  1871  00178A  51C5               	movf	___awdiv@divisor& (0+255),w,b
  1872  00178C  0100               	movlb	0	; () banked
  1873  00178E  0100               	movlb	0	; () banked
  1874  001790  5DC3               	subwf	___awdiv@dividend& (0+255),w,b
  1875  001792  0100               	movlb	0	; () banked
  1876  001794  0100               	movlb	0	; () banked
  1877  001796  51C6               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1878  001798  0100               	movlb	0	; () banked
  1879  00179A  0100               	movlb	0	; () banked
  1880  00179C  59C4               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  1881  00179E  A0D8               	btfss	status,0,c
  1882  0017A0  D00F               	goto	l2653
  1883                           
  1884                           ; BSR set to: 0
  1885  0017A2  0100               	movlb	0	; () banked
  1886  0017A4  0100               	movlb	0	; () banked
  1887  0017A6  51C5               	movf	___awdiv@divisor& (0+255),w,b
  1888  0017A8  0100               	movlb	0	; () banked
  1889  0017AA  0100               	movlb	0	; () banked
  1890  0017AC  5FC3               	subwf	___awdiv@dividend& (0+255),f,b
  1891  0017AE  0100               	movlb	0	; () banked
  1892  0017B0  0100               	movlb	0	; () banked
  1893  0017B2  51C6               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1894  0017B4  0100               	movlb	0	; () banked
  1895  0017B6  0100               	movlb	0	; () banked
  1896  0017B8  5BC4               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  1897                           
  1898                           ; BSR set to: 0
  1899  0017BA  0100               	movlb	0	; () banked
  1900  0017BC  0100               	movlb	0	; () banked
  1901  0017BE  81CA               	bsf	___awdiv@quotient& (0+255),0,b
  1902  0017C0                     l2653:
  1903                           
  1904                           ; BSR set to: 0
  1905  0017C0  0100               	movlb	0	; () banked
  1906  0017C2  0100               	movlb	0	; () banked
  1907  0017C4  0100               	movlb	0	; () banked
  1908  0017C6  90D8               	bcf	status,0,c
  1909  0017C8  33C6               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  1910  0017CA  33C5               	rrcf	___awdiv@divisor& (0+255),f,b
  1911                           
  1912                           ; BSR set to: 0
  1913  0017CC  0100               	movlb	0	; () banked
  1914  0017CE  0100               	movlb	0	; () banked
  1915  0017D0  2FC8               	decfsz	___awdiv@counter& (0+255),f,b
  1916  0017D2  D7D3               	goto	l2645
  1917  0017D4                     l2657:
  1918                           
  1919                           ; BSR set to: 0
  1920  0017D4  0100               	movlb	0	; () banked
  1921  0017D6  0100               	movlb	0	; () banked
  1922  0017D8  51C9               	movf	___awdiv@sign& (0+255),w,b
  1923  0017DA  B4D8               	btfsc	status,2,c
  1924  0017DC  D007               	goto	l2661
  1925                           
  1926                           ; BSR set to: 0
  1927  0017DE  0100               	movlb	0	; () banked
  1928  0017E0  0100               	movlb	0	; () banked
  1929  0017E2  6DCA               	negf	___awdiv@quotient& (0+255),b
  1930  0017E4  0100               	movlb	0	; () banked
  1931  0017E6  1FCB               	comf	(___awdiv@quotient+1)& (0+255),f,b
  1932  0017E8  B0D8               	btfsc	status,0,c
  1933  0017EA  2BCB               	incf	(___awdiv@quotient+1)& (0+255),f,b
  1934  0017EC                     l2661:
  1935                           
  1936                           ; BSR set to: 0
  1937  0017EC  C0CA  F0C3         	movff	___awdiv@quotient,?___awdiv
  1938  0017F0  C0CB  F0C4         	movff	___awdiv@quotient+1,?___awdiv+1
  1939                           
  1940                           ; BSR set to: 0
  1941                           
  1942                           ; BSR set to: 0
  1943  0017F4  0012               	return	
  1944  0017F6                     __end_of___awdiv:
  1945                           	opt stack 0
  1946                           tblptru	equ	0xFF8
  1947                           tblptrh	equ	0xFF7
  1948                           tblptrl	equ	0xFF6
  1949                           tablat	equ	0xFF5
  1950                           prodl	equ	0xFF3
  1951                           intcon	equ	0xFF2
  1952                           postinc0	equ	0xFEE
  1953                           wreg	equ	0xFE8
  1954                           postdec1	equ	0xFE5
  1955                           fsr1l	equ	0xFE1
  1956                           status	equ	0xFD8
  1957                           
  1958 ;; *************** function _I2cData *****************
  1959 ;; Defined at:
  1960 ;;		line 309 in file "../myi2c.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  DevPtr          1    wreg     unsigned char 
  1963 ;;  TxBytes         1    0[BANK0 ] unsigned char 
  1964 ;;  TX1             1    1[BANK0 ] unsigned char 
  1965 ;;  TX2             1    2[BANK0 ] unsigned char 
  1966 ;;  TX3             1    3[BANK0 ] unsigned char 
  1967 ;;  TX4             1    4[BANK0 ] unsigned char 
  1968 ;;  RxBytes         1    5[BANK0 ] unsigned char 
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;  DevPtr          1    7[BANK0 ] unsigned char 
  1971 ;; Return value:  Size  Location     Type
  1972 ;;		None               void
  1973 ;; Registers used:
  1974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1980 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1981 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1982 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1983 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1984 ;;Total ram usage:        8 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:    5
  1987 ;; This function calls:
  1988 ;;		Nothing
  1989 ;; This function is called by:
  1990 ;;		_main
  1991 ;;		_RtcWriteTime
  1992 ;;		_RtcInit
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text8
  1997  0017F6                     __ptext8:
  1998                           	opt stack 0
  1999  0017F6                     _I2cData:
  2000                           	opt stack 24
  2001                           
  2002                           ; BSR set to: 0
  2003                           ;incstack = 0
  2004                           ;I2cData@DevPtr stored from wreg
  2005  0017F6  CFE8 F0CA          	movff	wreg,I2cData@DevPtr
  2006                           
  2007                           ;myi2c.c: 313: I2c[DevPtr].Flag.Tx = TxBytes;
  2008  0017FA  C0C3  F0C9         	movff	I2cData@TxBytes,??_I2cData
  2009  0017FE  0100               	movlb	0	; () banked
  2010  001800  0100               	movlb	0	; () banked
  2011  001802  51CA               	movf	I2cData@DevPtr& (0+255),w,b
  2012  001804  0D0A               	mullw	10
  2013  001806  0E56               	movlw	low _I2c
  2014  001808  24F3               	addwf	prodl,w,c
  2015  00180A  6ED9               	movwf	fsr2l,c
  2016  00180C  0E00               	movlw	high _I2c
  2017  00180E  20F4               	addwfc	prodh,w,c
  2018  001810  6EDA               	movwf	fsr2h,c
  2019  001812  0100               	movlb	0	; () banked
  2020  001814  3BC9               	swapf	??_I2cData& (0+255),f,b
  2021  001816  50DF               	movf	indf2,w,c
  2022  001818  0100               	movlb	0	; () banked
  2023  00181A  19C9               	xorwf	??_I2cData& (0+255),w,b
  2024  00181C  0B0F               	andlw	-241
  2025  00181E  19C9               	xorwf	??_I2cData& (0+255),w,b
  2026  001820  6EDF               	movwf	indf2,c
  2027                           
  2028                           ;myi2c.c: 314: I2c[DevPtr].TxBuff[0] = TX1 ;
  2029  001822  0100               	movlb	0	; () banked
  2030  001824  0100               	movlb	0	; () banked
  2031  001826  51CA               	movf	I2cData@DevPtr& (0+255),w,b
  2032  001828  0D0A               	mullw	10
  2033  00182A  0E06               	movlw	6
  2034  00182C  26F3               	addwf	prodl,f,c
  2035  00182E  0E00               	movlw	0
  2036  001830  22F4               	addwfc	prodh,f,c
  2037  001832  0E56               	movlw	low _I2c
  2038  001834  24F3               	addwf	prodl,w,c
  2039  001836  6ED9               	movwf	fsr2l,c
  2040  001838  0E00               	movlw	high _I2c
  2041  00183A  20F4               	addwfc	prodh,w,c
  2042  00183C  6EDA               	movwf	fsr2h,c
  2043  00183E  0100               	movlb	0	; () banked
  2044  001840  C0C4  FFDF         	movff	I2cData@TX1,indf2
  2045                           
  2046                           ;myi2c.c: 315: I2c[DevPtr].TxBuff[1] = TX2 ;
  2047  001844  0100               	movlb	0	; () banked
  2048  001846  0100               	movlb	0	; () banked
  2049  001848  51CA               	movf	I2cData@DevPtr& (0+255),w,b
  2050  00184A  0D0A               	mullw	10
  2051  00184C  0E07               	movlw	7
  2052  00184E  26F3               	addwf	prodl,f,c
  2053  001850  0E00               	movlw	0
  2054  001852  22F4               	addwfc	prodh,f,c
  2055  001854  0E56               	movlw	low _I2c
  2056  001856  24F3               	addwf	prodl,w,c
  2057  001858  6ED9               	movwf	fsr2l,c
  2058  00185A  0E00               	movlw	high _I2c
  2059  00185C  20F4               	addwfc	prodh,w,c
  2060  00185E  6EDA               	movwf	fsr2h,c
  2061  001860  0100               	movlb	0	; () banked
  2062  001862  C0C5  FFDF         	movff	I2cData@TX2,indf2
  2063                           
  2064                           ;myi2c.c: 316: I2c[DevPtr].TxBuff[2] = TX3 ;
  2065  001866  0100               	movlb	0	; () banked
  2066  001868  0100               	movlb	0	; () banked
  2067  00186A  51CA               	movf	I2cData@DevPtr& (0+255),w,b
  2068  00186C  0D0A               	mullw	10
  2069  00186E  0E08               	movlw	8
  2070  001870  26F3               	addwf	prodl,f,c
  2071  001872  0E00               	movlw	0
  2072  001874  22F4               	addwfc	prodh,f,c
  2073  001876  0E56               	movlw	low _I2c
  2074  001878  24F3               	addwf	prodl,w,c
  2075  00187A  6ED9               	movwf	fsr2l,c
  2076  00187C  0E00               	movlw	high _I2c
  2077  00187E  20F4               	addwfc	prodh,w,c
  2078  001880  6EDA               	movwf	fsr2h,c
  2079  001882  0100               	movlb	0	; () banked
  2080  001884  C0C6  FFDF         	movff	I2cData@TX3,indf2
  2081                           
  2082                           ;myi2c.c: 317: I2c[DevPtr].TxBuff[3] = TX4 ;
  2083  001888  0100               	movlb	0	; () banked
  2084  00188A  0100               	movlb	0	; () banked
  2085  00188C  51CA               	movf	I2cData@DevPtr& (0+255),w,b
  2086  00188E  0D0A               	mullw	10
  2087  001890  0E09               	movlw	9
  2088  001892  26F3               	addwf	prodl,f,c
  2089  001894  0E00               	movlw	0
  2090  001896  22F4               	addwfc	prodh,f,c
  2091  001898  0E56               	movlw	low _I2c
  2092  00189A  24F3               	addwf	prodl,w,c
  2093  00189C  6ED9               	movwf	fsr2l,c
  2094  00189E  0E00               	movlw	high _I2c
  2095  0018A0  20F4               	addwfc	prodh,w,c
  2096  0018A2  6EDA               	movwf	fsr2h,c
  2097  0018A4  0100               	movlb	0	; () banked
  2098  0018A6  C0C7  FFDF         	movff	I2cData@TX4,indf2
  2099                           
  2100                           ;myi2c.c: 318: I2c[DevPtr].Flag.Rx = RxBytes;
  2101  0018AA  0100               	movlb	0	; () banked
  2102  0018AC  0100               	movlb	0	; () banked
  2103  0018AE  51CA               	movf	I2cData@DevPtr& (0+255),w,b
  2104  0018B0  0D0A               	mullw	10
  2105  0018B2  0E56               	movlw	low _I2c
  2106  0018B4  24F3               	addwf	prodl,w,c
  2107  0018B6  6ED9               	movwf	fsr2l,c
  2108  0018B8  0E00               	movlw	high _I2c
  2109  0018BA  20F4               	addwfc	prodh,w,c
  2110  0018BC  6EDA               	movwf	fsr2h,c
  2111  0018BE  50DF               	movf	indf2,w,c
  2112  0018C0  0100               	movlb	0	; () banked
  2113  0018C2  0100               	movlb	0	; () banked
  2114  0018C4  19C8               	xorwf	I2cData@RxBytes& (0+255),w,b
  2115  0018C6  0BF0               	andlw	-16
  2116  0018C8  0100               	movlb	0	; () banked
  2117  0018CA  19C8               	xorwf	I2cData@RxBytes& (0+255),w,b
  2118  0018CC  6EDF               	movwf	indf2,c
  2119                           
  2120                           ;myi2c.c: 319: I2c[DevPtr].Done = 0;
  2121  0018CE  0100               	movlb	0	; () banked
  2122  0018D0  0100               	movlb	0	; () banked
  2123  0018D2  51CA               	movf	I2cData@DevPtr& (0+255),w,b
  2124  0018D4  0D0A               	mullw	10
  2125  0018D6  0E01               	movlw	1
  2126  0018D8  26F3               	addwf	prodl,f,c
  2127  0018DA  0E00               	movlw	0
  2128  0018DC  22F4               	addwfc	prodh,f,c
  2129  0018DE  0E56               	movlw	low _I2c
  2130  0018E0  24F3               	addwf	prodl,w,c
  2131  0018E2  6ED9               	movwf	fsr2l,c
  2132  0018E4  0E00               	movlw	high _I2c
  2133  0018E6  20F4               	addwfc	prodh,w,c
  2134  0018E8  6EDA               	movwf	fsr2h,c
  2135  0018EA  0E00               	movlw	0
  2136  0018EC  6EDF               	movwf	indf2,c
  2137                           
  2138                           ; BSR set to: 0
  2139  0018EE  0012               	return	
  2140  0018F0                     __end_of_I2cData:
  2141                           	opt stack 0
  2142                           tblptru	equ	0xFF8
  2143                           tblptrh	equ	0xFF7
  2144                           tblptrl	equ	0xFF6
  2145                           tablat	equ	0xFF5
  2146                           prodh	equ	0xFF4
  2147                           prodl	equ	0xFF3
  2148                           intcon	equ	0xFF2
  2149                           postinc0	equ	0xFEE
  2150                           wreg	equ	0xFE8
  2151                           postdec1	equ	0xFE5
  2152                           fsr1l	equ	0xFE1
  2153                           indf2	equ	0xFDF
  2154                           fsr2h	equ	0xFDA
  2155                           fsr2l	equ	0xFD9
  2156                           status	equ	0xFD8
  2157                           
  2158 ;; *************** function _I2cBuffChk *****************
  2159 ;; Defined at:
  2160 ;;		line 304 in file "../myi2c.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  I2cDevice       1    wreg     unsigned char 
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;  I2cDevice       1    2[BANK0 ] unsigned char 
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  1    wreg      unsigned char 
  2167 ;; Registers used:
  2168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2175 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2176 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2178 ;;Total ram usage:        3 bytes
  2179 ;; Hardware stack levels used:    1
  2180 ;; Hardware stack levels required when called:    5
  2181 ;; This function calls:
  2182 ;;		Nothing
  2183 ;; This function is called by:
  2184 ;;		_main
  2185 ;;		_RtcWriteTime
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           	psect	text9
  2190  001C9A                     __ptext9:
  2191                           	opt stack 0
  2192  001C9A                     _I2cBuffChk:
  2193                           	opt stack 24
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;incstack = 0
  2197                           ;I2cBuffChk@I2cDevice stored from wreg
  2198  001C9A  CFE8 F0C5          	movff	wreg,I2cBuffChk@I2cDevice
  2199                           
  2200                           ;myi2c.c: 306: return(!I2c[I2cDevice].Flag.Tx && !I2c[I2cDevice].Flag.Rx);
  2201  001C9E  0100               	movlb	0	; () banked
  2202  001CA0  6FC3               	movwf	??_I2cBuffChk& (0+255),b
  2203  001CA2  0E00               	movlw	0
  2204  001CA4  0100               	movlb	0	; () banked
  2205  001CA6  0100               	movlb	0	; () banked
  2206  001CA8  6FC4               	movwf	_I2cBuffChk$1337& (0+255),b
  2207  001CAA  0100               	movlb	0	; () banked
  2208  001CAC  51C3               	movf	??_I2cBuffChk& (0+255),w,b
  2209                           
  2210                           ; BSR set to: 0
  2211  001CAE  0100               	movlb	0	; () banked
  2212  001CB0  0100               	movlb	0	; () banked
  2213  001CB2  51C5               	movf	I2cBuffChk@I2cDevice& (0+255),w,b
  2214  001CB4  0D0A               	mullw	10
  2215  001CB6  0E56               	movlw	low _I2c
  2216  001CB8  24F3               	addwf	prodl,w,c
  2217  001CBA  6ED9               	movwf	fsr2l,c
  2218  001CBC  0E00               	movlw	high _I2c
  2219  001CBE  20F4               	addwfc	prodh,w,c
  2220  001CC0  6EDA               	movwf	fsr2h,c
  2221  001CC2  38DF               	swapf	indf2,w,c
  2222  001CC4  0B0F               	andlw	15
  2223  001CC6  0900               	iorlw	0
  2224  001CC8  A4D8               	btfss	status,2,c
  2225  001CCA  D017               	goto	l2587
  2226                           
  2227                           ; BSR set to: 0
  2228  001CCC  0100               	movlb	0	; () banked
  2229  001CCE  0100               	movlb	0	; () banked
  2230  001CD0  51C5               	movf	I2cBuffChk@I2cDevice& (0+255),w,b
  2231  001CD2  0D0A               	mullw	10
  2232  001CD4  0E56               	movlw	low _I2c
  2233  001CD6  24F3               	addwf	prodl,w,c
  2234  001CD8  6ED9               	movwf	fsr2l,c
  2235  001CDA  0E00               	movlw	high _I2c
  2236  001CDC  20F4               	addwfc	prodh,w,c
  2237  001CDE  6EDA               	movwf	fsr2h,c
  2238  001CE0  50DF               	movf	indf2,w,c
  2239  001CE2  0B0F               	andlw	15
  2240  001CE4  0900               	iorlw	0
  2241  001CE6  A4D8               	btfss	status,2,c
  2242  001CE8  D008               	goto	l2587
  2243                           
  2244                           ; BSR set to: 0
  2245  001CEA  0100               	movlb	0	; () banked
  2246  001CEC  6FC3               	movwf	??_I2cBuffChk& (0+255),b
  2247  001CEE  0E01               	movlw	1
  2248  001CF0  0100               	movlb	0	; () banked
  2249  001CF2  0100               	movlb	0	; () banked
  2250  001CF4  6FC4               	movwf	_I2cBuffChk$1337& (0+255),b
  2251  001CF6  0100               	movlb	0	; () banked
  2252  001CF8  51C3               	movf	??_I2cBuffChk& (0+255),w,b
  2253  001CFA                     l2587:
  2254                           
  2255                           ; BSR set to: 0
  2256  001CFA  0100               	movlb	0	; () banked
  2257  001CFC  0100               	movlb	0	; () banked
  2258  001CFE  51C4               	movf	_I2cBuffChk$1337& (0+255),w,b
  2259                           
  2260                           ; BSR set to: 0
  2261                           
  2262                           ; BSR set to: 0
  2263  001D00  0012               	return	
  2264  001D02                     __end_of_I2cBuffChk:
  2265                           	opt stack 0
  2266                           tblptru	equ	0xFF8
  2267                           tblptrh	equ	0xFF7
  2268                           tblptrl	equ	0xFF6
  2269                           tablat	equ	0xFF5
  2270                           prodh	equ	0xFF4
  2271                           prodl	equ	0xFF3
  2272                           intcon	equ	0xFF2
  2273                           postinc0	equ	0xFEE
  2274                           wreg	equ	0xFE8
  2275                           postdec1	equ	0xFE5
  2276                           fsr1l	equ	0xFE1
  2277                           indf2	equ	0xFDF
  2278                           fsr2h	equ	0xFDA
  2279                           fsr2l	equ	0xFD9
  2280                           status	equ	0xFD8
  2281                           
  2282 ;; *************** function _RtcReadTime *****************
  2283 ;; Defined at:
  2284 ;;		line 185 in file "../WordClock.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;		None
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;  Tens            1    1[BANK0 ] unsigned char 
  2289 ;;  Units           1    0[BANK0 ] unsigned char 
  2290 ;; Return value:  Size  Location     Type
  2291 ;;		None               void
  2292 ;; Registers used:
  2293 ;;		wreg, status,2, status,0, prodl, prodh
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2300 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2302 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2303 ;;Total ram usage:        2 bytes
  2304 ;; Hardware stack levels used:    1
  2305 ;; Hardware stack levels required when called:    5
  2306 ;; This function calls:
  2307 ;;		Nothing
  2308 ;; This function is called by:
  2309 ;;		_main
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           	psect	text10
  2314  001B4A                     __ptext10:
  2315                           	opt stack 0
  2316  001B4A                     _RtcReadTime:
  2317                           	opt stack 25
  2318                           
  2319                           ;WordClock.c: 189: unsigned char Units;
  2320                           ;WordClock.c: 190: unsigned char Tens;
  2321                           ;WordClock.c: 192: Units=I2c[0].RxBuff[0]&0b00001111;
  2322                           
  2323                           ; BSR set to: 0
  2324                           ;incstack = 0
  2325  001B4A  5058               	movf	_I2c+2,w,c
  2326  001B4C  0B0F               	andlw	15
  2327  001B4E  0100               	movlb	0	; () banked
  2328  001B50  0100               	movlb	0	; () banked
  2329  001B52  6FC3               	movwf	RtcReadTime@Units& (0+255),b
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;WordClock.c: 193: Tens=((I2c[0].RxBuff[0]&0b01110000)>>4)*10;
  2333  001B54  3858               	swapf	_I2c+2,w,c
  2334  001B56  0B0F               	andlw	15
  2335  001B58  0B07               	andlw	7
  2336  001B5A  0D0A               	mullw	10
  2337  001B5C  CFF3 F0C4          	movff	prodl,RtcReadTime@Tens
  2338                           
  2339                           ; BSR set to: 0
  2340                           ;WordClock.c: 194: Sec=Units + Tens;
  2341  001B60  0100               	movlb	0	; () banked
  2342  001B62  0100               	movlb	0	; () banked
  2343  001B64  51C3               	movf	RtcReadTime@Units& (0+255),w,b
  2344  001B66  0100               	movlb	0	; () banked
  2345  001B68  0100               	movlb	0	; () banked
  2346  001B6A  25C4               	addwf	RtcReadTime@Tens& (0+255),w,b
  2347  001B6C  0100               	movlb	0	; () banked
  2348  001B6E  0100               	movlb	0	; () banked
  2349  001B70  6F86               	movwf	_Sec& (0+255),b
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;WordClock.c: 196: Units=I2c[0].RxBuff[1]&0b00001111;
  2353  001B72  5059               	movf	_I2c+3,w,c
  2354  001B74  0B0F               	andlw	15
  2355  001B76  0100               	movlb	0	; () banked
  2356  001B78  0100               	movlb	0	; () banked
  2357  001B7A  6FC3               	movwf	RtcReadTime@Units& (0+255),b
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;WordClock.c: 197: Tens=((I2c[0].RxBuff[1]&0b01110000)>>4)*10;
  2361  001B7C  3859               	swapf	_I2c+3,w,c
  2362  001B7E  0B0F               	andlw	15
  2363  001B80  0B07               	andlw	7
  2364  001B82  0D0A               	mullw	10
  2365  001B84  CFF3 F0C4          	movff	prodl,RtcReadTime@Tens
  2366                           
  2367                           ;WordClock.c: 198: Min=Units + Tens;
  2368  001B88  0100               	movlb	0	; () banked
  2369  001B8A  0100               	movlb	0	; () banked
  2370  001B8C  51C3               	movf	RtcReadTime@Units& (0+255),w,b
  2371  001B8E  0100               	movlb	0	; () banked
  2372  001B90  0100               	movlb	0	; () banked
  2373  001B92  25C4               	addwf	RtcReadTime@Tens& (0+255),w,b
  2374  001B94  0100               	movlb	0	; () banked
  2375  001B96  0100               	movlb	0	; () banked
  2376  001B98  6F81               	movwf	_Min& (0+255),b
  2377                           
  2378                           ;WordClock.c: 200: Units=I2c[0].RxBuff[2]&0b00001111;
  2379  001B9A  505A               	movf	_I2c+4,w,c
  2380  001B9C  0B0F               	andlw	15
  2381  001B9E  0100               	movlb	0	; () banked
  2382  001BA0  0100               	movlb	0	; () banked
  2383  001BA2  6FC3               	movwf	RtcReadTime@Units& (0+255),b
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;WordClock.c: 201: Tens=((I2c[0].RxBuff[2]&0b00010000)>>4)*10;
  2387  001BA4  385A               	swapf	_I2c+4,w,c
  2388  001BA6  0B0F               	andlw	15
  2389  001BA8  0B01               	andlw	1
  2390  001BAA  0D0A               	mullw	10
  2391  001BAC  CFF3 F0C4          	movff	prodl,RtcReadTime@Tens
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;WordClock.c: 202: Hour=Units + Tens;
  2395  001BB0  0100               	movlb	0	; () banked
  2396  001BB2  0100               	movlb	0	; () banked
  2397  001BB4  51C3               	movf	RtcReadTime@Units& (0+255),w,b
  2398  001BB6  0100               	movlb	0	; () banked
  2399  001BB8  0100               	movlb	0	; () banked
  2400  001BBA  25C4               	addwf	RtcReadTime@Tens& (0+255),w,b
  2401  001BBC  0100               	movlb	0	; () banked
  2402  001BBE  0100               	movlb	0	; () banked
  2403  001BC0  6F80               	movwf	_Hour& (0+255),b
  2404                           
  2405                           ; BSR set to: 0
  2406  001BC2  0012               	return	
  2407  001BC4                     __end_of_RtcReadTime:
  2408                           	opt stack 0
  2409                           tblptru	equ	0xFF8
  2410                           tblptrh	equ	0xFF7
  2411                           tblptrl	equ	0xFF6
  2412                           tablat	equ	0xFF5
  2413                           prodh	equ	0xFF4
  2414                           prodl	equ	0xFF3
  2415                           intcon	equ	0xFF2
  2416                           postinc0	equ	0xFEE
  2417                           wreg	equ	0xFE8
  2418                           postdec1	equ	0xFE5
  2419                           fsr1l	equ	0xFE1
  2420                           indf2	equ	0xFDF
  2421                           fsr2h	equ	0xFDA
  2422                           fsr2l	equ	0xFD9
  2423                           status	equ	0xFD8
  2424                           
  2425 ;; *************** function _InterruptSettings *****************
  2426 ;; Defined at:
  2427 ;;		line 111 in file "../settings.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;		None
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;		None
  2432 ;; Return value:  Size  Location     Type
  2433 ;;		None               void
  2434 ;; Registers used:
  2435 ;;		None
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2445 ;;Total ram usage:        0 bytes
  2446 ;; Hardware stack levels used:    1
  2447 ;; Hardware stack levels required when called:    5
  2448 ;; This function calls:
  2449 ;;		Nothing
  2450 ;; This function is called by:
  2451 ;;		_main
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           	psect	text11
  2456  00200C                     __ptext11:
  2457                           	opt stack 0
  2458  00200C                     _InterruptSettings:
  2459                           	opt stack 25
  2460                           
  2461                           ;settings.c: 113: RCONbits.IPEN=1;
  2462                           
  2463                           ; BSR set to: 0
  2464                           ;incstack = 0
  2465  00200C  8ED0               	bsf	4048,7,c	;volatile
  2466                           
  2467                           ;settings.c: 115: INTCON2bits.TMR0IP=0;
  2468  00200E  94F1               	bcf	intcon2,2,c	;volatile
  2469                           
  2470                           ;settings.c: 116: INTCONbits.TMR0IF = 0;
  2471  002010  94F2               	bcf	intcon,2,c	;volatile
  2472                           
  2473                           ;settings.c: 117: INTCONbits.TMR0IE=1;
  2474  002012  8AF2               	bsf	intcon,5,c	;volatile
  2475                           
  2476                           ;settings.c: 119: INTCON2bits.INTEDG0=0;
  2477  002014  9CF1               	bcf	intcon2,6,c	;volatile
  2478                           
  2479                           ;settings.c: 120: INTCONbits.INT0IF = 0;
  2480  002016  92F2               	bcf	intcon,1,c	;volatile
  2481                           
  2482                           ;settings.c: 121: INTCONbits.INT0IE=1;
  2483  002018  88F2               	bsf	intcon,4,c	;volatile
  2484                           
  2485                           ;settings.c: 123: IPR1bits.TMR1IP=1;
  2486  00201A  809F               	bsf	3999,0,c	;volatile
  2487                           
  2488                           ;settings.c: 124: PIR1bits.TMR1IF = 0;
  2489  00201C  909E               	bcf	3998,0,c	;volatile
  2490                           
  2491                           ;settings.c: 125: PIE1bits.TMR1IE=1;
  2492  00201E  809D               	bsf	3997,0,c	;volatile
  2493  002020  0012               	return	
  2494  002022                     __end_of_InterruptSettings:
  2495                           	opt stack 0
  2496                           tblptru	equ	0xFF8
  2497                           tblptrh	equ	0xFF7
  2498                           tblptrl	equ	0xFF6
  2499                           tablat	equ	0xFF5
  2500                           prodh	equ	0xFF4
  2501                           prodl	equ	0xFF3
  2502                           intcon	equ	0xFF2
  2503                           intcon2	equ	0xFF1
  2504                           postinc0	equ	0xFEE
  2505                           wreg	equ	0xFE8
  2506                           postdec1	equ	0xFE5
  2507                           fsr1l	equ	0xFE1
  2508                           indf2	equ	0xFDF
  2509                           fsr2h	equ	0xFDA
  2510                           fsr2l	equ	0xFD9
  2511                           status	equ	0xFD8
  2512                           
  2513 ;; *************** function _I2cSettings *****************
  2514 ;; Defined at:
  2515 ;;		line 84 in file "../myi2c.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;		None
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;		None
  2520 ;; Return value:  Size  Location     Type
  2521 ;;		None               void
  2522 ;; Registers used:
  2523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2531 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2532 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2533 ;;Total ram usage:        4 bytes
  2534 ;; Hardware stack levels used:    1
  2535 ;; Hardware stack levels required when called:    6
  2536 ;; This function calls:
  2537 ;;		_OpenI2C
  2538 ;;		___wmul
  2539 ;; This function is called by:
  2540 ;;		_main
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text12
  2545  00101A                     __ptext12:
  2546                           	opt stack 0
  2547  00101A                     _I2cSettings:
  2548                           	opt stack 24
  2549                           
  2550                           ;myi2c.c: 86: OpenI2C(0b00001000, 0b10000000);
  2551                           
  2552                           ;incstack = 0
  2553  00101A  0100               	movlb	0	; () banked
  2554  00101C  6FC9               	movwf	??_I2cSettings& (0+255),b
  2555  00101E  0E80               	movlw	128
  2556  001020  0100               	movlb	0	; () banked
  2557  001022  0100               	movlb	0	; () banked
  2558  001024  6FC3               	movwf	OpenI2C@slew& (0+255),b
  2559  001026  0100               	movlb	0	; () banked
  2560  001028  51C9               	movf	??_I2cSettings& (0+255),w,b
  2561  00102A  0E08               	movlw	8
  2562  00102C  EC9A  F00F         	call	_OpenI2C
  2563                           
  2564                           ;myi2c.c: 87: SSPADD=99;
  2565  001030  0E63               	movlw	99
  2566  001032  6EC8               	movwf	4040,c	;volatile
  2567                           
  2568                           ;myi2c.c: 91: IPR1bits.SSPIP=1;
  2569  001034  869F               	bsf	3999,3,c	;volatile
  2570                           
  2571                           ;myi2c.c: 92: IPR2bits.BCLIP=1;
  2572  001036  86A2               	bsf	4002,3,c	;volatile
  2573                           
  2574                           ;myi2c.c: 93: PIR1bits.SSPIF=0;
  2575  001038  969E               	bcf	3998,3,c	;volatile
  2576                           
  2577                           ;myi2c.c: 94: PIE1bits.SSPIE=1;
  2578  00103A  869D               	bsf	3997,3,c	;volatile
  2579                           
  2580                           ;myi2c.c: 95: PIE2bits.BCLIE=1;
  2581  00103C  86A0               	bsf	4000,3,c	;volatile
  2582                           
  2583                           ;myi2c.c: 98: I2cBusCollFlag = 0;
  2584  00103E  0100               	movlb	0	; () banked
  2585  001040  6FC9               	movwf	??_I2cSettings& (0+255),b
  2586  001042  0E00               	movlw	0
  2587  001044  6E49               	movwf	_I2cBusCollFlag,c
  2588  001046  0100               	movlb	0	; () banked
  2589  001048  51C9               	movf	??_I2cSettings& (0+255),w,b
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;myi2c.c: 99: I2cEventFlag = 0;
  2593  00104A  0100               	movlb	0	; () banked
  2594  00104C  6FC9               	movwf	??_I2cSettings& (0+255),b
  2595  00104E  0E00               	movlw	0
  2596  001050  6E4C               	movwf	_I2cEventFlag,c
  2597  001052  0100               	movlb	0	; () banked
  2598  001054  51C9               	movf	??_I2cSettings& (0+255),w,b
  2599                           
  2600                           ; BSR set to: 0
  2601                           ;myi2c.c: 100: I2cBusyFlag = 0;
  2602  001056  0100               	movlb	0	; () banked
  2603  001058  6FC9               	movwf	??_I2cSettings& (0+255),b
  2604  00105A  0E00               	movlw	0
  2605  00105C  6E4A               	movwf	_I2cBusyFlag,c
  2606  00105E  0100               	movlb	0	; () banked
  2607  001060  51C9               	movf	??_I2cSettings& (0+255),w,b
  2608                           
  2609                           ; BSR set to: 0
  2610                           ;myi2c.c: 101: for (i=0; i<1; i++)
  2611  001062  0E00               	movlw	0
  2612  001064  6E43               	movwf	_i+1,c
  2613  001066  0E00               	movlw	0
  2614  001068  6E42               	movwf	_i,c
  2615  00106A                     
  2616                           ; BSR set to: 0
  2617  00106A  5043               	movf	_i+1,w,c
  2618  00106C  0A80               	xorlw	128
  2619  00106E  0F80               	addlw	-128
  2620  001070  0E01               	movlw	1
  2621  001072  B4D8               	btfsc	status,2,c
  2622  001074  5C42               	subwf	_i,w,c
  2623  001076  B0D8               	btfsc	status,0,c
  2624  001078  D0D7               	goto	l292
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;myi2c.c: 102: {
  2628                           ;myi2c.c: 103: I2c[i].Flag.Tx = 0;
  2629                           
  2630                           ; BSR set to: 0
  2631                           
  2632                           ; BSR set to: 0
  2633  00107A  C042  F0C3         	movff	_i,___wmul@multiplier
  2634  00107E  C043  F0C4         	movff	_i+1,___wmul@multiplier+1
  2635  001082  0E00               	movlw	0
  2636  001084  0100               	movlb	0	; () banked
  2637  001086  0100               	movlb	0	; () banked
  2638  001088  6FC6               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2639  00108A  0E0A               	movlw	10
  2640  00108C  0100               	movlb	0	; () banked
  2641  00108E  6FC5               	movwf	___wmul@multiplicand& (0+255),b
  2642  001090  ECE6  F00E         	call	___wmul	;wreg free
  2643  001094  0E56               	movlw	low _I2c
  2644  001096  0100               	movlb	0	; () banked
  2645  001098  0100               	movlb	0	; () banked
  2646  00109A  25C3               	addwf	?___wmul& (0+255),w,b
  2647  00109C  6ED9               	movwf	fsr2l,c
  2648  00109E  0E00               	movlw	high _I2c
  2649  0010A0  0100               	movlb	0	; () banked
  2650  0010A2  0100               	movlb	0	; () banked
  2651  0010A4  21C4               	addwfc	(?___wmul+1)& (0+255),w,b
  2652  0010A6  6EDA               	movwf	fsr2h,c
  2653  0010A8  98DF               	bcf	indf2,4,c
  2654  0010AA  9ADF               	bcf	indf2,5,c
  2655  0010AC  9CDF               	bcf	indf2,6,c
  2656  0010AE  9EDF               	bcf	indf2,7,c
  2657                           
  2658                           ;myi2c.c: 104: I2c[i].Flag.Rx = 0;
  2659  0010B0  C042  F0C3         	movff	_i,___wmul@multiplier
  2660  0010B4  C043  F0C4         	movff	_i+1,___wmul@multiplier+1
  2661  0010B8  0E00               	movlw	0
  2662  0010BA  0100               	movlb	0	; () banked
  2663  0010BC  0100               	movlb	0	; () banked
  2664  0010BE  6FC6               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2665  0010C0  0E0A               	movlw	10
  2666  0010C2  0100               	movlb	0	; () banked
  2667  0010C4  6FC5               	movwf	___wmul@multiplicand& (0+255),b
  2668  0010C6  ECE6  F00E         	call	___wmul	;wreg free
  2669  0010CA  0E56               	movlw	low _I2c
  2670  0010CC  0100               	movlb	0	; () banked
  2671  0010CE  0100               	movlb	0	; () banked
  2672  0010D0  25C3               	addwf	?___wmul& (0+255),w,b
  2673  0010D2  6ED9               	movwf	fsr2l,c
  2674  0010D4  0E00               	movlw	high _I2c
  2675  0010D6  0100               	movlb	0	; () banked
  2676  0010D8  0100               	movlb	0	; () banked
  2677  0010DA  21C4               	addwfc	(?___wmul+1)& (0+255),w,b
  2678  0010DC  6EDA               	movwf	fsr2h,c
  2679  0010DE  90DF               	bcf	indf2,0,c
  2680  0010E0  92DF               	bcf	indf2,1,c
  2681  0010E2  94DF               	bcf	indf2,2,c
  2682  0010E4  96DF               	bcf	indf2,3,c
  2683                           
  2684                           ;myi2c.c: 105: I2c[i].Done = 0;
  2685  0010E6  C042  F0C3         	movff	_i,___wmul@multiplier
  2686  0010EA  C043  F0C4         	movff	_i+1,___wmul@multiplier+1
  2687  0010EE  0E00               	movlw	0
  2688  0010F0  0100               	movlb	0	; () banked
  2689  0010F2  0100               	movlb	0	; () banked
  2690  0010F4  6FC6               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2691  0010F6  0E0A               	movlw	10
  2692  0010F8  0100               	movlb	0	; () banked
  2693  0010FA  6FC5               	movwf	___wmul@multiplicand& (0+255),b
  2694  0010FC  ECE6  F00E         	call	___wmul	;wreg free
  2695  001100  0E01               	movlw	1
  2696  001102  0100               	movlb	0	; () banked
  2697  001104  0100               	movlb	0	; () banked
  2698  001106  27C3               	addwf	?___wmul& (0+255),f,b
  2699  001108  0E00               	movlw	0
  2700  00110A  0100               	movlb	0	; () banked
  2701  00110C  23C4               	addwfc	(?___wmul+1)& (0+255),f,b
  2702  00110E  0E56               	movlw	low _I2c
  2703  001110  0100               	movlb	0	; () banked
  2704  001112  0100               	movlb	0	; () banked
  2705  001114  25C3               	addwf	?___wmul& (0+255),w,b
  2706  001116  6ED9               	movwf	fsr2l,c
  2707  001118  0E00               	movlw	high _I2c
  2708  00111A  0100               	movlb	0	; () banked
  2709  00111C  0100               	movlb	0	; () banked
  2710  00111E  21C4               	addwfc	(?___wmul+1)& (0+255),w,b
  2711  001120  6EDA               	movwf	fsr2h,c
  2712  001122  0E00               	movlw	0
  2713  001124  6EDF               	movwf	indf2,c
  2714                           
  2715                           ; BSR set to: 0
  2716                           ;myi2c.c: 106: for (j=0; j<=1; j++)
  2717  001126  0E00               	movlw	0
  2718  001128  6E45               	movwf	_j+1,c
  2719  00112A  0E00               	movlw	0
  2720  00112C  6E44               	movwf	_j,c
  2721  00112E                     
  2722                           ; BSR set to: 0
  2723  00112E  5045               	movf	_j+1,w,c
  2724  001130  0A80               	xorlw	128
  2725  001132  0F80               	addlw	-128
  2726  001134  0E02               	movlw	2
  2727  001136  B4D8               	btfsc	status,2,c
  2728  001138  5C44               	subwf	_j,w,c
  2729  00113A  B0D8               	btfsc	status,0,c
  2730  00113C  D033               	goto	l2755
  2731                           
  2732                           ; BSR set to: 0
  2733                           ;myi2c.c: 107: {
  2734                           ;myi2c.c: 108: I2c[i].RxBuff[j] = 0;
  2735                           
  2736                           ; BSR set to: 0
  2737                           
  2738                           ; BSR set to: 0
  2739  00113E  C042  F0C3         	movff	_i,___wmul@multiplier
  2740  001142  C043  F0C4         	movff	_i+1,___wmul@multiplier+1
  2741  001146  0E00               	movlw	0
  2742  001148  0100               	movlb	0	; () banked
  2743  00114A  0100               	movlb	0	; () banked
  2744  00114C  6FC6               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2745  00114E  0E0A               	movlw	10
  2746  001150  0100               	movlb	0	; () banked
  2747  001152  6FC5               	movwf	___wmul@multiplicand& (0+255),b
  2748  001154  ECE6  F00E         	call	___wmul	;wreg free
  2749  001158  0E02               	movlw	2
  2750  00115A  2444               	addwf	_j,w,c
  2751  00115C  0100               	movlb	0	; () banked
  2752  00115E  6FC9               	movwf	??_I2cSettings& (0+255),b
  2753  001160  0E00               	movlw	0
  2754  001162  2045               	addwfc	_j+1,w,c
  2755  001164  0100               	movlb	0	; () banked
  2756  001166  6FCA               	movwf	(??_I2cSettings+1)& (0+255),b
  2757  001168  0E56               	movlw	low _I2c
  2758  00116A  0100               	movlb	0	; () banked
  2759  00116C  6FCB               	movwf	(??_I2cSettings+2)& (0+255),b
  2760  00116E  0E00               	movlw	high _I2c
  2761  001170  6FCC               	movwf	(??_I2cSettings+3)& (0+255),b
  2762  001172  0100               	movlb	0	; () banked
  2763  001174  51C9               	movf	??_I2cSettings& (0+255),w,b
  2764  001176  0100               	movlb	0	; () banked
  2765  001178  27CB               	addwf	(??_I2cSettings+2)& (0+255),f,b
  2766  00117A  0100               	movlb	0	; () banked
  2767  00117C  51CA               	movf	(??_I2cSettings+1)& (0+255),w,b
  2768  00117E  0100               	movlb	0	; () banked
  2769  001180  23CC               	addwfc	(??_I2cSettings+3)& (0+255),f,b
  2770  001182  0100               	movlb	0	; () banked
  2771  001184  0100               	movlb	0	; () banked
  2772  001186  51C3               	movf	?___wmul& (0+255),w,b
  2773  001188  0100               	movlb	0	; () banked
  2774  00118A  25CB               	addwf	(??_I2cSettings+2)& (0+255),w,b
  2775  00118C  6ED9               	movwf	fsr2l,c
  2776  00118E  0100               	movlb	0	; () banked
  2777  001190  0100               	movlb	0	; () banked
  2778  001192  51C4               	movf	(?___wmul+1)& (0+255),w,b
  2779  001194  0100               	movlb	0	; () banked
  2780  001196  21CC               	addwfc	(??_I2cSettings+3)& (0+255),w,b
  2781  001198  6EDA               	movwf	fsr2h,c
  2782  00119A  0E00               	movlw	0
  2783  00119C  6EDF               	movwf	indf2,c
  2784                           
  2785                           ; BSR set to: 0
  2786  00119E  4A44               	infsnz	_j,f,c
  2787  0011A0  2A45               	incf	_j+1,f,c
  2788  0011A2  D7C5               	goto	L1
  2789  0011A4                     l2755:
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;myi2c.c: 109: }
  2793                           ;myi2c.c: 111: for (j=0; j<=3; j++)
  2794  0011A4  0E00               	movlw	0
  2795  0011A6  6E45               	movwf	_j+1,c
  2796  0011A8  0E00               	movlw	0
  2797  0011AA  6E44               	movwf	_j,c
  2798  0011AC                     
  2799                           ; BSR set to: 0
  2800  0011AC  5045               	movf	_j+1,w,c
  2801  0011AE  0A80               	xorlw	128
  2802  0011B0  0F80               	addlw	-128
  2803  0011B2  0E04               	movlw	4
  2804  0011B4  B4D8               	btfsc	status,2,c
  2805  0011B6  5C44               	subwf	_j,w,c
  2806  0011B8  B0D8               	btfsc	status,0,c
  2807  0011BA  D033               	goto	l2767
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;myi2c.c: 112: {
  2811                           ;myi2c.c: 113: I2c[i].TxBuff[j] = 0;
  2812                           
  2813                           ; BSR set to: 0
  2814                           
  2815                           ; BSR set to: 0
  2816  0011BC  C042  F0C3         	movff	_i,___wmul@multiplier
  2817  0011C0  C043  F0C4         	movff	_i+1,___wmul@multiplier+1
  2818  0011C4  0E00               	movlw	0
  2819  0011C6  0100               	movlb	0	; () banked
  2820  0011C8  0100               	movlb	0	; () banked
  2821  0011CA  6FC6               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2822  0011CC  0E0A               	movlw	10
  2823  0011CE  0100               	movlb	0	; () banked
  2824  0011D0  6FC5               	movwf	___wmul@multiplicand& (0+255),b
  2825  0011D2  ECE6  F00E         	call	___wmul	;wreg free
  2826  0011D6  0E06               	movlw	6
  2827  0011D8  2444               	addwf	_j,w,c
  2828  0011DA  0100               	movlb	0	; () banked
  2829  0011DC  6FC9               	movwf	??_I2cSettings& (0+255),b
  2830  0011DE  0E00               	movlw	0
  2831  0011E0  2045               	addwfc	_j+1,w,c
  2832  0011E2  0100               	movlb	0	; () banked
  2833  0011E4  6FCA               	movwf	(??_I2cSettings+1)& (0+255),b
  2834  0011E6  0E56               	movlw	low _I2c
  2835  0011E8  0100               	movlb	0	; () banked
  2836  0011EA  6FCB               	movwf	(??_I2cSettings+2)& (0+255),b
  2837  0011EC  0E00               	movlw	high _I2c
  2838  0011EE  6FCC               	movwf	(??_I2cSettings+3)& (0+255),b
  2839  0011F0  0100               	movlb	0	; () banked
  2840  0011F2  51C9               	movf	??_I2cSettings& (0+255),w,b
  2841  0011F4  0100               	movlb	0	; () banked
  2842  0011F6  27CB               	addwf	(??_I2cSettings+2)& (0+255),f,b
  2843  0011F8  0100               	movlb	0	; () banked
  2844  0011FA  51CA               	movf	(??_I2cSettings+1)& (0+255),w,b
  2845  0011FC  0100               	movlb	0	; () banked
  2846  0011FE  23CC               	addwfc	(??_I2cSettings+3)& (0+255),f,b
  2847  001200  0100               	movlb	0	; () banked
  2848  001202  0100               	movlb	0	; () banked
  2849  001204  51C3               	movf	?___wmul& (0+255),w,b
  2850  001206  0100               	movlb	0	; () banked
  2851  001208  25CB               	addwf	(??_I2cSettings+2)& (0+255),w,b
  2852  00120A  6ED9               	movwf	fsr2l,c
  2853  00120C  0100               	movlb	0	; () banked
  2854  00120E  0100               	movlb	0	; () banked
  2855  001210  51C4               	movf	(?___wmul+1)& (0+255),w,b
  2856  001212  0100               	movlb	0	; () banked
  2857  001214  21CC               	addwfc	(??_I2cSettings+3)& (0+255),w,b
  2858  001216  6EDA               	movwf	fsr2h,c
  2859  001218  0E00               	movlw	0
  2860  00121A  6EDF               	movwf	indf2,c
  2861                           
  2862                           ; BSR set to: 0
  2863  00121C  4A44               	infsnz	_j,f,c
  2864  00121E  2A45               	incf	_j+1,f,c
  2865  001220  D7C5               	goto	L2
  2866  001222                     l2767:
  2867                           
  2868                           ; BSR set to: 0
  2869  001222  4A42               	infsnz	_i,f,c
  2870  001224  2A43               	incf	_i+1,f,c
  2871  001226  D721               	goto	L3
  2872  001228                     l292:
  2873                           
  2874                           ; BSR set to: 0
  2875  001228  0012               	return	
  2876  00122A                     __end_of_I2cSettings:
  2877                           	opt stack 0
  2878                           tblptru	equ	0xFF8
  2879                           tblptrh	equ	0xFF7
  2880                           tblptrl	equ	0xFF6
  2881                           tablat	equ	0xFF5
  2882                           prodh	equ	0xFF4
  2883                           prodl	equ	0xFF3
  2884                           intcon	equ	0xFF2
  2885                           intcon2	equ	0xFF1
  2886                           postinc0	equ	0xFEE
  2887                           wreg	equ	0xFE8
  2888                           postdec1	equ	0xFE5
  2889                           fsr1l	equ	0xFE1
  2890                           indf2	equ	0xFDF
  2891                           fsr2h	equ	0xFDA
  2892                           fsr2l	equ	0xFD9
  2893                           status	equ	0xFD8
  2894                           
  2895 ;; *************** function ___wmul *****************
  2896 ;; Defined at:
  2897 ;;		line 3 in file "/Applications/microchip/xc8/v1.31/sources/common/wmul.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2900 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;  product         2    4[BANK0 ] unsigned int 
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  2    0[BANK0 ] unsigned int 
  2905 ;; Registers used:
  2906 ;;		wreg, status,2, status,0, prodl, prodh
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2912 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;Total ram usage:        6 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:    5
  2919 ;; This function calls:
  2920 ;;		Nothing
  2921 ;; This function is called by:
  2922 ;;		_I2cSettings
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text13
  2927  001DCC                     __ptext13:
  2928                           	opt stack 0
  2929  001DCC                     ___wmul:
  2930                           	opt stack 24
  2931                           
  2932                           ; BSR set to: 0
  2933                           ;incstack = 0
  2934  001DCC  0100               	movlb	0	; () banked
  2935  001DCE  0100               	movlb	0	; () banked
  2936  001DD0  51C3               	movf	___wmul@multiplier& (0+255),w,b
  2937  001DD2  0100               	movlb	0	; () banked
  2938  001DD4  0100               	movlb	0	; () banked
  2939  001DD6  03C5               	mulwf	___wmul@multiplicand& (0+255),b
  2940  001DD8  CFF3 F0C7          	movff	prodl,___wmul@product
  2941  001DDC  CFF4 F0C8          	movff	prodh,___wmul@product+1
  2942  001DE0  0100               	movlb	0	; () banked
  2943  001DE2  0100               	movlb	0	; () banked
  2944  001DE4  51C3               	movf	___wmul@multiplier& (0+255),w,b
  2945  001DE6  0100               	movlb	0	; () banked
  2946  001DE8  0100               	movlb	0	; () banked
  2947  001DEA  03C6               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2948  001DEC  CFF3 FFF4          	movff	prodl,prodh
  2949  001DF0  6AF3               	clrf	prodl,c
  2950  001DF2  50F3               	movf	prodl,w,c
  2951  001DF4  0100               	movlb	0	; () banked
  2952  001DF6  0100               	movlb	0	; () banked
  2953  001DF8  27C7               	addwf	___wmul@product& (0+255),f,b
  2954  001DFA  50F4               	movf	prodh,w,c
  2955  001DFC  0100               	movlb	0	; () banked
  2956  001DFE  0100               	movlb	0	; () banked
  2957  001E00  23C8               	addwfc	(___wmul@product+1)& (0+255),f,b
  2958  001E02  0100               	movlb	0	; () banked
  2959  001E04  0100               	movlb	0	; () banked
  2960  001E06  51C4               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2961  001E08  0100               	movlb	0	; () banked
  2962  001E0A  0100               	movlb	0	; () banked
  2963  001E0C  03C5               	mulwf	___wmul@multiplicand& (0+255),b
  2964  001E0E  CFF3 FFF4          	movff	prodl,prodh
  2965  001E12  6AF3               	clrf	prodl,c
  2966  001E14  50F3               	movf	prodl,w,c
  2967  001E16  0100               	movlb	0	; () banked
  2968  001E18  0100               	movlb	0	; () banked
  2969  001E1A  27C7               	addwf	___wmul@product& (0+255),f,b
  2970  001E1C  50F4               	movf	prodh,w,c
  2971  001E1E  0100               	movlb	0	; () banked
  2972  001E20  0100               	movlb	0	; () banked
  2973  001E22  23C8               	addwfc	(___wmul@product+1)& (0+255),f,b
  2974                           
  2975                           ; BSR set to: 0
  2976  001E24  C0C7  F0C3         	movff	___wmul@product,?___wmul
  2977  001E28  C0C8  F0C4         	movff	___wmul@product+1,?___wmul+1
  2978                           
  2979                           ; BSR set to: 0
  2980                           
  2981                           ; BSR set to: 0
  2982  001E2C  0012               	return	
  2983  001E2E                     __end_of___wmul:
  2984                           	opt stack 0
  2985                           tblptru	equ	0xFF8
  2986                           tblptrh	equ	0xFF7
  2987                           tblptrl	equ	0xFF6
  2988                           tablat	equ	0xFF5
  2989                           prodh	equ	0xFF4
  2990                           prodl	equ	0xFF3
  2991                           intcon	equ	0xFF2
  2992                           intcon2	equ	0xFF1
  2993                           postinc0	equ	0xFEE
  2994                           wreg	equ	0xFE8
  2995                           postdec1	equ	0xFE5
  2996                           fsr1l	equ	0xFE1
  2997                           indf2	equ	0xFDF
  2998                           fsr2h	equ	0xFDA
  2999                           fsr2l	equ	0xFD9
  3000                           status	equ	0xFD8
  3001                           
  3002 ;; *************** function _OpenI2C *****************
  3003 ;; Defined at:
  3004 ;;		line 14 in file "/Applications/microchip/xc8/v1.31/sources/pic18/plib/i2c/i2c_open.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;  sync_mode       1    wreg     unsigned char 
  3007 ;;  slew            1    0[BANK0 ] unsigned char 
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;  sync_mode       1    1[BANK0 ] unsigned char 
  3010 ;; Return value:  Size  Location     Type
  3011 ;;		None               void
  3012 ;; Registers used:
  3013 ;;		wreg, status,2, status,0
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3019 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3020 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3022 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;Total ram usage:        2 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; Hardware stack levels required when called:    5
  3026 ;; This function calls:
  3027 ;;		Nothing
  3028 ;; This function is called by:
  3029 ;;		_I2cSettings
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           	psect	text14
  3034  001F34                     __ptext14:
  3035                           	opt stack 0
  3036  001F34                     _OpenI2C:
  3037                           	opt stack 24
  3038                           
  3039                           ; BSR set to: 0
  3040                           ;incstack = 0
  3041                           ;OpenI2C@sync_mode stored from wreg
  3042  001F34  CFE8 F0C4          	movff	wreg,OpenI2C@sync_mode
  3043  001F38  0E3F               	movlw	63
  3044  001F3A  16C7               	andwf	4039,f,c	;volatile
  3045  001F3C  0E00               	movlw	0
  3046  001F3E  6EC6               	movwf	4038,c	;volatile
  3047  001F40  0E00               	movlw	0
  3048  001F42  6EC5               	movwf	4037,c	;volatile
  3049  001F44  0100               	movlb	0	; () banked
  3050  001F46  0100               	movlb	0	; () banked
  3051  001F48  51C4               	movf	OpenI2C@sync_mode& (0+255),w,b
  3052  001F4A  12C6               	iorwf	4038,f,c	;volatile
  3053  001F4C  0100               	movlb	0	; () banked
  3054  001F4E  0100               	movlb	0	; () banked
  3055  001F50  51C3               	movf	OpenI2C@slew& (0+255),w,b
  3056  001F52  12C7               	iorwf	4039,f,c	;volatile
  3057                           
  3058                           ; BSR set to: 0
  3059  001F54  8694               	bsf	3988,3,c	;volatile
  3060                           
  3061                           ; BSR set to: 0
  3062  001F56  8894               	bsf	3988,4,c	;volatile
  3063                           
  3064                           ; BSR set to: 0
  3065  001F58  8AC6               	bsf	4038,5,c	;volatile
  3066                           
  3067                           ; BSR set to: 0
  3068  001F5A  0012               	return	
  3069  001F5C                     __end_of_OpenI2C:
  3070                           	opt stack 0
  3071                           tblptru	equ	0xFF8
  3072                           tblptrh	equ	0xFF7
  3073                           tblptrl	equ	0xFF6
  3074                           tablat	equ	0xFF5
  3075                           prodh	equ	0xFF4
  3076                           prodl	equ	0xFF3
  3077                           intcon	equ	0xFF2
  3078                           intcon2	equ	0xFF1
  3079                           postinc0	equ	0xFEE
  3080                           wreg	equ	0xFE8
  3081                           postdec1	equ	0xFE5
  3082                           fsr1l	equ	0xFE1
  3083                           indf2	equ	0xFDF
  3084                           fsr2h	equ	0xFDA
  3085                           fsr2l	equ	0xFD9
  3086                           status	equ	0xFD8
  3087                           
  3088 ;; *************** function _CommSetting *****************
  3089 ;; Defined at:
  3090 ;;		line 7 in file "../comm.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;		None
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;		None
  3095 ;; Return value:  Size  Location     Type
  3096 ;;		None               void
  3097 ;; Registers used:
  3098 ;;		wreg, status,2
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;Total ram usage:        0 bytes
  3109 ;; Hardware stack levels used:    1
  3110 ;; Hardware stack levels required when called:    5
  3111 ;; This function calls:
  3112 ;;		Nothing
  3113 ;; This function is called by:
  3114 ;;		_main
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           	psect	text15
  3119  001F5C                     __ptext15:
  3120                           	opt stack 0
  3121  001F5C                     _CommSetting:
  3122                           	opt stack 25
  3123                           
  3124                           ;comm.c: 31: SPBRGH=0;
  3125                           
  3126                           ; BSR set to: 0
  3127                           ;incstack = 0
  3128  001F5C  0E00               	movlw	0
  3129  001F5E  6EB0               	movwf	4016,c	;volatile
  3130                           
  3131                           ;comm.c: 32: SPBRG=0x0411;
  3132  001F60  0E11               	movlw	17
  3133  001F62  6EAF               	movwf	4015,c	;volatile
  3134                           
  3135                           ;comm.c: 38: TXSTAbits.BRGH=1;
  3136  001F64  84AC               	bsf	4012,2,c	;volatile
  3137                           
  3138                           ;comm.c: 39: TXSTAbits.SYNC=0;
  3139  001F66  98AC               	bcf	4012,4,c	;volatile
  3140                           
  3141                           ;comm.c: 40: BAUDCONbits.BRG16=1;
  3142  001F68  86B8               	bsf	4024,3,c	;volatile
  3143                           
  3144                           ;comm.c: 43: RCSTAbits.SPEN=1;
  3145  001F6A  8EAB               	bsf	4011,7,c	;volatile
  3146                           
  3147                           ;comm.c: 44: RCSTAbits.CREN=1;
  3148  001F6C  88AB               	bsf	4011,4,c	;volatile
  3149                           
  3150                           ;comm.c: 45: RCSTAbits.SREN=0;
  3151  001F6E  9AAB               	bcf	4011,5,c	;volatile
  3152                           
  3153                           ;comm.c: 46: TXSTAbits.TX9=0;
  3154  001F70  9CAC               	bcf	4012,6,c	;volatile
  3155                           
  3156                           ;comm.c: 47: RCSTAbits.RX9=0;
  3157  001F72  9CAB               	bcf	4011,6,c	;volatile
  3158                           
  3159                           ;comm.c: 48: TXSTAbits.TXEN=0;
  3160  001F74  9AAC               	bcf	4012,5,c	;volatile
  3161                           
  3162                           ;comm.c: 49: TXSTAbits.TXEN=1;
  3163  001F76  8AAC               	bsf	4012,5,c	;volatile
  3164                           
  3165                           ;comm.c: 50: IPR1bits.TXIP=0;
  3166  001F78  989F               	bcf	3999,4,c	;volatile
  3167                           
  3168                           ;comm.c: 51: PIE1bits.TXIE=0;
  3169  001F7A  989D               	bcf	3997,4,c	;volatile
  3170                           
  3171                           ;comm.c: 53: IPR1bits.RCIP=0;
  3172  001F7C  9A9F               	bcf	3999,5,c	;volatile
  3173                           
  3174                           ;comm.c: 54: PIE1bits.RCIE=0;
  3175  001F7E  9A9D               	bcf	3997,5,c	;volatile
  3176  001F80  0012               	return	
  3177  001F82                     __end_of_CommSetting:
  3178                           	opt stack 0
  3179                           tblptru	equ	0xFF8
  3180                           tblptrh	equ	0xFF7
  3181                           tblptrl	equ	0xFF6
  3182                           tablat	equ	0xFF5
  3183                           prodh	equ	0xFF4
  3184                           prodl	equ	0xFF3
  3185                           intcon	equ	0xFF2
  3186                           intcon2	equ	0xFF1
  3187                           postinc0	equ	0xFEE
  3188                           wreg	equ	0xFE8
  3189                           postdec1	equ	0xFE5
  3190                           fsr1l	equ	0xFE1
  3191                           indf2	equ	0xFDF
  3192                           fsr2h	equ	0xFDA
  3193                           fsr2l	equ	0xFD9
  3194                           status	equ	0xFD8
  3195                           
  3196 ;; *************** function _CommFsmSched *****************
  3197 ;; Defined at:
  3198 ;;		line 71 in file "../comm.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;  FsmStruct       2   13[BANK0 ] PTR struct FsmTable
  3201 ;;		 -> NULL(0), ReadTimeFsm(25), 
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;  FsmStat         1   17[BANK0 ] unsigned char 
  3204 ;; Return value:  Size  Location     Type
  3205 ;;		None               void
  3206 ;; Registers used:
  3207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3213 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3214 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3215 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3216 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3217 ;;Total ram usage:        5 bytes
  3218 ;; Hardware stack levels used:    1
  3219 ;; Hardware stack levels required when called:    7
  3220 ;; This function calls:
  3221 ;;		_CommFsmIdle
  3222 ;;		_StartRx
  3223 ;;		_StartTx
  3224 ;;		_TimeDecode
  3225 ;; This function is called by:
  3226 ;;		_main
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           	psect	text16
  3231  00122A                     __ptext16:
  3232                           	opt stack 0
  3233  00122A                     _CommFsmSched:
  3234                           	opt stack 23
  3235                           
  3236                           ;comm.c: 73: unsigned char FsmStat;
  3237                           ;comm.c: 75: FsmStat = FsmStruct[FsmIndx].Stat;
  3238                           
  3239                           ;incstack = 0
  3240  00122A  5047               	movf	_FsmIndx,w,c
  3241  00122C  0D05               	mullw	5
  3242  00122E  50F3               	movf	prodl,w,c
  3243  001230  0100               	movlb	0	; () banked
  3244  001232  0100               	movlb	0	; () banked
  3245  001234  25D0               	addwf	CommFsmSched@FsmStruct& (0+255),w,b
  3246  001236  6ED9               	movwf	fsr2l,c
  3247  001238  50F4               	movf	prodh,w,c
  3248  00123A  0100               	movlb	0	; () banked
  3249  00123C  0100               	movlb	0	; () banked
  3250  00123E  21D1               	addwfc	(CommFsmSched@FsmStruct+1)& (0+255),w,b
  3251  001240  6EDA               	movwf	fsr2h,c
  3252  001242  50DF               	movf	indf2,w,c
  3253  001244  0100               	movlb	0	; () banked
  3254  001246  0100               	movlb	0	; () banked
  3255  001248  6FD4               	movwf	CommFsmSched@FsmStat& (0+255),b
  3256                           
  3257                           ;comm.c: 77: switch (FsmStat)
  3258  00124A  D0DC               	goto	l2879
  3259  00124C                     l428:
  3260                           
  3261                           ; BSR set to: 0
  3262                           ;comm.c: 80: if(RxFsmFlag==0)
  3263  00124C  0100               	movlb	0	; () banked
  3264  00124E  0100               	movlb	0	; () banked
  3265  001250  6785               	tstfsz	_RxFsmFlag& (0+255),b
  3266  001252  D01F               	goto	l2851
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;comm.c: 81: {
  3270                           ;comm.c: 82: StartRx(FsmStruct[FsmIndx].Str);
  3271  001254  5047               	movf	_FsmIndx,w,c
  3272  001256  0D05               	mullw	5
  3273  001258  0100               	movlb	0	; () banked
  3274  00125A  C0D0  F0D2         	movff	CommFsmSched@FsmStruct,??_CommFsmSched
  3275  00125E  0100               	movlb	0	; () banked
  3276  001260  C0D1  F0D3         	movff	CommFsmSched@FsmStruct+1,??_CommFsmSched+1
  3277  001264  50F3               	movf	prodl,w,c
  3278  001266  0100               	movlb	0	; () banked
  3279  001268  27D2               	addwf	??_CommFsmSched& (0+255),f,b
  3280  00126A  50F4               	movf	prodh,w,c
  3281  00126C  0100               	movlb	0	; () banked
  3282  00126E  23D3               	addwfc	(??_CommFsmSched+1)& (0+255),f,b
  3283  001270  0E01               	movlw	1
  3284  001272  0100               	movlb	0	; () banked
  3285  001274  25D2               	addwf	??_CommFsmSched& (0+255),w,b
  3286  001276  6ED9               	movwf	fsr2l,c
  3287  001278  0E00               	movlw	0
  3288  00127A  0100               	movlb	0	; () banked
  3289  00127C  21D3               	addwfc	(??_CommFsmSched+1)& (0+255),w,b
  3290  00127E  6EDA               	movwf	fsr2h,c
  3291  001280  0100               	movlb	0	; () banked
  3292  001282  CFDE F0C3          	movff	postinc2,StartRx@TxStr
  3293  001286  0100               	movlb	0	; () banked
  3294  001288  CFDD F0C4          	movff	postdec2,StartRx@TxStr+1
  3295  00128C  ECD0  F00F         	call	_StartRx	;wreg free
  3296                           
  3297                           ;comm.c: 83: }
  3298  001290  D0C6               	goto	l437
  3299  001292                     l2851:
  3300                           
  3301                           ;comm.c: 84: else
  3302                           ;comm.c: 85: {
  3303                           ;comm.c: 87: CommFsmState = (* FsmStruct[FsmIndx].pCallback);
  3304  001292  5047               	movf	_FsmIndx,w,c
  3305  001294  0D05               	mullw	5
  3306  001296  0100               	movlb	0	; () banked
  3307  001298  C0D0  F0D2         	movff	CommFsmSched@FsmStruct,??_CommFsmSched
  3308  00129C  0100               	movlb	0	; () banked
  3309  00129E  C0D1  F0D3         	movff	CommFsmSched@FsmStruct+1,??_CommFsmSched+1
  3310  0012A2  50F3               	movf	prodl,w,c
  3311  0012A4  0100               	movlb	0	; () banked
  3312  0012A6  27D2               	addwf	??_CommFsmSched& (0+255),f,b
  3313  0012A8  50F4               	movf	prodh,w,c
  3314  0012AA  0100               	movlb	0	; () banked
  3315  0012AC  23D3               	addwfc	(??_CommFsmSched+1)& (0+255),f,b
  3316  0012AE  0E03               	movlw	3
  3317  0012B0  0100               	movlb	0	; () banked
  3318  0012B2  25D2               	addwf	??_CommFsmSched& (0+255),w,b
  3319  0012B4  6ED9               	movwf	fsr2l,c
  3320  0012B6  0E00               	movlw	0
  3321  0012B8  0100               	movlb	0	; () banked
  3322  0012BA  21D3               	addwfc	(??_CommFsmSched+1)& (0+255),w,b
  3323  0012BC  6EDA               	movwf	fsr2h,c
  3324  0012BE  0100               	movlb	0	; () banked
  3325  0012C0  CFDE F0A8          	movff	postinc2,_CommFsmState
  3326  0012C4  0100               	movlb	0	; () banked
  3327  0012C6  CFDD F0A9          	movff	postdec2,_CommFsmState+1
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;comm.c: 88: (* CommFsmState) () ;
  3331  0012CA  D801               	call	u1528
  3332  0012CC  D00C               	goto	u1529
  3333  0012CE                     u1528:
  3334  0012CE  0005               	push	
  3335  0012D0  6EFA               	movwf	pclath,c
  3336  0012D2  0100               	movlb	0	; () banked
  3337  0012D4  0100               	movlb	0	; () banked
  3338  0012D6  51A8               	movf	_CommFsmState& (0+255),w,b
  3339  0012D8  6EFD               	movwf	tosl,c
  3340  0012DA  0100               	movlb	0	; () banked
  3341  0012DC  51A9               	movf	(_CommFsmState+1)& (0+255),w,b
  3342  0012DE  6EFE               	movwf	tosh,c
  3343  0012E0  6AFF               	clrf	tosu,c
  3344  0012E2  50FA               	movf	pclath,w,c
  3345  0012E4  0012               	return		;indir
  3346  0012E6                     u1529:
  3347                           
  3348                           ;comm.c: 89: FsmIndx++;
  3349  0012E6  2A47               	incf	_FsmIndx,f,c
  3350                           
  3351                           ;comm.c: 90: RxFsmFlag = 0;
  3352  0012E8  0100               	movlb	0	; () banked
  3353  0012EA  6FD2               	movwf	??_CommFsmSched& (0+255),b
  3354  0012EC  0E00               	movlw	0
  3355  0012EE  0100               	movlb	0	; () banked
  3356  0012F0  0100               	movlb	0	; () banked
  3357  0012F2  6F85               	movwf	_RxFsmFlag& (0+255),b
  3358  0012F4  D07F               	goto	L5
  3359  0012F6                     l432:
  3360                           
  3361                           ; BSR set to: 0
  3362                           ;comm.c: 109: if(TxFsmFlag==0)
  3363  0012F6  0100               	movlb	0	; () banked
  3364  0012F8  0100               	movlb	0	; () banked
  3365  0012FA  6787               	tstfsz	_TxFsmFlag& (0+255),b
  3366  0012FC  D01F               	goto	l2861
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;comm.c: 110: {
  3370                           ;comm.c: 111: StartTx(FsmStruct[FsmIndx].Str);
  3371  0012FE  5047               	movf	_FsmIndx,w,c
  3372  001300  0D05               	mullw	5
  3373  001302  0100               	movlb	0	; () banked
  3374  001304  C0D0  F0D2         	movff	CommFsmSched@FsmStruct,??_CommFsmSched
  3375  001308  0100               	movlb	0	; () banked
  3376  00130A  C0D1  F0D3         	movff	CommFsmSched@FsmStruct+1,??_CommFsmSched+1
  3377  00130E  50F3               	movf	prodl,w,c
  3378  001310  0100               	movlb	0	; () banked
  3379  001312  27D2               	addwf	??_CommFsmSched& (0+255),f,b
  3380  001314  50F4               	movf	prodh,w,c
  3381  001316  0100               	movlb	0	; () banked
  3382  001318  23D3               	addwfc	(??_CommFsmSched+1)& (0+255),f,b
  3383  00131A  0E01               	movlw	1
  3384  00131C  0100               	movlb	0	; () banked
  3385  00131E  25D2               	addwf	??_CommFsmSched& (0+255),w,b
  3386  001320  6ED9               	movwf	fsr2l,c
  3387  001322  0E00               	movlw	0
  3388  001324  0100               	movlb	0	; () banked
  3389  001326  21D3               	addwfc	(??_CommFsmSched+1)& (0+255),w,b
  3390  001328  6EDA               	movwf	fsr2h,c
  3391  00132A  0100               	movlb	0	; () banked
  3392  00132C  CFDE F0CD          	movff	postinc2,StartTx@TxStr
  3393  001330  0100               	movlb	0	; () banked
  3394  001332  CFDD F0CE          	movff	postdec2,StartTx@TxStr+1
  3395  001336  ECE2  F00D         	call	_StartTx	;wreg free
  3396                           
  3397                           ;comm.c: 112: }
  3398  00133A  D071               	goto	l437
  3399  00133C                     l2861:
  3400                           
  3401                           ;comm.c: 113: else
  3402                           ;comm.c: 114: {
  3403                           ;comm.c: 116: CommFsmState = (* FsmStruct[FsmIndx].pCallback);
  3404  00133C  5047               	movf	_FsmIndx,w,c
  3405  00133E  0D05               	mullw	5
  3406  001340  0100               	movlb	0	; () banked
  3407  001342  C0D0  F0D2         	movff	CommFsmSched@FsmStruct,??_CommFsmSched
  3408  001346  0100               	movlb	0	; () banked
  3409  001348  C0D1  F0D3         	movff	CommFsmSched@FsmStruct+1,??_CommFsmSched+1
  3410  00134C  50F3               	movf	prodl,w,c
  3411  00134E  0100               	movlb	0	; () banked
  3412  001350  27D2               	addwf	??_CommFsmSched& (0+255),f,b
  3413  001352  50F4               	movf	prodh,w,c
  3414  001354  0100               	movlb	0	; () banked
  3415  001356  23D3               	addwfc	(??_CommFsmSched+1)& (0+255),f,b
  3416  001358  0E03               	movlw	3
  3417  00135A  0100               	movlb	0	; () banked
  3418  00135C  25D2               	addwf	??_CommFsmSched& (0+255),w,b
  3419  00135E  6ED9               	movwf	fsr2l,c
  3420  001360  0E00               	movlw	0
  3421  001362  0100               	movlb	0	; () banked
  3422  001364  21D3               	addwfc	(??_CommFsmSched+1)& (0+255),w,b
  3423  001366  6EDA               	movwf	fsr2h,c
  3424  001368  0100               	movlb	0	; () banked
  3425  00136A  CFDE F0A8          	movff	postinc2,_CommFsmState
  3426  00136E  0100               	movlb	0	; () banked
  3427  001370  CFDD F0A9          	movff	postdec2,_CommFsmState+1
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;comm.c: 117: (* CommFsmState) () ;
  3431  001374  D801               	call	u1548
  3432  001376  D00C               	goto	u1549
  3433  001378                     u1548:
  3434  001378  0005               	push	
  3435  00137A  6EFA               	movwf	pclath,c
  3436  00137C  0100               	movlb	0	; () banked
  3437  00137E  0100               	movlb	0	; () banked
  3438  001380  51A8               	movf	_CommFsmState& (0+255),w,b
  3439  001382  6EFD               	movwf	tosl,c
  3440  001384  0100               	movlb	0	; () banked
  3441  001386  51A9               	movf	(_CommFsmState+1)& (0+255),w,b
  3442  001388  6EFE               	movwf	tosh,c
  3443  00138A  6AFF               	clrf	tosu,c
  3444  00138C  50FA               	movf	pclath,w,c
  3445  00138E  0012               	return		;indir
  3446  001390                     u1549:
  3447                           
  3448                           ;comm.c: 118: FsmIndx++;
  3449  001390  2A47               	incf	_FsmIndx,f,c
  3450                           
  3451                           ;comm.c: 119: TxFsmFlag = 0;
  3452  001392  0100               	movlb	0	; () banked
  3453  001394  6FD2               	movwf	??_CommFsmSched& (0+255),b
  3454  001396  0E00               	movlw	0
  3455  001398  0100               	movlb	0	; () banked
  3456  00139A  0100               	movlb	0	; () banked
  3457  00139C  6F87               	movwf	_TxFsmFlag& (0+255),b
  3458  00139E  D02A               	goto	L5
  3459  0013A0                     l2869:
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;comm.c: 125: CommFsmState = (* FsmStruct[FsmIndx].pCallback);
  3463  0013A0  5047               	movf	_FsmIndx,w,c
  3464  0013A2  0D05               	mullw	5
  3465  0013A4  0100               	movlb	0	; () banked
  3466  0013A6  C0D0  F0D2         	movff	CommFsmSched@FsmStruct,??_CommFsmSched
  3467  0013AA  0100               	movlb	0	; () banked
  3468  0013AC  C0D1  F0D3         	movff	CommFsmSched@FsmStruct+1,??_CommFsmSched+1
  3469  0013B0  50F3               	movf	prodl,w,c
  3470  0013B2  0100               	movlb	0	; () banked
  3471  0013B4  27D2               	addwf	??_CommFsmSched& (0+255),f,b
  3472  0013B6  50F4               	movf	prodh,w,c
  3473  0013B8  0100               	movlb	0	; () banked
  3474  0013BA  23D3               	addwfc	(??_CommFsmSched+1)& (0+255),f,b
  3475  0013BC  0E03               	movlw	3
  3476  0013BE  0100               	movlb	0	; () banked
  3477  0013C0  25D2               	addwf	??_CommFsmSched& (0+255),w,b
  3478  0013C2  6ED9               	movwf	fsr2l,c
  3479  0013C4  0E00               	movlw	0
  3480  0013C6  0100               	movlb	0	; () banked
  3481  0013C8  21D3               	addwfc	(??_CommFsmSched+1)& (0+255),w,b
  3482  0013CA  6EDA               	movwf	fsr2h,c
  3483  0013CC  0100               	movlb	0	; () banked
  3484  0013CE  CFDE F0A8          	movff	postinc2,_CommFsmState
  3485  0013D2  0100               	movlb	0	; () banked
  3486  0013D4  CFDD F0A9          	movff	postdec2,_CommFsmState+1
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;comm.c: 126: (* CommFsmState) () ;
  3490  0013D8  D801               	call	u1558
  3491  0013DA  D00F               	goto	l2875
  3492  0013DC                     u1558:
  3493  0013DC  0005               	push	
  3494  0013DE  6EFA               	movwf	pclath,c
  3495  0013E0  0100               	movlb	0	; () banked
  3496  0013E2  0100               	movlb	0	; () banked
  3497  0013E4  51A8               	movf	_CommFsmState& (0+255),w,b
  3498  0013E6  6EFD               	movwf	tosl,c
  3499  0013E8  0100               	movlb	0	; () banked
  3500  0013EA  51A9               	movf	(_CommFsmState+1)& (0+255),w,b
  3501  0013EC  6EFE               	movwf	tosh,c
  3502  0013EE  6AFF               	clrf	tosu,c
  3503  0013F0  50FA               	movf	pclath,w,c
  3504  0013F2  0012               	return		;indir
  3505  0013F4                     L5:
  3506  0013F4  0100               	movlb	0	; () banked
  3507  0013F6  51D2               	movf	??_CommFsmSched& (0+255),w,b
  3508                           
  3509                           ;comm.c: 128: break;
  3510  0013F8  D012               	goto	l437
  3511  0013FA                     l2875:
  3512                           
  3513                           ; BSR set to: 0
  3514                           ;comm.c: 131: CommFsmFlag = 0;
  3515  0013FA  0100               	movlb	0	; () banked
  3516  0013FC  6FD2               	movwf	??_CommFsmSched& (0+255),b
  3517  0013FE  0E00               	movlw	0
  3518  001400  6E46               	movwf	_CommFsmFlag,c
  3519  001402  D7F8               	goto	L5
  3520  001404                     l2879:
  3521                           
  3522                           ; BSR set to: 0
  3523  001404  0100               	movlb	0	; () banked
  3524  001406  0100               	movlb	0	; () banked
  3525  001408  51D4               	movf	CommFsmSched@FsmStat& (0+255),w,b
  3526                           
  3527                           ; Switch size 1, requested type "space"
  3528                           ; Number of cases is 3, Range of values is 0 to 2
  3529                           ; switch strategies available:
  3530                           ; Name         Instructions Cycles
  3531                           ; simple_byte           10     6 (average)
  3532                           ;	Chosen strategy is simple_byte
  3533  00140A  0A00               	xorlw	0	; case 0
  3534  00140C  B4D8               	btfsc	status,2,c
  3535  00140E  D71E               	goto	l428
  3536  001410  0A01               	xorlw	1	; case 1
  3537  001412  B4D8               	btfsc	status,2,c
  3538  001414  D770               	goto	l432
  3539  001416  0A03               	xorlw	3	; case 2
  3540  001418  B4D8               	btfsc	status,2,c
  3541  00141A  D7C2               	goto	l2869
  3542  00141C  D7EE               	goto	l2875
  3543  00141E                     l437:
  3544  00141E  0012               	return	
  3545  001420                     __end_of_CommFsmSched:
  3546                           	opt stack 0
  3547                           tosu	equ	0xFFF
  3548                           tosh	equ	0xFFE
  3549                           tosl	equ	0xFFD
  3550                           pclath	equ	0xFFA
  3551                           tblptru	equ	0xFF8
  3552                           tblptrh	equ	0xFF7
  3553                           tblptrl	equ	0xFF6
  3554                           tablat	equ	0xFF5
  3555                           prodh	equ	0xFF4
  3556                           prodl	equ	0xFF3
  3557                           intcon	equ	0xFF2
  3558                           intcon2	equ	0xFF1
  3559                           postinc0	equ	0xFEE
  3560                           wreg	equ	0xFE8
  3561                           postdec1	equ	0xFE5
  3562                           fsr1l	equ	0xFE1
  3563                           indf2	equ	0xFDF
  3564                           postinc2	equ	0xFDE
  3565                           postdec2	equ	0xFDD
  3566                           fsr2h	equ	0xFDA
  3567                           fsr2l	equ	0xFD9
  3568                           status	equ	0xFD8
  3569                           
  3570 ;; *************** function _CommFsmIdle *****************
  3571 ;; Defined at:
  3572 ;;		line 57 in file "../comm.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;		None
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;		None
  3577 ;; Return value:  Size  Location     Type
  3578 ;;                  1    wreg      unsigned char 
  3579 ;; Registers used:
  3580 ;;		None
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3590 ;;Total ram usage:        0 bytes
  3591 ;; Hardware stack levels used:    1
  3592 ;; Hardware stack levels required when called:    5
  3593 ;; This function calls:
  3594 ;;		Nothing
  3595 ;; This function is called by:
  3596 ;;		_CommFsmSched
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           	psect	text17
  3601  00204A                     __ptext17:
  3602                           	opt stack 0
  3603  00204A                     _CommFsmIdle:
  3604                           	opt stack 24
  3605                           
  3606                           ;comm.c: 59: return '0' ;
  3607                           ;	Return value of _CommFsmIdle is never used
  3608                           
  3609                           ;incstack = 0
  3610  00204A  0012               	return	
  3611  00204C                     __end_of_CommFsmIdle:
  3612                           	opt stack 0
  3613                           tosu	equ	0xFFF
  3614                           tosh	equ	0xFFE
  3615                           tosl	equ	0xFFD
  3616                           pclath	equ	0xFFA
  3617                           tblptru	equ	0xFF8
  3618                           tblptrh	equ	0xFF7
  3619                           tblptrl	equ	0xFF6
  3620                           tablat	equ	0xFF5
  3621                           prodh	equ	0xFF4
  3622                           prodl	equ	0xFF3
  3623                           intcon	equ	0xFF2
  3624                           intcon2	equ	0xFF1
  3625                           postinc0	equ	0xFEE
  3626                           wreg	equ	0xFE8
  3627                           postdec1	equ	0xFE5
  3628                           fsr1l	equ	0xFE1
  3629                           indf2	equ	0xFDF
  3630                           postinc2	equ	0xFDE
  3631                           postdec2	equ	0xFDD
  3632                           fsr2h	equ	0xFDA
  3633                           fsr2l	equ	0xFD9
  3634                           status	equ	0xFD8
  3635                           
  3636 ;; *************** function _TimeDecode *****************
  3637 ;; Defined at:
  3638 ;;		line 229 in file "../WordClock.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;		None
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;		None
  3643 ;; Return value:  Size  Location     Type
  3644 ;;                  1    wreg      unsigned char 
  3645 ;; Registers used:
  3646 ;;		None
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3656 ;;Total ram usage:        0 bytes
  3657 ;; Hardware stack levels used:    1
  3658 ;; Hardware stack levels required when called:    5
  3659 ;; This function calls:
  3660 ;;		Nothing
  3661 ;; This function is called by:
  3662 ;;		_CommFsmSched
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           	psect	text18
  3667  00204C                     __ptext18:
  3668                           	opt stack 0
  3669  00204C                     _TimeDecode:
  3670                           	opt stack 24
  3671                           
  3672                           ;WordClock.c: 231: return '0';
  3673                           ;	Return value of _TimeDecode is never used
  3674                           
  3675                           ;incstack = 0
  3676  00204C  0012               	return	
  3677  00204E                     __end_of_TimeDecode:
  3678                           	opt stack 0
  3679                           tosu	equ	0xFFF
  3680                           tosh	equ	0xFFE
  3681                           tosl	equ	0xFFD
  3682                           pclath	equ	0xFFA
  3683                           tblptru	equ	0xFF8
  3684                           tblptrh	equ	0xFF7
  3685                           tblptrl	equ	0xFF6
  3686                           tablat	equ	0xFF5
  3687                           prodh	equ	0xFF4
  3688                           prodl	equ	0xFF3
  3689                           intcon	equ	0xFF2
  3690                           intcon2	equ	0xFF1
  3691                           postinc0	equ	0xFEE
  3692                           wreg	equ	0xFE8
  3693                           postdec1	equ	0xFE5
  3694                           fsr1l	equ	0xFE1
  3695                           indf2	equ	0xFDF
  3696                           postinc2	equ	0xFDE
  3697                           postdec2	equ	0xFDD
  3698                           fsr2h	equ	0xFDA
  3699                           fsr2l	equ	0xFD9
  3700                           status	equ	0xFD8
  3701                           
  3702 ;; *************** function _StartTx *****************
  3703 ;; Defined at:
  3704 ;;		line 136 in file "../comm.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;  TxStr           2   10[BANK0 ] PTR const unsigned char 
  3707 ;;		 -> STR_10(1), STR_9(8), STR_8(6), STR_7(4), 
  3708 ;;		 -> STR_6(5), STR_5(1), STR_4(8), STR_3(6), 
  3709 ;;		 -> STR_2(4), STR_1(5), 
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;		None
  3712 ;; Return value:  Size  Location     Type
  3713 ;;		None               void
  3714 ;; Registers used:
  3715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3721 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3723 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3724 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3725 ;;Total ram usage:        3 bytes
  3726 ;; Hardware stack levels used:    1
  3727 ;; Hardware stack levels required when called:    6
  3728 ;; This function calls:
  3729 ;;		_memcpy
  3730 ;;		_strlen
  3731 ;; This function is called by:
  3732 ;;		_CommFsmSched
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735                           
  3736                           	psect	text19
  3737  001BC4                     __ptext19:
  3738                           	opt stack 0
  3739  001BC4                     _StartTx:
  3740                           	opt stack 23
  3741                           
  3742                           ;comm.c: 138: CommFsmFlag = 0;
  3743                           
  3744                           ;incstack = 0
  3745  001BC4  0100               	movlb	0	; () banked
  3746  001BC6  6FCF               	movwf	??_StartTx& (0+255),b
  3747  001BC8  0E00               	movlw	0
  3748  001BCA  6E46               	movwf	_CommFsmFlag,c
  3749  001BCC  0100               	movlb	0	; () banked
  3750  001BCE  51CF               	movf	??_StartTx& (0+255),w,b
  3751                           
  3752                           ; BSR set to: 0
  3753                           ;comm.c: 139: TxBuffLen = strlen(TxStr);
  3754  001BD0  0100               	movlb	0	; () banked
  3755  001BD2  0100               	movlb	0	; () banked
  3756  001BD4  C0CE  F0C4         	movff	StartTx@TxStr+1,strlen@s+1
  3757  001BD8  0100               	movlb	0	; () banked
  3758  001BDA  0100               	movlb	0	; () banked
  3759  001BDC  C0CD  F0C3         	movff	StartTx@TxStr,strlen@s
  3760  001BE0  EC18  F00E         	call	_strlen	;wreg free
  3761  001BE4  0100               	movlb	0	; () banked
  3762  001BE6  0100               	movlb	0	; () banked
  3763  001BE8  51C3               	movf	?_strlen& (0+255),w,b
  3764  001BEA  6E53               	movwf	_TxBuffLen,c
  3765                           
  3766                           ; BSR set to: 0
  3767                           ;comm.c: 140: TxBuffIndx=0;
  3768  001BEC  0100               	movlb	0	; () banked
  3769  001BEE  6FCF               	movwf	??_StartTx& (0+255),b
  3770  001BF0  0E00               	movlw	0
  3771  001BF2  6E52               	movwf	_TxBuffIndx,c
  3772  001BF4  0100               	movlb	0	; () banked
  3773  001BF6  51CF               	movf	??_StartTx& (0+255),w,b
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;comm.c: 141: memcpy(TxBuff, TxStr, TxBuffLen);
  3777  001BF8  0100               	movlb	0	; () banked
  3778  001BFA  0E00               	movlw	high _TxBuff
  3779  001BFC  0100               	movlb	0	; () banked
  3780  001BFE  0100               	movlb	0	; () banked
  3781  001C00  6FC4               	movwf	(memcpy@d1+1)& (0+255),b
  3782  001C02  0100               	movlb	0	; () banked
  3783  001C04  0E88               	movlw	low _TxBuff
  3784  001C06  0100               	movlb	0	; () banked
  3785  001C08  0100               	movlb	0	; () banked
  3786  001C0A  6FC3               	movwf	memcpy@d1& (0+255),b
  3787  001C0C  0100               	movlb	0	; () banked
  3788  001C0E  0100               	movlb	0	; () banked
  3789  001C10  C0CE  F0C6         	movff	StartTx@TxStr+1,memcpy@s1+1
  3790  001C14  0100               	movlb	0	; () banked
  3791  001C16  0100               	movlb	0	; () banked
  3792  001C18  C0CD  F0C5         	movff	StartTx@TxStr,memcpy@s1
  3793  001C1C  0100               	movlb	0	; () banked
  3794  001C1E  C053  F0C7         	movff	_TxBuffLen,memcpy@n
  3795  001C22  0100               	movlb	0	; () banked
  3796  001C24  0100               	movlb	0	; () banked
  3797  001C26  6BC8               	clrf	(memcpy@n+1)& (0+255),b
  3798  001C28  EC81  F00E         	call	_memcpy	;wreg free
  3799                           
  3800                           ;comm.c: 142: PIE1bits.TXIE=1;
  3801  001C2C  889D               	bsf	3997,4,c	;volatile
  3802  001C2E  0012               	return	
  3803  001C30                     __end_of_StartTx:
  3804                           	opt stack 0
  3805                           tosu	equ	0xFFF
  3806                           tosh	equ	0xFFE
  3807                           tosl	equ	0xFFD
  3808                           pclath	equ	0xFFA
  3809                           tblptru	equ	0xFF8
  3810                           tblptrh	equ	0xFF7
  3811                           tblptrl	equ	0xFF6
  3812                           tablat	equ	0xFF5
  3813                           prodh	equ	0xFF4
  3814                           prodl	equ	0xFF3
  3815                           intcon	equ	0xFF2
  3816                           intcon2	equ	0xFF1
  3817                           postinc0	equ	0xFEE
  3818                           wreg	equ	0xFE8
  3819                           postdec1	equ	0xFE5
  3820                           fsr1l	equ	0xFE1
  3821                           indf2	equ	0xFDF
  3822                           postinc2	equ	0xFDE
  3823                           postdec2	equ	0xFDD
  3824                           fsr2h	equ	0xFDA
  3825                           fsr2l	equ	0xFD9
  3826                           status	equ	0xFD8
  3827                           
  3828 ;; *************** function _strlen *****************
  3829 ;; Defined at:
  3830 ;;		line 4 in file "/Applications/microchip/xc8/v1.31/sources/common/strlen.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  3833 ;;		 -> STR_10(1), STR_9(8), STR_8(6), STR_7(4), 
  3834 ;;		 -> STR_6(5), STR_5(1), STR_4(8), STR_3(6), 
  3835 ;;		 -> STR_2(4), STR_1(5), 
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
  3838 ;;		 -> STR_10(1), STR_9(8), STR_8(6), STR_7(4), 
  3839 ;;		 -> STR_6(5), STR_5(1), STR_4(8), STR_3(6), 
  3840 ;;		 -> STR_2(4), STR_1(5), 
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  2    0[BANK0 ] unsigned int 
  3843 ;; Registers used:
  3844 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3850 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3851 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3852 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3853 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3854 ;;Total ram usage:        6 bytes
  3855 ;; Hardware stack levels used:    1
  3856 ;; Hardware stack levels required when called:    5
  3857 ;; This function calls:
  3858 ;;		Nothing
  3859 ;; This function is called by:
  3860 ;;		_StartTx
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text20
  3865  001C30                     __ptext20:
  3866                           	opt stack 0
  3867  001C30                     _strlen:
  3868                           	opt stack 23
  3869                           
  3870                           ;incstack = 0
  3871  001C30  0100               	movlb	0	; () banked
  3872  001C32  0100               	movlb	0	; () banked
  3873  001C34  C0C4  F0C8         	movff	strlen@s+1,strlen@cp+1
  3874  001C38  0100               	movlb	0	; () banked
  3875  001C3A  0100               	movlb	0	; () banked
  3876  001C3C  C0C3  F0C7         	movff	strlen@s,strlen@cp
  3877  001C40  D004               	goto	l2561
  3878  001C42                     l2559:
  3879                           
  3880                           ; BSR set to: 0
  3881  001C42  0100               	movlb	0	; () banked
  3882  001C44  0100               	movlb	0	; () banked
  3883  001C46  4BC7               	infsnz	strlen@cp& (0+255),f,b
  3884  001C48  2BC8               	incf	(strlen@cp+1)& (0+255),f,b
  3885  001C4A                     l2561:
  3886                           
  3887                           ; BSR set to: 0
  3888  001C4A  0100               	movlb	0	; () banked
  3889  001C4C  C0C7  FFF6         	movff	strlen@cp,tblptrl
  3890  001C50  0100               	movlb	0	; () banked
  3891  001C52  C0C8  FFF7         	movff	strlen@cp+1,tblptrh
  3892  001C56  0E00               	movlw	low (__mediumconst shr (0+16))
  3893  001C58  6EF8               	movwf	tblptru,c
  3894  001C5A  0008               	tblrd		*
  3895  001C5C  50F5               	movf	tablat,w,c
  3896  001C5E  0900               	iorlw	0
  3897  001C60  A4D8               	btfss	status,2,c
  3898  001C62  D7EF               	goto	l2559
  3899                           
  3900                           ; BSR set to: 0
  3901                           
  3902                           ; BSR set to: 0
  3903  001C64  0100               	movlb	0	; () banked
  3904  001C66  C0C3  F0C5         	movff	strlen@s,??_strlen
  3905  001C6A  0100               	movlb	0	; () banked
  3906  001C6C  C0C4  F0C6         	movff	strlen@s+1,??_strlen+1
  3907  001C70  0100               	movlb	0	; () banked
  3908  001C72  1FC5               	comf	??_strlen& (0+255),f,b
  3909  001C74  1FC6               	comf	(??_strlen+1)& (0+255),f,b
  3910  001C76  4BC5               	infsnz	??_strlen& (0+255),f,b
  3911  001C78  2BC6               	incf	(??_strlen+1)& (0+255),f,b
  3912  001C7A  0100               	movlb	0	; () banked
  3913  001C7C  0100               	movlb	0	; () banked
  3914  001C7E  51C7               	movf	strlen@cp& (0+255),w,b
  3915  001C80  0100               	movlb	0	; () banked
  3916  001C82  25C5               	addwf	??_strlen& (0+255),w,b
  3917  001C84  0100               	movlb	0	; () banked
  3918  001C86  0100               	movlb	0	; () banked
  3919  001C88  6FC3               	movwf	?_strlen& (0+255),b
  3920  001C8A  0100               	movlb	0	; () banked
  3921  001C8C  0100               	movlb	0	; () banked
  3922  001C8E  51C8               	movf	(strlen@cp+1)& (0+255),w,b
  3923  001C90  0100               	movlb	0	; () banked
  3924  001C92  21C6               	addwfc	(??_strlen+1)& (0+255),w,b
  3925  001C94  0100               	movlb	0	; () banked
  3926  001C96  6FC4               	movwf	(?_strlen+1)& (0+255),b
  3927                           
  3928                           ; BSR set to: 0
  3929                           
  3930                           ; BSR set to: 0
  3931  001C98  0012               	return	
  3932  001C9A                     __end_of_strlen:
  3933                           	opt stack 0
  3934                           tosu	equ	0xFFF
  3935                           tosh	equ	0xFFE
  3936                           tosl	equ	0xFFD
  3937                           pclath	equ	0xFFA
  3938                           tblptru	equ	0xFF8
  3939                           tblptrh	equ	0xFF7
  3940                           tblptrl	equ	0xFF6
  3941                           tablat	equ	0xFF5
  3942                           prodh	equ	0xFF4
  3943                           prodl	equ	0xFF3
  3944                           intcon	equ	0xFF2
  3945                           intcon2	equ	0xFF1
  3946                           postinc0	equ	0xFEE
  3947                           wreg	equ	0xFE8
  3948                           postdec1	equ	0xFE5
  3949                           fsr1l	equ	0xFE1
  3950                           indf2	equ	0xFDF
  3951                           postinc2	equ	0xFDE
  3952                           postdec2	equ	0xFDD
  3953                           fsr2h	equ	0xFDA
  3954                           fsr2l	equ	0xFD9
  3955                           status	equ	0xFD8
  3956                           
  3957 ;; *************** function _memcpy *****************
  3958 ;; Defined at:
  3959 ;;		line 11 in file "/Applications/microchip/xc8/v1.31/sources/common/memcpy.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;  d1              2    0[BANK0 ] PTR void 
  3962 ;;		 -> TxBuff(32), 
  3963 ;;  s1              2    2[BANK0 ] PTR const void 
  3964 ;;		 -> STR_10(1), STR_9(8), STR_8(6), STR_7(4), 
  3965 ;;		 -> STR_6(5), STR_5(1), STR_4(8), STR_3(6), 
  3966 ;;		 -> STR_2(4), STR_1(5), 
  3967 ;;  n               2    4[BANK0 ] unsigned int 
  3968 ;; Auto vars:     Size  Location     Type
  3969 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  3970 ;;		 -> STR_10(1), STR_9(8), STR_8(6), STR_7(4), 
  3971 ;;		 -> STR_6(5), STR_5(1), STR_4(8), STR_3(6), 
  3972 ;;		 -> STR_2(4), STR_1(5), 
  3973 ;;  d               2    6[BANK0 ] PTR unsigned char 
  3974 ;;		 -> TxBuff(32), 
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  2    0[BANK0 ] PTR void 
  3977 ;; Registers used:
  3978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3984 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3985 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3987 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3988 ;;Total ram usage:       10 bytes
  3989 ;; Hardware stack levels used:    1
  3990 ;; Hardware stack levels required when called:    5
  3991 ;; This function calls:
  3992 ;;		Nothing
  3993 ;; This function is called by:
  3994 ;;		_StartTx
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           	psect	text21
  3999  001D02                     __ptext21:
  4000                           	opt stack 0
  4001  001D02                     _memcpy:
  4002                           	opt stack 23
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;incstack = 0
  4006  001D02  0100               	movlb	0	; () banked
  4007  001D04  0100               	movlb	0	; () banked
  4008  001D06  C0C6  F0CC         	movff	memcpy@s1+1,memcpy@s+1
  4009  001D0A  0100               	movlb	0	; () banked
  4010  001D0C  0100               	movlb	0	; () banked
  4011  001D0E  C0C5  F0CB         	movff	memcpy@s1,memcpy@s
  4012  001D12  0100               	movlb	0	; () banked
  4013  001D14  0100               	movlb	0	; () banked
  4014  001D16  C0C4  F0CA         	movff	memcpy@d1+1,memcpy@d+1
  4015  001D1A  0100               	movlb	0	; () banked
  4016  001D1C  0100               	movlb	0	; () banked
  4017  001D1E  C0C3  F0C9         	movff	memcpy@d1,memcpy@d
  4018  001D22  D017               	goto	l2575
  4019  001D24                     l2569:
  4020                           
  4021                           ; BSR set to: 0
  4022  001D24  0100               	movlb	0	; () banked
  4023  001D26  C0CB  FFF6         	movff	memcpy@s,tblptrl
  4024  001D2A  0100               	movlb	0	; () banked
  4025  001D2C  C0CC  FFF7         	movff	memcpy@s+1,tblptrh
  4026  001D30  0E00               	movlw	low (__mediumconst shr (0+16))
  4027  001D32  6EF8               	movwf	tblptru,c
  4028  001D34  C0C9  FFD9         	movff	memcpy@d,fsr2l
  4029  001D38  C0CA  FFDA         	movff	memcpy@d+1,fsr2h
  4030  001D3C  0008               	tblrd		*
  4031  001D3E  CFF5 FFDF          	movff	tablat,indf2
  4032                           
  4033                           ; BSR set to: 0
  4034  001D42  0100               	movlb	0	; () banked
  4035  001D44  0100               	movlb	0	; () banked
  4036  001D46  4BCB               	infsnz	memcpy@s& (0+255),f,b
  4037  001D48  2BCC               	incf	(memcpy@s+1)& (0+255),f,b
  4038                           
  4039                           ; BSR set to: 0
  4040  001D4A  0100               	movlb	0	; () banked
  4041  001D4C  0100               	movlb	0	; () banked
  4042  001D4E  4BC9               	infsnz	memcpy@d& (0+255),f,b
  4043  001D50  2BCA               	incf	(memcpy@d+1)& (0+255),f,b
  4044  001D52                     l2575:
  4045                           
  4046                           ; BSR set to: 0
  4047  001D52  0100               	movlb	0	; () banked
  4048  001D54  0100               	movlb	0	; () banked
  4049  001D56  07C7               	decf	memcpy@n& (0+255),f,b
  4050  001D58  A0D8               	btfss	status,0,c
  4051  001D5A  07C8               	decf	(memcpy@n+1)& (0+255),f,b
  4052  001D5C  0100               	movlb	0	; () banked
  4053  001D5E  29C7               	incf	memcpy@n& (0+255),w,b
  4054  001D60  B4D8               	btfsc	status,2,c
  4055  001D62  29C8               	incf	(memcpy@n+1)& (0+255),w,b
  4056  001D64  B4D8               	btfsc	status,2,c
  4057                           
  4058                           ; BSR set to: 0
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;	Return value of _memcpy is never used
  4062  001D66  0012               	return	
  4063  001D68  D7DD               	goto	l2569
  4064  001D6A                     __end_of_memcpy:
  4065                           	opt stack 0
  4066                           tosu	equ	0xFFF
  4067                           tosh	equ	0xFFE
  4068                           tosl	equ	0xFFD
  4069                           pclath	equ	0xFFA
  4070                           tblptru	equ	0xFF8
  4071                           tblptrh	equ	0xFF7
  4072                           tblptrl	equ	0xFF6
  4073                           tablat	equ	0xFF5
  4074                           prodh	equ	0xFF4
  4075                           prodl	equ	0xFF3
  4076                           intcon	equ	0xFF2
  4077                           intcon2	equ	0xFF1
  4078                           postinc0	equ	0xFEE
  4079                           wreg	equ	0xFE8
  4080                           postdec1	equ	0xFE5
  4081                           fsr1l	equ	0xFE1
  4082                           indf2	equ	0xFDF
  4083                           postinc2	equ	0xFDE
  4084                           postdec2	equ	0xFDD
  4085                           fsr2h	equ	0xFDA
  4086                           fsr2l	equ	0xFD9
  4087                           status	equ	0xFD8
  4088                           
  4089 ;; *************** function _StartRx *****************
  4090 ;; Defined at:
  4091 ;;		line 145 in file "../comm.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;  TxStr           2    0[BANK0 ] PTR const unsigned char 
  4094 ;;		 -> STR_10(1), STR_9(8), STR_8(6), STR_7(4), 
  4095 ;;		 -> STR_6(5), STR_5(1), STR_4(8), STR_3(6), 
  4096 ;;		 -> STR_2(4), STR_1(5), 
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;		None
  4099 ;; Return value:  Size  Location     Type
  4100 ;;		None               void
  4101 ;; Registers used:
  4102 ;;		status,2
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4108 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4110 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4111 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4112 ;;Total ram usage:        3 bytes
  4113 ;; Hardware stack levels used:    1
  4114 ;; Hardware stack levels required when called:    5
  4115 ;; This function calls:
  4116 ;;		Nothing
  4117 ;; This function is called by:
  4118 ;;		_CommFsmSched
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122                           	psect	text22
  4123  001FA0                     __ptext22:
  4124                           	opt stack 0
  4125  001FA0                     _StartRx:
  4126                           	opt stack 24
  4127                           
  4128                           ;comm.c: 147: CommFsmFlag = 0;
  4129                           
  4130                           ; BSR set to: 0
  4131                           ;incstack = 0
  4132  001FA0  0100               	movlb	0	; () banked
  4133  001FA2  6FC5               	movwf	??_StartRx& (0+255),b
  4134  001FA4  0E00               	movlw	0
  4135  001FA6  6E46               	movwf	_CommFsmFlag,c
  4136  001FA8  0100               	movlb	0	; () banked
  4137  001FAA  51C5               	movf	??_StartRx& (0+255),w,b
  4138                           
  4139                           ;comm.c: 148: RxBuffIndx=0;
  4140  001FAC  0100               	movlb	0	; () banked
  4141  001FAE  6FC5               	movwf	??_StartRx& (0+255),b
  4142  001FB0  0E00               	movlw	0
  4143  001FB2  6E4F               	movwf	_RxBuffIndx,c
  4144  001FB4  0100               	movlb	0	; () banked
  4145  001FB6  51C5               	movf	??_StartRx& (0+255),w,b
  4146                           
  4147                           ; BSR set to: 0
  4148                           ;comm.c: 149: PIE1bits.RCIE=1;
  4149  001FB8  8A9D               	bsf	3997,5,c	;volatile
  4150                           
  4151                           ; BSR set to: 0
  4152  001FBA  0012               	return	
  4153  001FBC                     __end_of_StartRx:
  4154                           	opt stack 0
  4155                           tosu	equ	0xFFF
  4156                           tosh	equ	0xFFE
  4157                           tosl	equ	0xFFD
  4158                           pclath	equ	0xFFA
  4159                           tblptru	equ	0xFF8
  4160                           tblptrh	equ	0xFF7
  4161                           tblptrl	equ	0xFF6
  4162                           tablat	equ	0xFF5
  4163                           prodh	equ	0xFF4
  4164                           prodl	equ	0xFF3
  4165                           intcon	equ	0xFF2
  4166                           intcon2	equ	0xFF1
  4167                           postinc0	equ	0xFEE
  4168                           wreg	equ	0xFE8
  4169                           postdec1	equ	0xFE5
  4170                           fsr1l	equ	0xFE1
  4171                           indf2	equ	0xFDF
  4172                           postinc2	equ	0xFDE
  4173                           postdec2	equ	0xFDD
  4174                           fsr2h	equ	0xFDA
  4175                           fsr2l	equ	0xFD9
  4176                           status	equ	0xFD8
  4177                           
  4178 ;; *************** function _low_isr *****************
  4179 ;; Defined at:
  4180 ;;		line 236 in file "../WordClock.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;		None
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;		None
  4185 ;; Return value:  Size  Location     Type
  4186 ;;		None               void
  4187 ;; Registers used:
  4188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4196 ;;      Temps:         19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4197 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4198 ;;Total ram usage:       19 bytes
  4199 ;; Hardware stack levels used:    1
  4200 ;; Hardware stack levels required when called:    4
  4201 ;; This function calls:
  4202 ;;		_ReadUSART
  4203 ;;		_SetTimer0
  4204 ;;		_strstr
  4205 ;; This function is called by:
  4206 ;;		Interrupt level 1
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           	psect	intcodelo
  4211  000018                     __pintcodelo:
  4212                           	opt stack 0
  4213  000018                     _low_isr:
  4214                           	opt stack 23
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;incstack = 0
  4218  000018  CFD8 F029          	movff	status,??_low_isr+2
  4219  00001C  CFE8 F02A          	movff	wreg,??_low_isr+3
  4220  000020  CFE0 F02B          	movff	bsr,??_low_isr+4
  4221  000024  CFFA F02C          	movff	pclath,??_low_isr+5
  4222  000028  CFFB F02D          	movff	pclatu,??_low_isr+6
  4223  00002C  CFE9 F02E          	movff	fsr0l,??_low_isr+7
  4224  000030  CFEA F02F          	movff	fsr0h,??_low_isr+8
  4225  000034  CFE1 F030          	movff	fsr1l,??_low_isr+9
  4226  000038  CFE2 F031          	movff	fsr1h,??_low_isr+10
  4227  00003C  CFD9 F032          	movff	fsr2l,??_low_isr+11
  4228  000040  CFDA F033          	movff	fsr2h,??_low_isr+12
  4229  000044  CFF3 F034          	movff	prodl,??_low_isr+13
  4230  000048  CFF4 F035          	movff	prodh,??_low_isr+14
  4231  00004C  CFF6 F036          	movff	tblptrl,??_low_isr+15
  4232  000050  CFF7 F037          	movff	tblptrh,??_low_isr+16
  4233  000054  CFF8 F038          	movff	tblptru,??_low_isr+17
  4234  000058  CFF5 F039          	movff	tablat,??_low_isr+18
  4235                           
  4236                           ;WordClock.c: 238: if (PIR1bits.TXIF)
  4237  00005C  A89E               	btfss	3998,4,c	;volatile
  4238  00005E  D01C               	goto	i1l2489
  4239                           
  4240                           ;WordClock.c: 239: {
  4241                           ;WordClock.c: 240: TXREG = TxBuff[TxBuffIndx];
  4242  000060  5052               	movf	_TxBuffIndx,w,c
  4243  000062  0D01               	mullw	1
  4244  000064  0100               	movlb	0	; () banked
  4245  000066  0E88               	movlw	low _TxBuff
  4246  000068  24F3               	addwf	prodl,w,c
  4247  00006A  6ED9               	movwf	fsr2l,c
  4248  00006C  0100               	movlb	0	; () banked
  4249  00006E  0E00               	movlw	high _TxBuff
  4250  000070  20F4               	addwfc	prodh,w,c
  4251  000072  6EDA               	movwf	fsr2h,c
  4252  000074  50DF               	movf	indf2,w,c
  4253  000076  6EAD               	movwf	4013,c	;volatile
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;WordClock.c: 241: TxBuffIndx++;
  4257  000078  2A52               	incf	_TxBuffIndx,f,c
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;WordClock.c: 242: if(TxBuffIndx>=TxBuffLen)
  4261  00007A  5053               	movf	_TxBuffLen,w,c
  4262  00007C  5C52               	subwf	_TxBuffIndx,w,c
  4263  00007E  A0D8               	btfss	status,0,c
  4264  000080  D00B               	goto	i1l2489
  4265                           
  4266                           ; BSR set to: 0
  4267                           ;WordClock.c: 243: {
  4268                           ;WordClock.c: 244: PIE1bits.TXIE=0;
  4269  000082  989D               	bcf	3997,4,c	;volatile
  4270                           
  4271                           ; BSR set to: 0
  4272                           ;WordClock.c: 245: TxFsmFlag=1;
  4273  000084  6E27               	movwf	??_low_isr& (0+255),c
  4274  000086  0E01               	movlw	1
  4275  000088  0100               	movlb	0	; () banked
  4276  00008A  0100               	movlb	0	; () banked
  4277  00008C  6F87               	movwf	_TxFsmFlag& (0+255),b
  4278  00008E  5027               	movf	??_low_isr& (0+255),w,c
  4279                           
  4280                           ;WordClock.c: 246: CommFsmFlag=1;
  4281  000090  6E27               	movwf	??_low_isr& (0+255),c
  4282  000092  0E01               	movlw	1
  4283  000094  6E46               	movwf	_CommFsmFlag,c
  4284  000096  5027               	movf	??_low_isr& (0+255),w,c
  4285  000098                     i1l2489:
  4286                           
  4287                           ;WordClock.c: 247: }
  4288                           ;WordClock.c: 248: }
  4289                           ;WordClock.c: 250: if (PIR1bits.RCIF)
  4290  000098  AA9E               	btfss	3998,5,c	;volatile
  4291  00009A  D059               	goto	i1l2531
  4292                           
  4293                           ;WordClock.c: 251: {
  4294                           ;WordClock.c: 252: if (RxBuffIndx >= 64)
  4295  00009C  0E3F               	movlw	63
  4296  00009E  644F               	cpfsgt	_RxBuffIndx,c
  4297  0000A0  D004               	goto	i1l2501
  4298                           
  4299                           ;WordClock.c: 253: {
  4300                           ;WordClock.c: 254: RXerr = 3;
  4301  0000A2  0E00               	movlw	0
  4302  0000A4  6E41               	movwf	_RXerr+1,c
  4303  0000A6  0E03               	movlw	3
  4304  0000A8  D014               	goto	L6
  4305  0000AA                     i1l2501:
  4306                           
  4307                           ;WordClock.c: 259: else
  4308                           ;WordClock.c: 260: {
  4309                           ;WordClock.c: 261: RXbuff[RxBuffIndx] = ReadUSART();
  4310  0000AA  504F               	movf	_RxBuffIndx,w,c
  4311  0000AC  0D01               	mullw	1
  4312  0000AE  0101               	movlb	1	; () banked
  4313  0000B0  0E00               	movlw	low _RXbuff
  4314  0000B2  24F3               	addwf	prodl,w,c
  4315  0000B4  6ED9               	movwf	fsr2l,c
  4316  0000B6  0101               	movlb	1	; () banked
  4317  0000B8  0E01               	movlw	high _RXbuff
  4318  0000BA  20F4               	addwfc	prodh,w,c
  4319  0000BC  6EDA               	movwf	fsr2h,c
  4320  0000BE  ECC1  F00F         	call	_ReadUSART	;wreg free
  4321  0000C2  6EDF               	movwf	indf2,c
  4322                           
  4323                           ;WordClock.c: 262: if(RCSTAbits.OERR || RCSTAbits.FERR)
  4324  0000C4  B2AB               	btfsc	4011,1,c	;volatile
  4325  0000C6  D002               	goto	i1l2507
  4326  0000C8  A4AB               	btfss	4011,2,c	;volatile
  4327  0000CA  D00B               	goto	i1l2515
  4328  0000CC                     i1l2507:
  4329                           
  4330                           ;WordClock.c: 263: {
  4331                           ;WordClock.c: 264: RXerr = 1;
  4332  0000CC  0E00               	movlw	0
  4333  0000CE  6E41               	movwf	_RXerr+1,c
  4334  0000D0  0E01               	movlw	1
  4335  0000D2                     L6:
  4336  0000D2  6E40               	movwf	_RXerr,c
  4337                           
  4338                           ;WordClock.c: 265: RxFlag = 1;
  4339  0000D4  6E27               	movwf	??_low_isr& (0+255),c
  4340  0000D6  0E01               	movlw	1
  4341  0000D8  6E50               	movwf	_RxFlag,c
  4342  0000DA  5027               	movf	??_low_isr& (0+255),w,c
  4343                           
  4344                           ;WordClock.c: 266: INTCONbits.TMR0IE=0;
  4345  0000DC  9AF2               	bcf	intcon,5,c	;volatile
  4346                           
  4347                           ;WordClock.c: 267: T0CONbits.TMR0ON=0;
  4348  0000DE  9ED5               	bcf	4053,7,c	;volatile
  4349                           
  4350                           ;WordClock.c: 268: }
  4351  0000E0  D036               	goto	i1l2531
  4352  0000E2                     i1l2515:
  4353                           
  4354                           ;WordClock.c: 269: else
  4355                           ;WordClock.c: 270: {
  4356                           ;WordClock.c: 271: if(strstr(RXbuff, FsmStructActive[FsmIndx].Str))
  4357  0000E2  0101               	movlb	1	; () banked
  4358  0000E4  0E01               	movlw	high _RXbuff
  4359  0000E6  6E24               	movwf	strstr@s1+1,c
  4360  0000E8  0101               	movlb	1	; () banked
  4361  0000EA  0E00               	movlw	low _RXbuff
  4362  0000EC  6E23               	movwf	strstr@s1,c
  4363  0000EE  5047               	movf	_FsmIndx,w,c
  4364  0000F0  0D05               	mullw	5
  4365  0000F2  C03C  F027         	movff	_FsmStructActive,??_low_isr
  4366  0000F6  C03D  F028         	movff	_FsmStructActive+1,??_low_isr+1
  4367  0000FA  50F3               	movf	prodl,w,c
  4368  0000FC  2627               	addwf	??_low_isr,f,c
  4369  0000FE  50F4               	movf	prodh,w,c
  4370  000100  2228               	addwfc	??_low_isr+1,f,c
  4371  000102  0E01               	movlw	1
  4372  000104  2427               	addwf	??_low_isr,w,c
  4373  000106  6ED9               	movwf	fsr2l,c
  4374  000108  0E00               	movlw	0
  4375  00010A  2028               	addwfc	??_low_isr+1,w,c
  4376  00010C  6EDA               	movwf	fsr2h,c
  4377  00010E  CFDE F025          	movff	postinc2,strstr@s2
  4378  000112  CFDD F026          	movff	postdec2,strstr@s2+1
  4379  000116  EC61  F00D         	call	_strstr	;wreg free
  4380  00011A  5024               	movf	?_strstr+1,w,c
  4381  00011C  1023               	iorwf	?_strstr,w,c
  4382  00011E  B4D8               	btfsc	status,2,c
  4383  000120  D00C               	goto	i1l2521
  4384                           
  4385                           ;WordClock.c: 272: {
  4386                           ;WordClock.c: 273: PIE1bits.RCIE=0;
  4387  000122  9A9D               	bcf	3997,5,c	;volatile
  4388                           
  4389                           ;WordClock.c: 274: RxFsmFlag=1;
  4390  000124  6E27               	movwf	??_low_isr& (0+255),c
  4391  000126  0E01               	movlw	1
  4392  000128  0100               	movlb	0	; () banked
  4393  00012A  0100               	movlb	0	; () banked
  4394  00012C  6F85               	movwf	_RxFsmFlag& (0+255),b
  4395  00012E  5027               	movf	??_low_isr& (0+255),w,c
  4396                           
  4397                           ;WordClock.c: 275: CommFsmFlag=1;
  4398  000130  6E27               	movwf	??_low_isr& (0+255),c
  4399  000132  0E01               	movlw	1
  4400  000134  6E46               	movwf	_CommFsmFlag,c
  4401  000136  5027               	movf	??_low_isr& (0+255),w,c
  4402                           
  4403                           ;WordClock.c: 276: }
  4404  000138  D00A               	goto	i1l2531
  4405  00013A                     i1l2521:
  4406                           
  4407                           ;WordClock.c: 277: else
  4408                           ;WordClock.c: 278: {
  4409                           ;WordClock.c: 279: RxBuffIndx ++;
  4410  00013A  2A4F               	incf	_RxBuffIndx,f,c
  4411                           
  4412                           ;WordClock.c: 280: SetTimer0(Timer0_ms);
  4413  00013C  C060  F014         	movff	_Timer0_ms,SetTimer0@Count
  4414  000140  C061  F015         	movff	_Timer0_ms+1,SetTimer0@Count+1
  4415  000144  EC11  F010         	call	_SetTimer0	;wreg free
  4416                           
  4417                           ;WordClock.c: 281: INTCONbits.TMR0IF = 0;
  4418  000148  94F2               	bcf	intcon,2,c	;volatile
  4419                           
  4420                           ;WordClock.c: 282: INTCONbits.TMR0IE=1;
  4421  00014A  8AF2               	bsf	intcon,5,c	;volatile
  4422                           
  4423                           ;WordClock.c: 283: T0CONbits.TMR0ON=1;
  4424  00014C  8ED5               	bsf	4053,7,c	;volatile
  4425  00014E                     i1l2531:
  4426                           
  4427                           ;WordClock.c: 284: }
  4428                           ;WordClock.c: 285: }
  4429                           ;WordClock.c: 286: }
  4430                           ;WordClock.c: 287: }
  4431                           ;WordClock.c: 289: if (INTCONbits.TMR0IF)
  4432  00014E  A4F2               	btfss	intcon,2,c	;volatile
  4433  000150  D00A               	goto	i1l235
  4434                           
  4435                           ;WordClock.c: 290: {
  4436                           ;WordClock.c: 291: INTCONbits.TMR0IE=0;
  4437  000152  9AF2               	bcf	intcon,5,c	;volatile
  4438                           
  4439                           ;WordClock.c: 292: INTCONbits.TMR0IF=0;
  4440  000154  94F2               	bcf	intcon,2,c	;volatile
  4441                           
  4442                           ;WordClock.c: 293: RXerr = 2;
  4443  000156  0E00               	movlw	0
  4444  000158  6E41               	movwf	_RXerr+1,c
  4445  00015A  0E02               	movlw	2
  4446  00015C  6E40               	movwf	_RXerr,c
  4447                           
  4448                           ;WordClock.c: 294: RxFlag = 1;
  4449  00015E  6E27               	movwf	??_low_isr& (0+255),c
  4450  000160  0E01               	movlw	1
  4451  000162  6E50               	movwf	_RxFlag,c
  4452  000164  5027               	movf	??_low_isr& (0+255),w,c
  4453  000166                     i1l235:
  4454  000166  C039  FFF5         	movff	??_low_isr+18,tablat
  4455  00016A  C038  FFF8         	movff	??_low_isr+17,tblptru
  4456  00016E  C037  FFF7         	movff	??_low_isr+16,tblptrh
  4457  000172  C036  FFF6         	movff	??_low_isr+15,tblptrl
  4458  000176  C035  FFF4         	movff	??_low_isr+14,prodh
  4459  00017A  C034  FFF3         	movff	??_low_isr+13,prodl
  4460  00017E  C033  FFDA         	movff	??_low_isr+12,fsr2h
  4461  000182  C032  FFD9         	movff	??_low_isr+11,fsr2l
  4462  000186  C031  FFE2         	movff	??_low_isr+10,fsr1h
  4463  00018A  C030  FFE1         	movff	??_low_isr+9,fsr1l
  4464  00018E  C02F  FFEA         	movff	??_low_isr+8,fsr0h
  4465  000192  C02E  FFE9         	movff	??_low_isr+7,fsr0l
  4466  000196  C02D  FFFB         	movff	??_low_isr+6,pclatu
  4467  00019A  C02C  FFFA         	movff	??_low_isr+5,pclath
  4468  00019E  C02B  FFE0         	movff	??_low_isr+4,bsr
  4469  0001A2  C02A  FFE8         	movff	??_low_isr+3,wreg
  4470  0001A6  C029  FFD8         	movff	??_low_isr+2,status
  4471  0001AA  0010               	retfie	
  4472  0001AC                     __end_of_low_isr:
  4473                           	opt stack 0
  4474                           tosu	equ	0xFFF
  4475                           tosh	equ	0xFFE
  4476                           tosl	equ	0xFFD
  4477                           pclatu	equ	0xFFB
  4478                           pclath	equ	0xFFA
  4479                           tblptru	equ	0xFF8
  4480                           tblptrh	equ	0xFF7
  4481                           tblptrl	equ	0xFF6
  4482                           tablat	equ	0xFF5
  4483                           prodh	equ	0xFF4
  4484                           prodl	equ	0xFF3
  4485                           intcon	equ	0xFF2
  4486                           intcon2	equ	0xFF1
  4487                           postinc0	equ	0xFEE
  4488                           fsr0h	equ	0xFEA
  4489                           fsr0l	equ	0xFE9
  4490                           wreg	equ	0xFE8
  4491                           postdec1	equ	0xFE5
  4492                           fsr1h	equ	0xFE2
  4493                           fsr1l	equ	0xFE1
  4494                           bsr	equ	0xFE0
  4495                           indf2	equ	0xFDF
  4496                           postinc2	equ	0xFDE
  4497                           postdec2	equ	0xFDD
  4498                           fsr2h	equ	0xFDA
  4499                           fsr2l	equ	0xFD9
  4500                           status	equ	0xFD8
  4501                           
  4502 ;; *************** function _strstr *****************
  4503 ;; Defined at:
  4504 ;;		line 4 in file "/Applications/microchip/xc8/v1.31/sources/common/strstr.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;  s1              2   34[COMRAM] PTR const unsigned char 
  4507 ;;		 -> NULL(0), RXbuff(64), 
  4508 ;;  s2              2   36[COMRAM] PTR const unsigned char 
  4509 ;;		 -> STR_10(1), STR_9(8), STR_8(6), STR_7(4), 
  4510 ;;		 -> STR_6(5), STR_5(1), STR_4(8), STR_3(6), 
  4511 ;;		 -> STR_2(4), STR_1(5), 
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;		None
  4514 ;; Return value:  Size  Location     Type
  4515 ;;                  2   34[COMRAM] PTR unsigned char 
  4516 ;; Registers used:
  4517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4523 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4526 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4527 ;;Total ram usage:        4 bytes
  4528 ;; Hardware stack levels used:    1
  4529 ;; Hardware stack levels required when called:    3
  4530 ;; This function calls:
  4531 ;;		_strchr
  4532 ;;		_strncmp
  4533 ;;		i1_strlen
  4534 ;; This function is called by:
  4535 ;;		_low_isr
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           
  4539                           	psect	text24
  4540  001AC2                     __ptext24:
  4541                           	opt stack 0
  4542  001AC2                     _strstr:
  4543                           	opt stack 23
  4544                           
  4545                           ;incstack = 0
  4546  001AC2  D033               	goto	i1l2369
  4547  001AC4                     i1l2361:
  4548  001AC4  C024  F01B         	movff	strstr@s1+1,strncmp@s1+1
  4549  001AC8  C023  F01A         	movff	strstr@s1,strncmp@s1
  4550  001ACC  C026  F01D         	movff	strstr@s2+1,strncmp@s2+1
  4551  001AD0  C025  F01C         	movff	strstr@s2,strncmp@s2
  4552  001AD4  C026  F015         	movff	strstr@s2+1,i1strlen@s+1
  4553  001AD8  C025  F014         	movff	strstr@s2,i1strlen@s
  4554  001ADC  EC5F  F00F         	call	i1_strlen	;wreg free
  4555  001AE0  C014  F01E         	movff	?i1_strlen,strncmp@len
  4556  001AE4  C015  F01F         	movff	?i1_strlen+1,strncmp@len+1
  4557  001AE8  EC1C  F00D         	call	_strncmp	;wreg free
  4558  001AEC  501B               	movf	?_strncmp+1,w,c
  4559  001AEE  101A               	iorwf	?_strncmp,w,c
  4560  001AF0  A4D8               	btfss	status,2,c
  4561  001AF2  D005               	goto	i1l2367
  4562  001AF4  C024  F024         	movff	strstr@s1+1,?_strstr+1
  4563  001AF8  C023  F023         	movff	strstr@s1,?_strstr
  4564  001AFC  D025               	goto	i1l1024
  4565  001AFE                     i1l2367:
  4566  001AFE  0E01               	movlw	1
  4567  001B00  2423               	addwf	strstr@s1,w,c
  4568  001B02  6E14               	movwf	strchr@ptr,c
  4569  001B04  0E00               	movlw	0
  4570  001B06  2024               	addwfc	strstr@s1+1,w,c
  4571  001B08  6E15               	movwf	strchr@ptr+1,c
  4572  001B0A  C025  FFF6         	movff	strstr@s2,tblptrl
  4573  001B0E  C026  FFF7         	movff	strstr@s2+1,tblptrh
  4574  001B12  0E00               	movlw	low (__mediumconst shr (0+16))
  4575  001B14  6EF8               	movwf	tblptru,c
  4576  001B16  0008               	tblrd		*
  4577  001B18  50F5               	movf	tablat,w,c
  4578  001B1A  6E16               	movwf	strchr@chr,c
  4579  001B1C  6A17               	clrf	strchr@chr+1,c
  4580  001B1E  EC80  F00F         	call	_strchr	;wreg free
  4581  001B22  C014  F023         	movff	?_strchr,strstr@s1
  4582  001B26  C015  F024         	movff	?_strchr+1,strstr@s1+1
  4583  001B2A                     i1l2369:
  4584  001B2A  5024               	movf	strstr@s1+1,w,c
  4585  001B2C  1023               	iorwf	strstr@s1,w,c
  4586  001B2E  B4D8               	btfsc	status,2,c
  4587  001B30  D007               	goto	i1l2373
  4588  001B32  C023  FFD9         	movff	strstr@s1,fsr2l
  4589  001B36  C024  FFDA         	movff	strstr@s1+1,fsr2h
  4590  001B3A  50DF               	movf	indf2,w,c
  4591  001B3C  A4D8               	btfss	status,2,c
  4592  001B3E  D7C2               	goto	i1l2361
  4593  001B40                     i1l2373:
  4594  001B40  0E00               	movlw	0
  4595  001B42  6E24               	movwf	?_strstr+1,c
  4596  001B44  0E00               	movlw	0
  4597  001B46  6E23               	movwf	?_strstr,c
  4598  001B48                     i1l1024:
  4599  001B48  0012               	return	
  4600  001B4A                     __end_of_strstr:
  4601                           	opt stack 0
  4602                           tosu	equ	0xFFF
  4603                           tosh	equ	0xFFE
  4604                           tosl	equ	0xFFD
  4605                           pclatu	equ	0xFFB
  4606                           pclath	equ	0xFFA
  4607                           tblptru	equ	0xFF8
  4608                           tblptrh	equ	0xFF7
  4609                           tblptrl	equ	0xFF6
  4610                           tablat	equ	0xFF5
  4611                           prodh	equ	0xFF4
  4612                           prodl	equ	0xFF3
  4613                           intcon	equ	0xFF2
  4614                           intcon2	equ	0xFF1
  4615                           postinc0	equ	0xFEE
  4616                           fsr0h	equ	0xFEA
  4617                           fsr0l	equ	0xFE9
  4618                           wreg	equ	0xFE8
  4619                           postdec1	equ	0xFE5
  4620                           fsr1h	equ	0xFE2
  4621                           fsr1l	equ	0xFE1
  4622                           bsr	equ	0xFE0
  4623                           indf2	equ	0xFDF
  4624                           postinc2	equ	0xFDE
  4625                           postdec2	equ	0xFDD
  4626                           fsr2h	equ	0xFDA
  4627                           fsr2l	equ	0xFD9
  4628                           status	equ	0xFD8
  4629                           
  4630 ;; *************** function i1_strlen *****************
  4631 ;; Defined at:
  4632 ;;		line 4 in file "/Applications/microchip/xc8/v1.31/sources/common/strlen.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;  s               2   19[COMRAM] PTR const unsigned char 
  4635 ;;		 -> STR_10(1), STR_9(8), STR_8(6), STR_7(4), 
  4636 ;;		 -> STR_6(5), STR_5(1), STR_4(8), STR_3(6), 
  4637 ;;		 -> STR_2(4), STR_1(5), 
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;  strlen          2   23[COMRAM] PTR const unsigned char 
  4640 ;;		 -> STR_10(1), STR_9(8), STR_8(6), STR_7(4), 
  4641 ;;		 -> STR_6(5), STR_5(1), STR_4(8), STR_3(6), 
  4642 ;;		 -> STR_2(4), STR_1(5), 
  4643 ;; Return value:  Size  Location     Type
  4644 ;;                  2   19[COMRAM] unsigned int 
  4645 ;; Registers used:
  4646 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4652 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4653 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4654 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4655 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4656 ;;Total ram usage:        6 bytes
  4657 ;; Hardware stack levels used:    1
  4658 ;; Hardware stack levels required when called:    2
  4659 ;; This function calls:
  4660 ;;		Nothing
  4661 ;; This function is called by:
  4662 ;;		_strstr
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           	psect	text25
  4667  001EBE                     __ptext25:
  4668                           	opt stack 0
  4669  001EBE                     i1_strlen:
  4670                           	opt stack 23
  4671                           
  4672                           ;incstack = 0
  4673  001EBE  C015  F019         	movff	i1strlen@s+1,i1strlen@cp+1
  4674  001EC2  C014  F018         	movff	i1strlen@s,i1strlen@cp
  4675  001EC6  D002               	goto	i1l2123
  4676  001EC8                     i1l2121:
  4677  001EC8  4A18               	infsnz	i1strlen@cp,f,c
  4678  001ECA  2A19               	incf	i1strlen@cp+1,f,c
  4679  001ECC                     i1l2123:
  4680  001ECC  C018  FFF6         	movff	i1strlen@cp,tblptrl
  4681  001ED0  C019  FFF7         	movff	i1strlen@cp+1,tblptrh
  4682  001ED4  0E00               	movlw	low (__mediumconst shr (0+16))
  4683  001ED6  6EF8               	movwf	tblptru,c
  4684  001ED8  0008               	tblrd		*
  4685  001EDA  50F5               	movf	tablat,w,c
  4686  001EDC  0900               	iorlw	0
  4687  001EDE  A4D8               	btfss	status,2,c
  4688  001EE0  D7F3               	goto	i1l2121
  4689  001EE2  C014  F016         	movff	i1strlen@s,??i1_strlen
  4690  001EE6  C015  F017         	movff	i1strlen@s+1,??i1_strlen+1
  4691  001EEA  1E16               	comf	??i1_strlen,f,c
  4692  001EEC  1E17               	comf	??i1_strlen+1,f,c
  4693  001EEE  4A16               	infsnz	??i1_strlen,f,c
  4694  001EF0  2A17               	incf	??i1_strlen+1,f,c
  4695  001EF2  5018               	movf	i1strlen@cp,w,c
  4696  001EF4  2416               	addwf	??i1_strlen,w,c
  4697  001EF6  6E14               	movwf	?i1_strlen,c
  4698  001EF8  5019               	movf	i1strlen@cp+1,w,c
  4699  001EFA  2017               	addwfc	??i1_strlen+1,w,c
  4700  001EFC  6E15               	movwf	?i1_strlen+1,c
  4701  001EFE  0012               	return	
  4702  001F00                     __end_ofi1_strlen:
  4703                           	opt stack 0
  4704                           tosu	equ	0xFFF
  4705                           tosh	equ	0xFFE
  4706                           tosl	equ	0xFFD
  4707                           pclatu	equ	0xFFB
  4708                           pclath	equ	0xFFA
  4709                           tblptru	equ	0xFF8
  4710                           tblptrh	equ	0xFF7
  4711                           tblptrl	equ	0xFF6
  4712                           tablat	equ	0xFF5
  4713                           prodh	equ	0xFF4
  4714                           prodl	equ	0xFF3
  4715                           intcon	equ	0xFF2
  4716                           intcon2	equ	0xFF1
  4717                           postinc0	equ	0xFEE
  4718                           fsr0h	equ	0xFEA
  4719                           fsr0l	equ	0xFE9
  4720                           wreg	equ	0xFE8
  4721                           postdec1	equ	0xFE5
  4722                           fsr1h	equ	0xFE2
  4723                           fsr1l	equ	0xFE1
  4724                           bsr	equ	0xFE0
  4725                           indf2	equ	0xFDF
  4726                           postinc2	equ	0xFDE
  4727                           postdec2	equ	0xFDD
  4728                           fsr2h	equ	0xFDA
  4729                           fsr2l	equ	0xFD9
  4730                           status	equ	0xFD8
  4731                           
  4732 ;; *************** function _strncmp *****************
  4733 ;; Defined at:
  4734 ;;		line 4 in file "/Applications/microchip/xc8/v1.31/sources/common/strncmp.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;  s1              2   25[COMRAM] PTR const unsigned char 
  4737 ;;		 -> NULL(0), RXbuff(64), 
  4738 ;;  s2              2   27[COMRAM] PTR const unsigned char 
  4739 ;;		 -> STR_10(1), STR_9(8), STR_8(6), STR_7(4), 
  4740 ;;		 -> STR_6(5), STR_5(1), STR_4(8), STR_3(6), 
  4741 ;;		 -> STR_2(4), STR_1(5), 
  4742 ;;  len             2   29[COMRAM] unsigned int 
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;		None
  4745 ;; Return value:  Size  Location     Type
  4746 ;;                  2   25[COMRAM] int 
  4747 ;; Registers used:
  4748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4749 ;; Tracked objects:
  4750 ;;		On entry : 0/0
  4751 ;;		On exit  : 0/0
  4752 ;;		Unchanged: 0/0
  4753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4754 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4756 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4757 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4758 ;;Total ram usage:        9 bytes
  4759 ;; Hardware stack levels used:    1
  4760 ;; Hardware stack levels required when called:    2
  4761 ;; This function calls:
  4762 ;;		Nothing
  4763 ;; This function is called by:
  4764 ;;		_strstr
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           	psect	text26
  4769  001A38                     __ptext26:
  4770                           	opt stack 0
  4771  001A38                     _strncmp:
  4772                           	opt stack 23
  4773                           
  4774                           ;incstack = 0
  4775  001A38  D037               	goto	i1l2095
  4776  001A3A                     i1l2085:
  4777  001A3A  C01A  FFD9         	movff	strncmp@s1,fsr2l
  4778  001A3E  C01B  FFDA         	movff	strncmp@s1+1,fsr2h
  4779  001A42  50DF               	movf	indf2,w,c
  4780  001A44  B4D8               	btfsc	status,2,c
  4781  001A46  D011               	goto	i1l2089
  4782  001A48  C01C  FFF6         	movff	strncmp@s2,tblptrl
  4783  001A4C  C01D  FFF7         	movff	strncmp@s2+1,tblptrh
  4784  001A50  0E00               	movlw	low (__mediumconst shr (0+16))
  4785  001A52  6EF8               	movwf	tblptru,c
  4786  001A54  0008               	tblrd		*
  4787  001A56  CFF5 F020          	movff	tablat,??_strncmp
  4788  001A5A  C01A  FFD9         	movff	strncmp@s1,fsr2l
  4789  001A5E  C01B  FFDA         	movff	strncmp@s1+1,fsr2h
  4790  001A62  50DF               	movf	indf2,w,c
  4791  001A64  1820               	xorwf	??_strncmp,w,c
  4792  001A66  B4D8               	btfsc	status,2,c
  4793  001A68  D01B               	goto	i1l2093
  4794  001A6A                     i1l2089:
  4795  001A6A  C01C  FFF6         	movff	strncmp@s2,tblptrl
  4796  001A6E  C01D  FFF7         	movff	strncmp@s2+1,tblptrh
  4797  001A72  0E00               	movlw	low (__mediumconst shr (0+16))
  4798  001A74  6EF8               	movwf	tblptru,c
  4799  001A76  0008               	tblrd		*
  4800  001A78  50F5               	movf	tablat,w,c
  4801  001A7A  6E20               	movwf	??_strncmp& (0+255),c
  4802  001A7C  6A21               	clrf	(??_strncmp+1)& (0+255),c
  4803  001A7E  1E20               	comf	??_strncmp,f,c
  4804  001A80  1E21               	comf	??_strncmp+1,f,c
  4805  001A82  4A20               	infsnz	??_strncmp,f,c
  4806  001A84  2A21               	incf	??_strncmp+1,f,c
  4807  001A86  C01A  FFD9         	movff	strncmp@s1,fsr2l
  4808  001A8A  C01B  FFDA         	movff	strncmp@s1+1,fsr2h
  4809  001A8E  50DF               	movf	indf2,w,c
  4810  001A90  6E22               	movwf	(??_strncmp+2)& (0+255),c
  4811  001A92  5022               	movf	??_strncmp+2,w,c
  4812  001A94  2420               	addwf	??_strncmp,w,c
  4813  001A96  6E1A               	movwf	?_strncmp,c
  4814  001A98  0E00               	movlw	0
  4815  001A9A  2021               	addwfc	??_strncmp+1,w,c
  4816  001A9C  6E1B               	movwf	?_strncmp+1,c
  4817  001A9E  D010               	goto	i1l1052
  4818  001AA0                     i1l2093:
  4819  001AA0  4A1A               	infsnz	strncmp@s1,f,c
  4820  001AA2  2A1B               	incf	strncmp@s1+1,f,c
  4821  001AA4  4A1C               	infsnz	strncmp@s2,f,c
  4822  001AA6  2A1D               	incf	strncmp@s2+1,f,c
  4823  001AA8                     i1l2095:
  4824  001AA8  061E               	decf	strncmp@len,f,c
  4825  001AAA  A0D8               	btfss	status,0,c
  4826  001AAC  061F               	decf	strncmp@len+1,f,c
  4827  001AAE  281E               	incf	strncmp@len& (0+255),w,c
  4828  001AB0  B4D8               	btfsc	status,2,c
  4829  001AB2  281F               	incf	(strncmp@len+1)& (0+255),w,c
  4830  001AB4  A4D8               	btfss	status,2,c
  4831  001AB6  D7C1               	goto	i1l2085
  4832  001AB8  0E00               	movlw	0
  4833  001ABA  6E1B               	movwf	?_strncmp+1,c
  4834  001ABC  0E00               	movlw	0
  4835  001ABE  6E1A               	movwf	?_strncmp,c
  4836  001AC0                     i1l1052:
  4837  001AC0  0012               	return	
  4838  001AC2                     __end_of_strncmp:
  4839                           	opt stack 0
  4840                           tosu	equ	0xFFF
  4841                           tosh	equ	0xFFE
  4842                           tosl	equ	0xFFD
  4843                           pclatu	equ	0xFFB
  4844                           pclath	equ	0xFFA
  4845                           tblptru	equ	0xFF8
  4846                           tblptrh	equ	0xFF7
  4847                           tblptrl	equ	0xFF6
  4848                           tablat	equ	0xFF5
  4849                           prodh	equ	0xFF4
  4850                           prodl	equ	0xFF3
  4851                           intcon	equ	0xFF2
  4852                           intcon2	equ	0xFF1
  4853                           postinc0	equ	0xFEE
  4854                           fsr0h	equ	0xFEA
  4855                           fsr0l	equ	0xFE9
  4856                           wreg	equ	0xFE8
  4857                           postdec1	equ	0xFE5
  4858                           fsr1h	equ	0xFE2
  4859                           fsr1l	equ	0xFE1
  4860                           bsr	equ	0xFE0
  4861                           indf2	equ	0xFDF
  4862                           postinc2	equ	0xFDE
  4863                           postdec2	equ	0xFDD
  4864                           fsr2h	equ	0xFDA
  4865                           fsr2l	equ	0xFD9
  4866                           status	equ	0xFD8
  4867                           
  4868 ;; *************** function _strchr *****************
  4869 ;; Defined at:
  4870 ;;		line 4 in file "/Applications/microchip/xc8/v1.31/sources/common/strchr.c"
  4871 ;; Parameters:    Size  Location     Type
  4872 ;;  ptr             2   19[COMRAM] PTR const unsigned char 
  4873 ;;		 -> NULL(0), RXbuff(64), 
  4874 ;;  chr             2   21[COMRAM] int 
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;		None
  4877 ;; Return value:  Size  Location     Type
  4878 ;;                  2   19[COMRAM] PTR unsigned char 
  4879 ;; Registers used:
  4880 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4886 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4889 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4890 ;;Total ram usage:        4 bytes
  4891 ;; Hardware stack levels used:    1
  4892 ;; Hardware stack levels required when called:    2
  4893 ;; This function calls:
  4894 ;;		Nothing
  4895 ;; This function is called by:
  4896 ;;		_strstr
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           	psect	text27
  4901  001F00                     __ptext27:
  4902                           	opt stack 0
  4903  001F00                     _strchr:
  4904                           	opt stack 23
  4905  001F00                     i1l1041:
  4906  001F00  5016               	movf	strchr@chr,w,c
  4907  001F02  C014  FFD9         	movff	strchr@ptr,fsr2l
  4908  001F06  C015  FFDA         	movff	strchr@ptr+1,fsr2h
  4909  001F0A  62DF               	cpfseq	indf2,c
  4910  001F0C  D005               	goto	i1l2107
  4911  001F0E  C015  F015         	movff	strchr@ptr+1,?_strchr+1
  4912  001F12  C014  F014         	movff	strchr@ptr,?_strchr
  4913  001F16  D00D               	goto	i1l1043
  4914  001F18                     i1l2107:
  4915  001F18  C014  FFD9         	movff	strchr@ptr,fsr2l
  4916  001F1C  C015  FFDA         	movff	strchr@ptr+1,fsr2h
  4917  001F20  4A14               	infsnz	strchr@ptr,f,c
  4918  001F22  2A15               	incf	strchr@ptr+1,f,c
  4919  001F24  50DF               	movf	indf2,w,c
  4920  001F26  A4D8               	btfss	status,2,c
  4921  001F28  D7EB               	goto	i1l1041
  4922  001F2A  0E00               	movlw	0
  4923  001F2C  6E15               	movwf	?_strchr+1,c
  4924  001F2E  0E00               	movlw	0
  4925  001F30  6E14               	movwf	?_strchr,c
  4926  001F32                     i1l1043:
  4927  001F32  0012               	return	
  4928  001F34                     __end_of_strchr:
  4929                           	opt stack 0
  4930                           tosu	equ	0xFFF
  4931                           tosh	equ	0xFFE
  4932                           tosl	equ	0xFFD
  4933                           pclatu	equ	0xFFB
  4934                           pclath	equ	0xFFA
  4935                           tblptru	equ	0xFF8
  4936                           tblptrh	equ	0xFF7
  4937                           tblptrl	equ	0xFF6
  4938                           tablat	equ	0xFF5
  4939                           prodh	equ	0xFF4
  4940                           prodl	equ	0xFF3
  4941                           intcon	equ	0xFF2
  4942                           intcon2	equ	0xFF1
  4943                           postinc0	equ	0xFEE
  4944                           fsr0h	equ	0xFEA
  4945                           fsr0l	equ	0xFE9
  4946                           wreg	equ	0xFE8
  4947                           postdec1	equ	0xFE5
  4948                           fsr1h	equ	0xFE2
  4949                           fsr1l	equ	0xFE1
  4950                           bsr	equ	0xFE0
  4951                           indf2	equ	0xFDF
  4952                           postinc2	equ	0xFDE
  4953                           postdec2	equ	0xFDD
  4954                           fsr2h	equ	0xFDA
  4955                           fsr2l	equ	0xFD9
  4956                           status	equ	0xFD8
  4957                           
  4958 ;; *************** function _SetTimer0 *****************
  4959 ;; Defined at:
  4960 ;;		line 155 in file "../WordClock.c"
  4961 ;; Parameters:    Size  Location     Type
  4962 ;;  Count           2   19[COMRAM] int 
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;		None
  4965 ;; Return value:  Size  Location     Type
  4966 ;;		None               void
  4967 ;; Registers used:
  4968 ;;		wreg, status,2
  4969 ;; Tracked objects:
  4970 ;;		On entry : 0/0
  4971 ;;		On exit  : 0/0
  4972 ;;		Unchanged: 0/0
  4973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4974 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4976 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4977 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4978 ;;Total ram usage:        4 bytes
  4979 ;; Hardware stack levels used:    1
  4980 ;; Hardware stack levels required when called:    2
  4981 ;; This function calls:
  4982 ;;		Nothing
  4983 ;; This function is called by:
  4984 ;;		_low_isr
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988                           	psect	text28
  4989  002022                     __ptext28:
  4990                           	opt stack 0
  4991  002022                     _SetTimer0:
  4992                           	opt stack 24
  4993                           
  4994                           ;WordClock.c: 162: TMR0H = Count >> 8;
  4995                           
  4996                           ;incstack = 0
  4997  002022  C015  F016         	movff	SetTimer0@Count+1,??_SetTimer0
  4998  002026  6A17               	clrf	(??_SetTimer0+1)& (0+255),c
  4999  002028  BE16               	btfsc	??_SetTimer0& (0+255),7,c
  5000  00202A  6817               	setf	(??_SetTimer0+1)& (0+255),c
  5001  00202C  5016               	movf	??_SetTimer0,w,c
  5002  00202E  6ED7               	movwf	4055,c	;volatile
  5003                           
  5004                           ;WordClock.c: 163: TMR0L = Count;
  5005  002030  C014  FFD6         	movff	SetTimer0@Count,4054	;volatile
  5006  002034  0012               	return	
  5007  002036                     __end_of_SetTimer0:
  5008                           	opt stack 0
  5009                           tosu	equ	0xFFF
  5010                           tosh	equ	0xFFE
  5011                           tosl	equ	0xFFD
  5012                           pclatu	equ	0xFFB
  5013                           pclath	equ	0xFFA
  5014                           tblptru	equ	0xFF8
  5015                           tblptrh	equ	0xFF7
  5016                           tblptrl	equ	0xFF6
  5017                           tablat	equ	0xFF5
  5018                           prodh	equ	0xFF4
  5019                           prodl	equ	0xFF3
  5020                           intcon	equ	0xFF2
  5021                           intcon2	equ	0xFF1
  5022                           postinc0	equ	0xFEE
  5023                           fsr0h	equ	0xFEA
  5024                           fsr0l	equ	0xFE9
  5025                           wreg	equ	0xFE8
  5026                           postdec1	equ	0xFE5
  5027                           fsr1h	equ	0xFE2
  5028                           fsr1l	equ	0xFE1
  5029                           bsr	equ	0xFE0
  5030                           indf2	equ	0xFDF
  5031                           postinc2	equ	0xFDE
  5032                           postdec2	equ	0xFDD
  5033                           fsr2h	equ	0xFDA
  5034                           fsr2l	equ	0xFD9
  5035                           status	equ	0xFD8
  5036                           
  5037 ;; *************** function _ReadUSART *****************
  5038 ;; Defined at:
  5039 ;;		line 15 in file "/Applications/microchip/xc8/v1.31/sources/pic18/plib/USART/uread.c"
  5040 ;; Parameters:    Size  Location     Type
  5041 ;;		None
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;  data            1   19[COMRAM] unsigned char 
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  1    wreg      unsigned char 
  5046 ;; Registers used:
  5047 ;;		wreg, status,2, status,0
  5048 ;; Tracked objects:
  5049 ;;		On entry : 0/0
  5050 ;;		On exit  : 0/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5054 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5056 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5057 ;;Total ram usage:        1 bytes
  5058 ;; Hardware stack levels used:    1
  5059 ;; Hardware stack levels required when called:    2
  5060 ;; This function calls:
  5061 ;;		Nothing
  5062 ;; This function is called by:
  5063 ;;		_low_isr
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067                           	psect	text29
  5068  001F82                     __ptext29:
  5069                           	opt stack 0
  5070  001F82                     _ReadUSART:
  5071                           	opt stack 24
  5072                           
  5073                           ;incstack = 0
  5074  001F82  0EF2               	movlw	242
  5075  001F84  1654               	andwf	_USART_Status,f,c
  5076  001F86  ACAB               	btfss	4011,6,c	;volatile
  5077  001F88  D003               	goto	i1l452
  5078  001F8A  9054               	bcf	_USART_Status,0,c
  5079  001F8C  B0AB               	btfsc	4011,0,c	;volatile
  5080  001F8E  8054               	bsf	_USART_Status,0,c
  5081  001F90                     i1l452:
  5082  001F90  B4AB               	btfsc	4011,2,c	;volatile
  5083  001F92  8454               	bsf	_USART_Status,2,c
  5084  001F94  B2AB               	btfsc	4011,1,c	;volatile
  5085  001F96  8654               	bsf	_USART_Status,3,c
  5086  001F98  CFAE F014          	movff	4014,ReadUSART@data	;volatile
  5087  001F9C  5014               	movf	ReadUSART@data,w,c
  5088  001F9E  0012               	return	
  5089  001FA0                     __end_of_ReadUSART:
  5090                           	opt stack 0
  5091                           tosu	equ	0xFFF
  5092                           tosh	equ	0xFFE
  5093                           tosl	equ	0xFFD
  5094                           pclatu	equ	0xFFB
  5095                           pclath	equ	0xFFA
  5096                           tblptru	equ	0xFF8
  5097                           tblptrh	equ	0xFF7
  5098                           tblptrl	equ	0xFF6
  5099                           tablat	equ	0xFF5
  5100                           prodh	equ	0xFF4
  5101                           prodl	equ	0xFF3
  5102                           intcon	equ	0xFF2
  5103                           intcon2	equ	0xFF1
  5104                           postinc0	equ	0xFEE
  5105                           fsr0h	equ	0xFEA
  5106                           fsr0l	equ	0xFE9
  5107                           wreg	equ	0xFE8
  5108                           postdec1	equ	0xFE5
  5109                           fsr1h	equ	0xFE2
  5110                           fsr1l	equ	0xFE1
  5111                           bsr	equ	0xFE0
  5112                           indf2	equ	0xFDF
  5113                           postinc2	equ	0xFDE
  5114                           postdec2	equ	0xFDD
  5115                           fsr2h	equ	0xFDA
  5116                           fsr2l	equ	0xFD9
  5117                           status	equ	0xFD8
  5118                           
  5119 ;; *************** function _high_isr *****************
  5120 ;; Defined at:
  5121 ;;		line 300 in file "../WordClock.c"
  5122 ;; Parameters:    Size  Location     Type
  5123 ;;		None
  5124 ;; Auto vars:     Size  Location     Type
  5125 ;;		None
  5126 ;; Return value:  Size  Location     Type
  5127 ;;		None               void
  5128 ;; Registers used:
  5129 ;;		wreg, status,2, status,0, cstack
  5130 ;; Tracked objects:
  5131 ;;		On entry : 0/0
  5132 ;;		On exit  : 0/0
  5133 ;;		Unchanged: 0/0
  5134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5137 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5138 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5139 ;;Total ram usage:       15 bytes
  5140 ;; Hardware stack levels used:    1
  5141 ;; Hardware stack levels required when called:    1
  5142 ;; This function calls:
  5143 ;;		i2_SetTimer3
  5144 ;; This function is called by:
  5145 ;;		Interrupt level 2
  5146 ;; This function uses a non-reentrant model
  5147 ;;
  5148                           
  5149                           	psect	intcode
  5150  000008                     __pintcode:
  5151                           	opt stack 0
  5152  000008                     _high_isr:
  5153                           	opt stack 23
  5154                           
  5155                           ;incstack = 0
  5156  000008  CFFA F006          	movff	pclath,??_high_isr+1
  5157  00000C  CFFB F007          	movff	pclatu,??_high_isr+2
  5158  000010  CFE9 F008          	movff	fsr0l,??_high_isr+3
  5159  000014  ED78  F00C         	call	int_func,f	;refresh shadow registers
  5160                           tosu	equ	0xFFF
  5161                           tosh	equ	0xFFE
  5162                           tosl	equ	0xFFD
  5163                           pclatu	equ	0xFFB
  5164                           pclath	equ	0xFFA
  5165                           tblptru	equ	0xFF8
  5166                           tblptrh	equ	0xFF7
  5167                           tblptrl	equ	0xFF6
  5168                           tablat	equ	0xFF5
  5169                           prodh	equ	0xFF4
  5170                           prodl	equ	0xFF3
  5171                           intcon	equ	0xFF2
  5172                           intcon2	equ	0xFF1
  5173                           postinc0	equ	0xFEE
  5174                           fsr0h	equ	0xFEA
  5175                           fsr0l	equ	0xFE9
  5176                           wreg	equ	0xFE8
  5177                           postdec1	equ	0xFE5
  5178                           fsr1h	equ	0xFE2
  5179                           fsr1l	equ	0xFE1
  5180                           bsr	equ	0xFE0
  5181                           indf2	equ	0xFDF
  5182                           postinc2	equ	0xFDE
  5183                           postdec2	equ	0xFDD
  5184                           fsr2h	equ	0xFDA
  5185                           fsr2l	equ	0xFD9
  5186                           status	equ	0xFD8
  5187                           
  5188                           	psect	intcode_body
  5189  0018F0                     __pintcode_body:
  5190                           	opt stack 23
  5191  0018F0                     int_func:
  5192                           	opt stack 23
  5193  0018F0  0006               	pop		; remove dummy address from shadow register refresh
  5194  0018F2  CFEA F009          	movff	fsr0h,??_high_isr+4
  5195  0018F6  CFE1 F00A          	movff	fsr1l,??_high_isr+5
  5196  0018FA  CFE2 F00B          	movff	fsr1h,??_high_isr+6
  5197  0018FE  CFD9 F00C          	movff	fsr2l,??_high_isr+7
  5198  001902  CFDA F00D          	movff	fsr2h,??_high_isr+8
  5199  001906  CFF3 F00E          	movff	prodl,??_high_isr+9
  5200  00190A  CFF4 F00F          	movff	prodh,??_high_isr+10
  5201  00190E  CFF6 F010          	movff	tblptrl,??_high_isr+11
  5202  001912  CFF7 F011          	movff	tblptrh,??_high_isr+12
  5203  001916  CFF8 F012          	movff	tblptru,??_high_isr+13
  5204  00191A  CFF5 F013          	movff	tablat,??_high_isr+14
  5205                           
  5206                           ;WordClock.c: 302: if (PIR2bits.TMR3IF)
  5207  00191E  A2A1               	btfss	4001,1,c	;volatile
  5208  001920  D008               	goto	i2l1929
  5209                           
  5210                           ;WordClock.c: 303: {
  5211                           ;WordClock.c: 304: VARbits1.bit2 = 1;
  5212  001922  8455               	bsf	_VARbits1,2,c
  5213                           
  5214                           ;WordClock.c: 305: SetTimer3(Timer3_ms);
  5215  001924  C062  F001         	movff	_Timer3_ms,i2SetTimer3@Count
  5216  001928  C063  F002         	movff	_Timer3_ms+1,i2SetTimer3@Count+1
  5217  00192C  EC1B  F010         	call	i2_SetTimer3	;wreg free
  5218                           
  5219                           ;WordClock.c: 306: PIR2bits.TMR3IF = 0;
  5220  001930  92A1               	bcf	4001,1,c	;volatile
  5221  001932                     i2l1929:
  5222                           
  5223                           ;WordClock.c: 307: }
  5224                           ;WordClock.c: 309: if (PIR1bits.TMR1IF)
  5225  001932  A09E               	btfss	3998,0,c	;volatile
  5226  001934  D008               	goto	i2l1937
  5227                           
  5228                           ;WordClock.c: 310: {
  5229                           ;WordClock.c: 311: SetTimer3(Timer3_ms);
  5230  001936  C062  F001         	movff	_Timer3_ms,i2SetTimer3@Count
  5231  00193A  C063  F002         	movff	_Timer3_ms+1,i2SetTimer3@Count+1
  5232  00193E  EC1B  F010         	call	i2_SetTimer3	;wreg free
  5233                           
  5234                           ;WordClock.c: 318: T1CONbits.TMR1ON=0;
  5235  001942  90CD               	bcf	4045,0,c	;volatile
  5236                           
  5237                           ;WordClock.c: 319: PIR1bits.TMR1IF = 0;
  5238  001944  909E               	bcf	3998,0,c	;volatile
  5239  001946                     i2l1937:
  5240                           
  5241                           ;WordClock.c: 320: }
  5242                           ;WordClock.c: 322: if (INTCONbits.INT0IF)
  5243  001946  A2F2               	btfss	intcon,1,c	;volatile
  5244  001948  D003               	goto	i2l1945
  5245                           
  5246                           ;WordClock.c: 323: {
  5247                           ;WordClock.c: 324: LATBbits.LATB5 ^= 1;
  5248  00194A  7A8A               	btg	3978,5,c	;volatile
  5249                           
  5250                           ;WordClock.c: 325: VARbits1.bit1=1;
  5251  00194C  8255               	bsf	_VARbits1,1,c
  5252                           
  5253                           ;WordClock.c: 326: INTCONbits.INT0IF = 0;
  5254  00194E  92F2               	bcf	intcon,1,c	;volatile
  5255  001950                     i2l1945:
  5256                           
  5257                           ;WordClock.c: 327: }
  5258                           ;WordClock.c: 329: if (PIR1bits.SSPIF)
  5259  001950  A69E               	btfss	3998,3,c	;volatile
  5260  001952  D005               	goto	i2l1951
  5261                           
  5262                           ;WordClock.c: 330: {
  5263                           ;WordClock.c: 331: PIR1bits.SSPIF = 0;
  5264  001954  969E               	bcf	3998,3,c	;volatile
  5265                           
  5266                           ;WordClock.c: 332: I2cEventFlag = 1;
  5267  001956  6E05               	movwf	??_high_isr& (0+255),c
  5268  001958  0E01               	movlw	1
  5269  00195A  6E4C               	movwf	_I2cEventFlag,c
  5270  00195C  5005               	movf	??_high_isr& (0+255),w,c
  5271  00195E                     i2l1951:
  5272                           
  5273                           ;WordClock.c: 333: }
  5274                           ;WordClock.c: 335: if (PIR2bits.BCLIF)
  5275  00195E  A6A1               	btfss	4001,3,c	;volatile
  5276  001960  D009               	goto	i2l243
  5277                           
  5278                           ;WordClock.c: 336: {
  5279                           ;WordClock.c: 337: PIR2bits.BCLIF = 0;
  5280  001962  96A1               	bcf	4001,3,c	;volatile
  5281                           
  5282                           ;WordClock.c: 338: I2cEventFlag = 1;
  5283  001964  6E05               	movwf	??_high_isr& (0+255),c
  5284  001966  0E01               	movlw	1
  5285  001968  6E4C               	movwf	_I2cEventFlag,c
  5286  00196A  5005               	movf	??_high_isr& (0+255),w,c
  5287                           
  5288                           ;WordClock.c: 339: I2cBusCollFlag = 1;
  5289  00196C  6E05               	movwf	??_high_isr& (0+255),c
  5290  00196E  0E01               	movlw	1
  5291  001970  6E49               	movwf	_I2cBusCollFlag,c
  5292  001972  5005               	movf	??_high_isr& (0+255),w,c
  5293  001974                     i2l243:
  5294  001974  C013  FFF5         	movff	??_high_isr+14,tablat
  5295  001978  C012  FFF8         	movff	??_high_isr+13,tblptru
  5296  00197C  C011  FFF7         	movff	??_high_isr+12,tblptrh
  5297  001980  C010  FFF6         	movff	??_high_isr+11,tblptrl
  5298  001984  C00F  FFF4         	movff	??_high_isr+10,prodh
  5299  001988  C00E  FFF3         	movff	??_high_isr+9,prodl
  5300  00198C  C00D  FFDA         	movff	??_high_isr+8,fsr2h
  5301  001990  C00C  FFD9         	movff	??_high_isr+7,fsr2l
  5302  001994  C00B  FFE2         	movff	??_high_isr+6,fsr1h
  5303  001998  C00A  FFE1         	movff	??_high_isr+5,fsr1l
  5304  00199C  C009  FFEA         	movff	??_high_isr+4,fsr0h
  5305  0019A0  C008  FFE9         	movff	??_high_isr+3,fsr0l
  5306  0019A4  C007  FFFB         	movff	??_high_isr+2,pclatu
  5307  0019A8  C006  FFFA         	movff	??_high_isr+1,pclath
  5308  0019AC  0011               	retfie		f
  5309  0019AE                     __end_of_high_isr:
  5310                           	opt stack 0
  5311                           tosu	equ	0xFFF
  5312                           tosh	equ	0xFFE
  5313                           tosl	equ	0xFFD
  5314                           pclatu	equ	0xFFB
  5315                           pclath	equ	0xFFA
  5316                           tblptru	equ	0xFF8
  5317                           tblptrh	equ	0xFF7
  5318                           tblptrl	equ	0xFF6
  5319                           tablat	equ	0xFF5
  5320                           prodh	equ	0xFF4
  5321                           prodl	equ	0xFF3
  5322                           intcon	equ	0xFF2
  5323                           intcon2	equ	0xFF1
  5324                           postinc0	equ	0xFEE
  5325                           fsr0h	equ	0xFEA
  5326                           fsr0l	equ	0xFE9
  5327                           wreg	equ	0xFE8
  5328                           postdec1	equ	0xFE5
  5329                           fsr1h	equ	0xFE2
  5330                           fsr1l	equ	0xFE1
  5331                           bsr	equ	0xFE0
  5332                           indf2	equ	0xFDF
  5333                           postinc2	equ	0xFDE
  5334                           postdec2	equ	0xFDD
  5335                           fsr2h	equ	0xFDA
  5336                           fsr2l	equ	0xFD9
  5337                           status	equ	0xFD8
  5338                           
  5339 ;; *************** function i2_SetTimer3 *****************
  5340 ;; Defined at:
  5341 ;;		line 174 in file "../WordClock.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;  Count           2    0[COMRAM] int 
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;		None
  5346 ;; Return value:  Size  Location     Type
  5347 ;;		None               void
  5348 ;; Registers used:
  5349 ;;		wreg, status,2
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5355 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5357 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5358 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5359 ;;Total ram usage:        4 bytes
  5360 ;; Hardware stack levels used:    1
  5361 ;; This function calls:
  5362 ;;		Nothing
  5363 ;; This function is called by:
  5364 ;;		_high_isr
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           	psect	text31
  5369  002036                     __ptext31:
  5370                           	opt stack 0
  5371  002036                     i2_SetTimer3:
  5372                           	opt stack 23
  5373                           
  5374                           ;WordClock.c: 181: TMR3H = Count >> 8;
  5375                           
  5376                           ;incstack = 0
  5377  002036  C002  F003         	movff	i2SetTimer3@Count+1,??i2_SetTimer3
  5378  00203A  6A04               	clrf	(??i2_SetTimer3+1)& (0+255),c
  5379  00203C  BE03               	btfsc	??i2_SetTimer3& (0+255),7,c
  5380  00203E  6804               	setf	(??i2_SetTimer3+1)& (0+255),c
  5381  002040  5003               	movf	??i2_SetTimer3,w,c
  5382  002042  6EB3               	movwf	4019,c	;volatile
  5383                           
  5384                           ;WordClock.c: 182: TMR3L = Count;
  5385  002044  C001  FFB2         	movff	i2SetTimer3@Count,4018	;volatile
  5386  002048  0012               	return	
  5387  00204A                     __end_ofi2_SetTimer3:
  5388                           	opt stack 0
  5389                           tosu	equ	0xFFF
  5390                           tosh	equ	0xFFE
  5391                           tosl	equ	0xFFD
  5392                           pclatu	equ	0xFFB
  5393                           pclath	equ	0xFFA
  5394                           tblptru	equ	0xFF8
  5395                           tblptrh	equ	0xFF7
  5396                           tblptrl	equ	0xFF6
  5397                           tablat	equ	0xFF5
  5398                           prodh	equ	0xFF4
  5399                           prodl	equ	0xFF3
  5400                           intcon	equ	0xFF2
  5401                           intcon2	equ	0xFF1
  5402                           postinc0	equ	0xFEE
  5403                           fsr0h	equ	0xFEA
  5404                           fsr0l	equ	0xFE9
  5405                           wreg	equ	0xFE8
  5406                           postdec1	equ	0xFE5
  5407                           fsr1h	equ	0xFE2
  5408                           fsr1l	equ	0xFE1
  5409                           bsr	equ	0xFE0
  5410                           indf2	equ	0xFDF
  5411                           postinc2	equ	0xFDE
  5412                           postdec2	equ	0xFDD
  5413                           fsr2h	equ	0xFDA
  5414                           fsr2l	equ	0xFD9
  5415                           status	equ	0xFD8
  5416                           tosu	equ	0xFFF
  5417                           tosh	equ	0xFFE
  5418                           tosl	equ	0xFFD
  5419                           pclatu	equ	0xFFB
  5420                           pclath	equ	0xFFA
  5421                           tblptru	equ	0xFF8
  5422                           tblptrh	equ	0xFF7
  5423                           tblptrl	equ	0xFF6
  5424                           tablat	equ	0xFF5
  5425                           prodh	equ	0xFF4
  5426                           prodl	equ	0xFF3
  5427                           intcon	equ	0xFF2
  5428                           intcon2	equ	0xFF1
  5429                           postinc0	equ	0xFEE
  5430                           fsr0h	equ	0xFEA
  5431                           fsr0l	equ	0xFE9
  5432                           wreg	equ	0xFE8
  5433                           postdec1	equ	0xFE5
  5434                           fsr1h	equ	0xFE2
  5435                           fsr1l	equ	0xFE1
  5436                           bsr	equ	0xFE0
  5437                           indf2	equ	0xFDF
  5438                           postinc2	equ	0xFDE
  5439                           postdec2	equ	0xFDD
  5440                           fsr2h	equ	0xFDA
  5441                           fsr2l	equ	0xFD9
  5442                           status	equ	0xFD8
  5443                           
  5444                           	psect	text32
  5445  000000                     __ptext32:
  5446                           	opt stack 0
  5447                           tosu	equ	0xFFF
  5448                           tosh	equ	0xFFE
  5449                           tosl	equ	0xFFD
  5450                           pclatu	equ	0xFFB
  5451                           pclath	equ	0xFFA
  5452                           tblptru	equ	0xFF8
  5453                           tblptrh	equ	0xFF7
  5454                           tblptrl	equ	0xFF6
  5455                           tablat	equ	0xFF5
  5456                           prodh	equ	0xFF4
  5457                           prodl	equ	0xFF3
  5458                           intcon	equ	0xFF2
  5459                           intcon2	equ	0xFF1
  5460                           postinc0	equ	0xFEE
  5461                           fsr0h	equ	0xFEA
  5462                           fsr0l	equ	0xFE9
  5463                           wreg	equ	0xFE8
  5464                           postdec1	equ	0xFE5
  5465                           fsr1h	equ	0xFE2
  5466                           fsr1l	equ	0xFE1
  5467                           bsr	equ	0xFE0
  5468                           indf2	equ	0xFDF
  5469                           postinc2	equ	0xFDE
  5470                           postdec2	equ	0xFDD
  5471                           fsr2h	equ	0xFDA
  5472                           fsr2l	equ	0xFD9
  5473                           status	equ	0xFD8
  5474                           
  5475                           	psect	rparam
  5476  0000                     tosu	equ	0xFFF
  5477                           tosh	equ	0xFFE
  5478                           tosl	equ	0xFFD
  5479                           pclatu	equ	0xFFB
  5480                           pclath	equ	0xFFA
  5481                           tblptru	equ	0xFF8
  5482                           tblptrh	equ	0xFF7
  5483                           tblptrl	equ	0xFF6
  5484                           tablat	equ	0xFF5
  5485                           prodh	equ	0xFF4
  5486                           prodl	equ	0xFF3
  5487                           intcon	equ	0xFF2
  5488                           intcon2	equ	0xFF1
  5489                           postinc0	equ	0xFEE
  5490                           fsr0h	equ	0xFEA
  5491                           fsr0l	equ	0xFE9
  5492                           wreg	equ	0xFE8
  5493                           postdec1	equ	0xFE5
  5494                           fsr1h	equ	0xFE2
  5495                           fsr1l	equ	0xFE1
  5496                           bsr	equ	0xFE0
  5497                           indf2	equ	0xFDF
  5498                           postinc2	equ	0xFDE
  5499                           postdec2	equ	0xFDD
  5500                           fsr2h	equ	0xFDA
  5501                           fsr2l	equ	0xFD9
  5502                           status	equ	0xFD8


Data Sizes:
    Strings     23
    Constant    0
    Data        27
    BSS         142
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     57      99
    BANK0           128     24      91
    BANK1           256      0      64
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    StartRx@TxStr	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_10(CODE[1]), STR_9(CODE[8]), STR_8(CODE[6]), STR_7(CODE[4]), 
		 -> STR_6(CODE[5]), STR_5(CODE[1]), STR_4(CODE[8]), STR_3(CODE[6]), 
		 -> STR_2(CODE[4]), STR_1(CODE[5]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_10(CODE[1]), STR_9(CODE[8]), STR_8(CODE[6]), STR_7(CODE[4]), 
		 -> STR_6(CODE[5]), STR_5(CODE[1]), STR_4(CODE[8]), STR_3(CODE[6]), 
		 -> STR_2(CODE[4]), STR_1(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), RXbuff(BANK1[64]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), RXbuff(BANK1[64]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), RXbuff(BANK1[64]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_10(CODE[1]), STR_9(CODE[8]), STR_8(CODE[6]), STR_7(CODE[4]), 
		 -> STR_6(CODE[5]), STR_5(CODE[1]), STR_4(CODE[8]), STR_3(CODE[6]), 
		 -> STR_2(CODE[4]), STR_1(CODE[5]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), RXbuff(BANK1[64]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_10(CODE[1]), STR_9(CODE[8]), STR_8(CODE[6]), STR_7(CODE[4]), 
		 -> STR_6(CODE[5]), STR_5(CODE[1]), STR_4(CODE[8]), STR_3(CODE[6]), 
		 -> STR_2(CODE[4]), STR_1(CODE[5]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_10(CODE[1]), STR_9(CODE[8]), STR_8(CODE[6]), STR_7(CODE[4]), 
		 -> STR_6(CODE[5]), STR_5(CODE[1]), STR_4(CODE[8]), STR_3(CODE[6]), 
		 -> STR_2(CODE[4]), STR_1(CODE[5]), 

    memcpy@d1	PTR void  size(2) Largest target is 32
		 -> TxBuff(BANK0[32]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 32
		 -> TxBuff(BANK0[32]), 

    memcpy@s1	PTR const void  size(2) Largest target is 8
		 -> STR_10(CODE[1]), STR_9(CODE[8]), STR_8(CODE[6]), STR_7(CODE[4]), 
		 -> STR_6(CODE[5]), STR_5(CODE[1]), STR_4(CODE[8]), STR_3(CODE[6]), 
		 -> STR_2(CODE[4]), STR_1(CODE[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_10(CODE[1]), STR_9(CODE[8]), STR_8(CODE[6]), STR_7(CODE[4]), 
		 -> STR_6(CODE[5]), STR_5(CODE[1]), STR_4(CODE[8]), STR_3(CODE[6]), 
		 -> STR_2(CODE[4]), STR_1(CODE[5]), 

    sp__memcpy	PTR void  size(2) Largest target is 32
		 -> TxBuff(BANK0[32]), 

    StartTx@TxStr	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_10(CODE[1]), STR_9(CODE[8]), STR_8(CODE[6]), STR_7(CODE[4]), 
		 -> STR_6(CODE[5]), STR_5(CODE[1]), STR_4(CODE[8]), STR_3(CODE[6]), 
		 -> STR_2(CODE[4]), STR_1(CODE[5]), 

    CommFsmSched@FsmStruct.pCallback	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> TimeDecode(), CommFsmIdle(), 

    CommFsmSched@FsmStruct.Str	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_10(CODE[1]), STR_9(CODE[8]), STR_8(CODE[6]), STR_7(CODE[4]), 
		 -> STR_6(CODE[5]), STR_5(CODE[1]), STR_4(CODE[8]), STR_3(CODE[6]), 
		 -> STR_2(CODE[4]), STR_1(CODE[5]), 

    CommFsmSched@FsmStruct	PTR struct FsmTable size(2) Largest target is 30
		 -> NULL(NULL[0]), ReadTimeFsm(BANK0[25]), 

    StartCommFsmSched@FsmStruct	PTR struct FsmTable size(2) Largest target is 30
		 -> ReadTimeFsm(BANK0[25]), 

    CommFsmState	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> TimeDecode(), CommFsmIdle(), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), RXbuff(BANK1[64]), 

    FsmStructActive.pCallback	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> TimeDecode(), CommFsmIdle(), 

    FsmStructActive.Str	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_10(CODE[1]), STR_9(CODE[8]), STR_8(CODE[6]), STR_7(CODE[4]), 
		 -> STR_6(CODE[5]), STR_5(CODE[1]), STR_4(CODE[8]), STR_3(CODE[6]), 
		 -> STR_2(CODE[4]), STR_1(CODE[5]), 

    FsmStructActive	PTR struct FsmTable size(2) Largest target is 30
		 -> NULL(NULL[0]), ReadTimeFsm(BANK0[25]), 

    S682FsmTable$pCallback	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> TimeDecode(), CommFsmIdle(), 

    ReadTimeFsm.pCallback	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> TimeDecode(), CommFsmIdle(), 

    S682FsmTable$Str	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_10(CODE[1]), STR_9(CODE[8]), STR_8(CODE[6]), STR_7(CODE[4]), 
		 -> STR_6(CODE[5]), STR_5(CODE[1]), STR_4(CODE[8]), STR_3(CODE[6]), 
		 -> STR_2(CODE[4]), STR_1(CODE[5]), 

    ReadTimeFsm.Str	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_10(CODE[1]), STR_9(CODE[8]), STR_8(CODE[6]), STR_7(CODE[4]), 
		 -> STR_6(CODE[5]), STR_5(CODE[1]), STR_4(CODE[8]), STR_3(CODE[6]), 
		 -> STR_2(CODE[4]), STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    _low_isr->_strstr
    _strstr->_strncmp
    _strncmp->i1_strlen

Critical Paths under _high_isr in COMRAM

    _high_isr->i2_SetTimer3

Critical Paths under _main in BANK0

    _main->_CommFsmSched
    _RtcWriteTime->___awdiv
    _I2cSettings->___wmul
    _CommFsmSched->_StartTx
    _StartTx->_memcpy

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    9937
                                             18 BANK0      6     6      0
                       _CommFsmSched
                        _CommSetting
                         _I2cBuffChk
                            _I2cData
                        _I2cSettings
                  _InterruptSettings
                        _RtcReadTime
                       _RtcWriteTime
                          _SetTimer1
                          _SetTimer3
                           _Settings
                  _StartCommFsmSched
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     362
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _StartCommFsmSched                                    3     1      2     161
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _Settings                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetTimer3                                            4     2      2     187
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _SetTimer1                                            4     2      2     127
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _RtcWriteTime                                         5     5      0    3974
                                              9 BANK0      5     5      0
                         _I2cBuffChk
                            _I2cData
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     835
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _I2cData                                              8     2      6    2743
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (2) _I2cBuffChk                                           3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _RtcReadTime                                          2     2      0     204
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _InterruptSettings                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2cSettings                                          4     4      0    1009
                                              6 BANK0      4     4      0
                            _OpenI2C
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     882
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _OpenI2C                                              2     1      1     127
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _CommSetting                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CommFsmSched                                         5     3      2    1071
                                             13 BANK0      5     3      2
                        _CommFsmIdle *
                            _StartRx
                            _StartTx
                         _TimeDecode *
 ---------------------------------------------------------------------------------
 (2) _TimeDecode                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _StartTx                                              3     1      2     721
                                             10 BANK0      3     1      2
                             _memcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     225
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     369
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) _StartRx                                              3     1      2      65
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _CommFsmIdle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _low_isr                                             19    19      0    1006
                                             38 COMRAM    19    19      0
                          _ReadUSART
                          _SetTimer0
                             _strstr
 ---------------------------------------------------------------------------------
 (5) _strstr                                               4     0      4     886
                                             34 COMRAM     4     0      4
                             _strchr
                            _strncmp
                           i1_strlen
 ---------------------------------------------------------------------------------
 (6) i1_strlen                                             6     4      2     116
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              9     3      6     293
                                             25 COMRAM     9     3      6
                           i1_strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _strchr                                               4     0      4     194
                                             19 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _SetTimer0                                            4     2      2      97
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _ReadUSART                                            1     1      0      23
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _high_isr                                            15    15      0      68
                                              4 COMRAM    15    15      0
                        i2_SetTimer3
 ---------------------------------------------------------------------------------
 (8) i2_SetTimer3                                          4     2      2      68
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CommFsmSched
     _CommFsmIdle *
     _StartRx *
     _StartTx *
       _memcpy
       _strlen
     _TimeDecode *
   _CommSetting
   _I2cBuffChk
   _I2cData
   _I2cSettings
     _OpenI2C
     ___wmul
   _InterruptSettings
   _RtcReadTime
   _RtcWriteTime
     _I2cBuffChk
     _I2cData
     ___awdiv
   _SetTimer1
   _SetTimer3
   _Settings
   _StartCommFsmSched
   ___lwmod

 _low_isr (ROOT)
   _ReadUSART
   _SetTimer0
   _strstr
     _strchr
     _strncmp
       i1_strlen (ARG)
     i1_strlen

 _high_isr (ROOT)
   i2_SetTimer3

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      40       7       25.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     18      5B       5       71.1%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     39      63       1       78.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FE      34        0.0%
DATA                 0      0      FE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Tue Jul 15 19:03:28 2014

         _InterruptSettings 200C                           _i 0042                           _j 0044  
              ___awdiv@sign 00C9          ?_InterruptSettings 0001                          bsr 000FE0  
       ___wmul@multiplicand 00C5                 __CFG_BORV$1 000000                 __CFG_WDT$ON 000000  
                       l217 1576                         l190 15B6                         l432 12F6  
                       l428 124C                         l292 1228                         l437 141E  
                       _I2c 0056                         l983 1A2E                         _Min 0081  
                       _Sec 0086                         _Ptr 004E             _FsmStructActive 003C  
                       prod 000FF3         ??_InterruptSettings 00C3                         tosl 000FFD  
                       wreg 000FE8                StartRx@TxStr 00C3             __end_of_I2cData 18F0  
              StartTx@TxStr 00CD                __CFG_LVP$OFF 000000                        l2561 1C4A  
                      l2641 1760                        l2643 1772                        l2635 1734  
                      l2661 17EC                        l2653 17C0                        l2645 177A  
                      l2629 1706                        l2575 1D52                        l2559 1C42  
                      l2569 1D24                        l2657 17D4                        l2851 1292  
                      l2755 11A4                        l2587 1CFA                        l2861 133C  
                      l2767 1222                        l2961 1678                        l2875 13FA  
                      l2963 167C                        l2869 13A0                        l2893 1A1A  
                      l2885 19CC                        l2957 1606                        l2879 1404  
                      l2887 19DE                        l2889 19E6                        l2977 16A8  
                      l2969 1692                        STR_1 100F                        STR_2 1014  
                      STR_3 1009                        STR_4 1001                        STR_6 100F  
                      STR_7 1014                        STR_8 1009                        STR_9 1001  
                      u1528 12CE                        u1529 12E6                        u1548 1378  
                      u1549 1390                        u1558 13DC                        _Hour 0080  
       __end_of_CommFsmIdle 204C                        _main 1578                        fsr0h 000FEA  
                      fsr1h 000FE2                        fsr0l 000FE9                        fsr2h 000FDA  
                      fsr1l 000FE1                        indf2 000FDF                        fsr2l 000FD9  
                      pclat 000FFA                        prodh 000FF4                        prodl 000FF3  
                      start 01AC   __end_of_InterruptSettings 2022           _StartCommFsmSched 1E78  
       __end_of_CommSetting 1F82         __size_of_I2cBuffChk 0068          ?_StartCommFsmSched 00C3  
           __end_of_OpenI2C 1F5C             __end_of_StartRx 1FBC             __end_of_StartTx 1C30  
                     ?_main 0001             __end_of___awdiv 17F6                       STR_10 1013  
       ??_StartCommFsmSched 00C5             ___awdiv@divisor 00C5                       i1l235 0166  
           __end_of___lwmod 1A38                       i1l452 1F90                       i2l243 1974  
           ___awdiv@counter 00C8                       _RCREG 000FAE                       _TMR0H 000FD7  
                     _TMR1H 000FCF                       _TMR0L 000FD6                       _TMR3H 000FB3  
                     _TMR1L 000FCE                       _TMR3L 000FB2                       _SPBRG 000FAF  
                     _START 007E3B                       _TRISA 000F92                       _TRISB 000F93  
                     _TRISC 000F94                       _TRISE 000F96                       _TXREG 000FAD  
                     _RXerr 0040        __end_of_CommFsmSched 1420             __end_of_low_isr 01AC  
                     pclath 000FFA                       tablat 000FF5         CommFsmSched@FsmStat 00D4  
                     status 000FD8             __end_of_strncmp 1AC2   __end_of_StartCommFsmSched 1EBE  
          __end_ofi1_strlen 1F00             __initialization 1E2E                __end_of_main 16C0  
          RtcWriteTime@Tens 00D0              __CFG_OSC$HSPLL 000000                      ??_main 00D5  
                 ??_I2cData 00C9                  i1strlen@cp 0018               __activetblptr 000003  
          __end_of_Settings 1DCC                 _CommFsmFlag 0046                 _CommFsmIdle 204A  
      __size_of_I2cSettings 0210            ___awdiv@dividend 00C3                      _I2cAdr 0048  
                _RxBuffIndx 004F                      i1l1024 1B48                      i1l1041 1F00  
                    i1l1043 1F32                      i1l1052 1AC0                      i1l2121 1EC8  
                    i1l2107 1F18                      i1l2123 1ECC                      i1l2093 1AA0  
                    i1l2085 1A3A                      i1l2501 00AA                      i1l2095 1AA8  
                    i1l2089 1A6A                      i1l2361 1AC4                      i1l2521 013A  
                    i1l2515 00E2                      i1l2507 00CC                      i1l2531 014E  
               OpenI2C@slew 00C3                      i1l2373 1B40                      i1l2367 1AFE  
                    i1l2369 1B2A                      i1l2489 0098                      i2l1951 195E  
                    i2l1945 1950                      i2l1937 1946                      i2l1929 1932  
        __size_of_ReadUSART 001E                 _CommSetting 1F5C              __CFG_WDTPS$256 000000  
                    _SPBRGH 000FB0               ??_RtcReadTime 00C3                      _SSPADD 000FC8  
                    _SSPBUF 000FC9                  _TimeDecode 204C                   ??_OpenI2C 00C4  
                    _RXbuff 0100                  _TxBuffIndx 0052            i2SetTimer3@Count 0001  
__size_of_InterruptSettings 0016                      _RxFlag 0050                      _NtpMin 0083  
                    _NtpSec 0084                      _TxBuff 0088            __end_of_high_isr 19AE  
       I2cBuffChk@I2cDevice 00C5                   ??_StartRx 00C5                   ??_StartTx 00CF  
                    ___wmul 1DCC                   ??___awdiv 00C7          __size_of_SetTimer0 0014  
                 ??___lwmod 00C7          __size_of_SetTimer1 001A          __size_of_SetTimer3 001A  
                    _memcpy 1D02                      clear_0 1E34                      clear_1 1E40  
                    clear_2 1E4C            ___awdiv@quotient 00CA                      _strchr 1F00  
                    _strlen 1C30                      _strstr 1AC2                ??_I2cBuffChk 00C3  
              __mediumconst 0000                   ??_low_isr 0027                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8                   ??_strncmp 0020  
                __accesstop 0080     __end_of__initialization 1E72  __size_of_StartCommFsmSched 0046  
              ?i2_SetTimer3 0001              __pcstackCOMRAM 0001         __end_of_RtcReadTime 1BC4  
        __end_of_I2cBuffChk 1D02                __pidataBANK0 1FBC                 _ReadTimeFsm 00AA  
         __end_of_ReadUSART 1FA0       __size_of_CommFsmSched 01F6           RtcWriteTime@Units 00CF  
                 ?i1_strlen 0014               ReadUSART@data 0014  StartCommFsmSched@FsmStruct 00C3  
         __end_of_SetTimer0 2036           __end_of_SetTimer1 200C           __end_of_SetTimer3 1FF2  
                __pbssBANK0 0080                  __pbssBANK1 0100              _I2cBusCollFlag 0049  
                __pnvCOMRAM 0060                 ?_TimeDecode 0001                   ?_Settings 0001  
                   ?___wmul 00C3                _CommFsmSched 122A                _CommFsmState 00A8  
                   ?_memcpy 00C3                _I2cEventFlag 004C                     _I2cData 17F6  
                   ?_strchr 0014                     ?_strlen 00C3                     ?_strstr 0023  
            SetTimer0@Count 0014                     _I2cStat 004D              SetTimer1@Count 00C3  
            SetTimer3@Count 00C3                  ??i1_strlen 0016                     _SSPCON1 000FC6  
                   _SSPCON2 000FC5               ?_RtcWriteTime 0001                   ?_high_isr 0001  
                   _SSPSTAT 000FC7                 _RtcReadTime 1B4A                     _FsmIndx 0047  
                   _OpenI2C 1F34                     __Hparam 0000                     __Lparam 0000  
                   _NtpHour 0082                  ??_Settings 00C3                     _StartRx 1FA0  
                   _StartTx 1BC4                     ___awdiv 16C0             __size_of___wmul 0062  
                   ___lwmod 19AE                __psmallconst 1000                   _I2cDevPtr 004B  
                   __pcinit 1E2E             __size_of_memcpy 0068                     __ramtop 1000  
                   __ptext0 1578                     __ptext1 19AE                     __ptext2 1E78  
                   __ptext3 1D6A                     __ptext4 1FD8                     __ptext5 1FF2  
                   __ptext6 1420                     __ptext7 16C0                     __ptext8 17F6  
                   __ptext9 1C9A                   _T0CONbits 000FD5             __size_of_strchr 0034  
           __size_of_strlen 006A                   _T1CONbits 000FCD             __size_of_strstr 0088  
               _TimerStatus 0051                   _T3CONbits 000FB1         __size_of_TimeDecode 0002  
                I2cData@TX1 00C4                  I2cData@TX2 00C5                  I2cData@TX3 00C6  
                I2cData@TX4 00C7                     _low_isr 0018                ?_CommFsmIdle 0001  
            ??_RtcWriteTime 00CC                  ??_high_isr 0005                     _strncmp 1A38  
            __pintcode_body 18F0        end_of_initialization 1E72                ?_CommSetting 0001  
                   memcpy@d 00C9                     memcpy@n 00C7               I2cData@DevPtr 00CA  
                   memcpy@s 00CB                     int_func 18F0        __size_ofi2_SetTimer3 0014  
                 _RCSTAbits 000FAB                     postdec1 000FE5                     postdec2 000FDD  
                   postinc0 000FEE                     postinc2 000FDE       CommFsmSched@FsmStruct 00D0  
                   strlen@s 00C3             RtcReadTime@Tens 00C4               ??_I2cSettings 00C9  
                 _TRISCbits 000F94                   _TXSTAbits 000FAC              __end_of___wmul 1E2E  
           _I2cBuffChk$1337 00C4                 _BAUDCONbits 000FB8              __end_of_memcpy 1D6A  
            __end_of_strchr 1F34              __end_of_strlen 1C9A              __end_of_strstr 1B4A  
       start_initialization 1E2E                   _ReadUSART 1F82                   _OneHzTick 003E  
                 _DutyCycle 003A                   i1strlen@s 0014           __size_ofi1_strlen 0042  
       __end_of_I2cSettings 122A                ??_TimeDecode 00C3                   _SetTimer0 2022  
                 _SetTimer1 1FF2                   _SetTimer3 1FD8                   _RxFsmFlag 0085  
                 _TxBuffLen 0053                   _TxFsmFlag 0087                   _Timer0_ms 0060  
                 _Timer3_ms 0062                    ??___wmul 00C7        __end_of_RtcWriteTime 1578  
               __pdataBANK0 00A8                    ??_memcpy 00C9           __size_of_Settings 0062  
                  ?_I2cData 00C3                    ??_strchr 0018                    ??_strlen 00C5  
                  ??_strstr 0027                 __pbssCOMRAM 003A                  ?_ReadUSART 0001  
        __end_of_TimeDecode 204E               __pcstackBANK0 00C3         __end_of__stringdata 1018  
      __size_of_CommFsmIdle 0002           __size_of_high_isr 19A6                ?_RtcReadTime 0001  
                ?_SetTimer0 0014                  ?_SetTimer1 00C3                  ?_SetTimer3 00C3  
      __size_of_CommSetting 0026                    ?_OpenI2C 00C3                   __pintcode 0008  
                  ?_StartRx 00C3                    ?_StartTx 00CD                 _I2cBusyFlag 004A  
                  ?___awdiv 00C3                    ?___lwmod 00C3                 __pintcodelo 0018  
               __smallconst 1000                 _I2cSettings 101A                    ?_low_isr 0001  
                  ?_strncmp 001A              ___wmul@product 00C7                    _LATBbits 000F8A  
                  _IPR1bits 000F9F                    _IPR2bits 000FA2                    _PIE1bits 000F9D  
                  _PIE2bits 000FA0                    _PIR1bits 000F9E                    _PIR2bits 000FA1  
                  _RCONbits 000FD0                    _VARbits1 0055                  _ADCON1bits 000FC1  
               __stringdata 1001           ___wmul@multiplier 00C3            __size_of_I2cData 00FA  
               ??_ReadUSART 0014                    i1_strlen 1EBE                 _INTCON2bits 000FF1  
                 copy_data0 1E66            OpenI2C@sync_mode 00C4               ??i2_SetTimer3 0003  
               ??_SetTimer0 0016                 ??_SetTimer1 00C5                 ??_SetTimer3 00C5  
     __size_of_RtcWriteTime 0158                    __Hrparam 0000            __size_of_OpenI2C 0028  
                  __Lrparam 0000          __CFG_BOREN$SBORDIS 000000                    _Settings 1D6A  
          __size_of_StartRx 001C            __size_of_StartTx 006C            __size_of___awdiv 0136  
          __size_of___lwmod 008A                  _I2cBuffChk 1C9A            __size_of_low_isr 0194  
                  __ptext10 1B4A                    __ptext11 200C                    __ptext20 1C30  
                  __ptext12 101A                    __ptext21 1D02                    __ptext13 1DCC  
                  __ptext22 1FA0                    __ptext14 1F34                    __ptext31 2036  
                  __ptext15 1F5C                    __ptext32 0000                    __ptext24 1AC2  
                  __ptext16 122A                    __ptext25 1EBE                    __ptext17 204A  
                  __ptext26 1A38                    __ptext18 204C                    __ptext27 1F00  
                  __ptext19 1BC4                    __ptext28 2022                    __ptext29 1F82  
                  _high_isr 0008                _RtcWriteTime 1420            __size_of_strncmp 008A  
             __size_of_main 0148                  strncmp@len 001E        __size_of_RtcReadTime 007A  
             ?_CommFsmSched 00D0         __end_ofi2_SetTimer3 204A                  _INTCONbits 000FF2  
                  memcpy@d1 00C3                    memcpy@s1 00C5                    intlevel1 0000  
                  intlevel2 0000              I2cData@RxBytes 00C8                   strchr@chr 0016  
            I2cData@TxBytes 00C3            ___lwmod@dividend 00C3                   strchr@ptr 0014  
                 strncmp@s1 001A                   strncmp@s2 001C              ??_CommFsmSched 00D2  
           ___lwmod@divisor 00C5                    strlen@cp 00C7                ?_I2cSettings 0001  
           ___lwmod@counter 00C8                 ?_I2cBuffChk 0001               ??_CommFsmIdle 00C3  
               _SSPCON2bits 000FC5                    strstr@s1 0023                    strstr@s2 0025  
             ??_CommSetting 00C3            RtcReadTime@Units 00C3                 i2_SetTimer3 2036  
              _USART_Status 0054  
