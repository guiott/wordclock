

Microchip Technology PIC18 LITE Macro Assembler V1.31 build 56723 
                                                                                               Thu Jul 17 00:07:12 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           	psect	idataBANK0
    61  002A12                     __pidataBANK0:
    62                           	opt stack 0
    63                           
    64                           ;initializer for _CommFsmState
    65  002A12  2AA0               	dw	_CommFsmIdle& (0+65535)
    66                           
    67                           ;initializer for _ReadTimeFsm
    68  002A14  01                 	db	1
    69  002A15  100E               	dw	STR_1& (0+65535)
    70  002A17  2AA0               	dw	_CommFsmIdle& (0+65535)
    71  002A19  00                 	db	0
    72  002A1A  1012               	dw	STR_2& (0+65535)
    73  002A1C  2AA0               	dw	_CommFsmIdle& (0+65535)
    74  002A1E  01                 	db	1
    75  002A1F  1008               	dw	STR_3& (0+65535)
    76  002A21  2AA0               	dw	_CommFsmIdle& (0+65535)
    77  002A23  00                 	db	0
    78  002A24  1001               	dw	STR_4& (0+65535)
    79  002A26  1E6C               	dw	_TimeDecode& (0+65535)
    80  002A28  02                 	db	2
    81  002A29  100D               	dw	(STR_3+5)& (0+65535)
    82  002A2B  2AA0               	dw	_CommFsmIdle& (0+65535)
    83  0000                     _ADCON1bits	set	4033
    84  0000                     _BAUDCONbits	set	4024
    85  0000                     _INTCON2bits	set	4081
    86  0000                     _INTCONbits	set	4082
    87  0000                     _IPR1bits	set	3999
    88  0000                     _IPR2bits	set	4002
    89  0000                     _LATBbits	set	3978
    90  0000                     _PIE1bits	set	3997
    91  0000                     _PIE2bits	set	4000
    92  0000                     _PIR1bits	set	3998
    93  0000                     _PIR2bits	set	4001
    94  0000                     _RCONbits	set	4048
    95  0000                     _RCREG	set	4014
    96  0000                     _RCSTAbits	set	4011
    97  0000                     _SPBRG	set	4015
    98  0000                     _SPBRGH	set	4016
    99  0000                     _SSPADD	set	4040
   100  0000                     _SSPBUF	set	4041
   101  0000                     _SSPCON1	set	4038
   102  0000                     _SSPCON2	set	4037
   103  0000                     _SSPCON2bits	set	4037
   104  0000                     _SSPSTAT	set	4039
   105  0000                     _T0CONbits	set	4053
   106  0000                     _T1CONbits	set	4045
   107  0000                     _T3CONbits	set	4017
   108  0000                     _TMR0H	set	4055
   109  0000                     _TMR0L	set	4054
   110  0000                     _TMR1H	set	4047
   111  0000                     _TMR1L	set	4046
   112  0000                     _TMR3H	set	4019
   113  0000                     _TMR3L	set	4018
   114  0000                     _TRISA	set	3986
   115  0000                     _TRISB	set	3987
   116  0000                     _TRISC	set	3988
   117  0000                     _TRISCbits	set	3988
   118  0000                     _TRISE	set	3990
   119  0000                     _TXREG	set	4013
   120  0000                     _TXSTAbits	set	4012
   121  0000                     _START	set	32315
   122                           
   123                           	psect	nvCOMRAM
   124  000060                     __pnvCOMRAM:
   125                           	opt stack 0
   126  000060                     _Timer0_ms:
   127                           	opt stack 0
   128  000060                     	ds	2
   129  000062                     _Timer3_ms:
   130                           	opt stack 0
   131  000062                     	ds	2
   132                           
   133                           	psect	smallconst
   134  001000                     __psmallconst:
   135                           	opt stack 0
   136  001000  00                 	db	0
   137  001001                     __stringdata:
   138                           	opt stack 0
   139  001001                     STR_4:
   140  001001  2A                 	db	42
   141  001002  43                 	db	67	;'C'
   142  001003  4C                 	db	76	;'L'
   143  001004  4F                 	db	79	;'O'
   144  001005  53                 	db	83	;'S'
   145  001006  2A                 	db	42
   146  001007  00                 	db	0
   147  001008                     STR_3:
   148  001008  6F                 	db	111	;'o'
   149  001009  70                 	db	112	;'p'
   150  00100A  65                 	db	101	;'e'
   151  00100B  6E                 	db	110	;'n'
   152  00100C  0A                 	db	10
   153  00100D  00                 	db	0
   154  00100E                     STR_1:
   155  00100E  24                 	db	36
   156  00100F  24                 	db	36
   157  001010  24                 	db	36
   158  001011  00                 	db	0
   159  001012                     STR_2:
   160  001012  43                 	db	67	;'C'
   161  001013  4D                 	db	77	;'M'
   162  001014  44                 	db	68	;'D'
   163  001015  00                 	db	0
   164  001016                     STR_6:
   165  001016  3A                 	db	58	;':'
   166  001017  00                 	db	0
   167  001018                     __end_of__stringdata:
   168                           	opt stack 0
   169                           
   170                           ; #config settings
   171  001018  00                 	db	0	; dummy byte at the end
   172  0000                     
   173                           	psect	cinit
   174  002874                     __pcinit:
   175                           	opt stack 0
   176  002874                     start_initialization:
   177                           	opt stack 0
   178  002874                     __initialization:
   179                           	opt stack 0
   180                           
   181                           ; Clear objects allocated to BANK1 (64 bytes)
   182  002874  EE01  F000         	lfsr	0,__pbssBANK1
   183  002878  0E40               	movlw	64
   184  00287A                     clear_0:
   185  00287A  6AEE               	clrf	postinc0,c
   186  00287C  06E8               	decf	wreg,f,c
   187  00287E  E1FD               	bnz	clear_0
   188                           
   189                           ; Clear objects allocated to BANK0 (43 bytes)
   190  002880  EE00  F080         	lfsr	0,__pbssBANK0
   191  002884  0E2B               	movlw	43
   192  002886                     clear_1:
   193  002886  6AEE               	clrf	postinc0,c
   194  002888  06E8               	decf	wreg,f,c
   195  00288A  E1FD               	bnz	clear_1
   196                           
   197                           ; Clear objects allocated to COMRAM (38 bytes)
   198  00288C  EE00  F03A         	lfsr	0,__pbssCOMRAM
   199  002890  0E26               	movlw	38
   200  002892                     clear_2:
   201  002892  6AEE               	clrf	postinc0,c
   202  002894  06E8               	decf	wreg,f,c
   203  002896  E1FD               	bnz	clear_2
   204                           
   205                           ; Initialize objects allocated to BANK0 (27 bytes)
   206                           ; load TBLPTR registers with __pidataBANK0
   207  002898  0E12               	movlw	low __pidataBANK0
   208  00289A  6EF6               	movwf	tblptrl,c
   209  00289C  0E2A               	movlw	high __pidataBANK0
   210  00289E  6EF7               	movwf	tblptrh,c
   211  0028A0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   212  0028A2  6EF8               	movwf	tblptru,c
   213  0028A4  EE00  F0C9         	lfsr	0,__pdataBANK0
   214  0028A8  EE10 F01B          	lfsr	1,27
   215  0028AC                     copy_data0:
   216  0028AC  0009               	tblrd		*+
   217  0028AE  CFF5 FFEE          	movff	tablat,postinc0
   218  0028B2  50E5               	movf	postdec1,w,c
   219  0028B4  50E1               	movf	fsr1l,w,c
   220  0028B6  E1FA               	bnz	copy_data0
   221  0028B8                     end_of_initialization:
   222                           	opt stack 0
   223  0028B8                     __end_of__initialization:
   224                           	opt stack 0
   225  0028B8  0100               	movlb	0
   226  0028BA  EF78  F00D         	goto	_main	;jump to C main() function
   227                           tblptru	equ	0xFF8
   228                           tblptrh	equ	0xFF7
   229                           tblptrl	equ	0xFF6
   230                           tablat	equ	0xFF5
   231                           postinc0	equ	0xFEE
   232                           wreg	equ	0xFE8
   233                           postdec1	equ	0xFE5
   234                           fsr1l	equ	0xFE1
   235                           
   236                           	psect	bssCOMRAM
   237  00003A                     __pbssCOMRAM:
   238                           	opt stack 0
   239  00003A                     _DutyCycle:
   240                           	opt stack 0
   241  00003A                     	ds	2
   242  00003C                     _FsmStructActive:
   243                           	opt stack 0
   244  00003C                     	ds	2
   245  00003E                     _OneHzTick:
   246                           	opt stack 0
   247  00003E                     	ds	2
   248  000040                     _RXerr:
   249                           	opt stack 0
   250  000040                     	ds	2
   251  000042                     _i:
   252                           	opt stack 0
   253  000042                     	ds	2
   254  000044                     _j:
   255                           	opt stack 0
   256  000044                     	ds	2
   257  000046                     _CommFsmFlag:
   258                           	opt stack 0
   259  000046                     	ds	1
   260  000047                     _FsmIndx:
   261                           	opt stack 0
   262  000047                     	ds	1
   263  000048                     _I2cAdr:
   264                           	opt stack 0
   265  000048                     	ds	1
   266  000049                     _I2cBusCollFlag:
   267                           	opt stack 0
   268  000049                     	ds	1
   269  00004A                     _I2cBusyFlag:
   270                           	opt stack 0
   271  00004A                     	ds	1
   272  00004B                     _I2cDevPtr:
   273                           	opt stack 0
   274  00004B                     	ds	1
   275  00004C                     _I2cEventFlag:
   276                           	opt stack 0
   277  00004C                     	ds	1
   278  00004D                     _I2cStat:
   279                           	opt stack 0
   280  00004D                     	ds	1
   281  00004E                     _Ptr:
   282                           	opt stack 0
   283  00004E                     	ds	1
   284  00004F                     _RxBuffIndx:
   285                           	opt stack 0
   286  00004F                     	ds	1
   287  000050                     _RxFlag:
   288                           	opt stack 0
   289  000050                     	ds	1
   290  000051                     _TimerStatus:
   291                           	opt stack 0
   292  000051                     	ds	1
   293  000052                     _TxBuffIndx:
   294                           	opt stack 0
   295  000052                     	ds	1
   296  000053                     _TxBuffLen:
   297                           	opt stack 0
   298  000053                     	ds	1
   299  000054                     _USART_Status:
   300                           	opt stack 0
   301  000054                     	ds	1
   302  000055                     _VARbits1:
   303                           	opt stack 0
   304  000055                     	ds	1
   305  000056                     _I2c:
   306                           	opt stack 0
   307  000056                     	ds	10
   308                           tblptru	equ	0xFF8
   309                           tblptrh	equ	0xFF7
   310                           tblptrl	equ	0xFF6
   311                           tablat	equ	0xFF5
   312                           postinc0	equ	0xFEE
   313                           wreg	equ	0xFE8
   314                           postdec1	equ	0xFE5
   315                           fsr1l	equ	0xFE1
   316                           
   317                           	psect	bssBANK0
   318  000080                     __pbssBANK0:
   319                           	opt stack 0
   320  000080                     _Hour:
   321                           	opt stack 0
   322  000080                     	ds	2
   323  000082                     _Min:
   324                           	opt stack 0
   325  000082                     	ds	2
   326  000084                     _Sec:
   327                           	opt stack 0
   328  000084                     	ds	2
   329  000086                     _NtpHour:
   330                           	opt stack 0
   331  000086                     	ds	1
   332  000087                     _NtpMin:
   333                           	opt stack 0
   334  000087                     	ds	1
   335  000088                     _NtpSec:
   336                           	opt stack 0
   337  000088                     	ds	1
   338  000089                     _RxFsmFlag:
   339                           	opt stack 0
   340  000089                     	ds	1
   341  00008A                     _TxFsmFlag:
   342                           	opt stack 0
   343  00008A                     	ds	1
   344  00008B                     _TxBuff:
   345                           	opt stack 0
   346  00008B                     	ds	32
   347                           tblptru	equ	0xFF8
   348                           tblptrh	equ	0xFF7
   349                           tblptrl	equ	0xFF6
   350                           tablat	equ	0xFF5
   351                           postinc0	equ	0xFEE
   352                           wreg	equ	0xFE8
   353                           postdec1	equ	0xFE5
   354                           fsr1l	equ	0xFE1
   355                           
   356                           	psect	dataBANK0
   357  0000C9                     __pdataBANK0:
   358                           	opt stack 0
   359  0000C9                     _CommFsmState:
   360                           	opt stack 0
   361  0000C9                     	ds	2
   362  0000CB                     _ReadTimeFsm:
   363                           	opt stack 0
   364  0000CB                     	ds	25
   365                           tblptru	equ	0xFF8
   366                           tblptrh	equ	0xFF7
   367                           tblptrl	equ	0xFF6
   368                           tablat	equ	0xFF5
   369                           postinc0	equ	0xFEE
   370                           wreg	equ	0xFE8
   371                           postdec1	equ	0xFE5
   372                           fsr1l	equ	0xFE1
   373                           
   374                           	psect	bssBANK1
   375  000100                     __pbssBANK1:
   376                           	opt stack 0
   377  000100                     _RXbuff:
   378                           	opt stack 0
   379  000100                     	ds	64
   380                           tblptru	equ	0xFF8
   381                           tblptrh	equ	0xFF7
   382                           tblptrl	equ	0xFF6
   383                           tablat	equ	0xFF5
   384                           postinc0	equ	0xFEE
   385                           wreg	equ	0xFE8
   386                           postdec1	equ	0xFE5
   387                           fsr1l	equ	0xFE1
   388                           
   389                           	psect	cstackBANK0
   390  0000AB                     __pcstackBANK0:
   391                           	opt stack 0
   392  0000AB                     ??_I2cBuffChk:
   393  0000AB                     ??_isdigit:
   394  0000AB                     ??_I2cLowService:
   395  0000AB                     ??_I2cHighService:
   396  0000AB                     ?_strlen:
   397                           	opt stack 0
   398  0000AB                     ?_strchr:
   399                           	opt stack 0
   400  0000AB                     ?___awdiv:
   401                           	opt stack 0
   402  0000AB                     ?___lwmod:
   403                           	opt stack 0
   404  0000AB                     ?___wmul:
   405                           	opt stack 0
   406  0000AB                     RtcReadTime@Units:
   407                           	opt stack 0
   408  0000AB                     I2cData@TxBytes:
   409                           	opt stack 0
   410  0000AB                     OpenI2C@slew:
   411                           	opt stack 0
   412  0000AB                     SetTimer1@Count:
   413                           	opt stack 0
   414  0000AB                     SetTimer3@Count:
   415                           	opt stack 0
   416  0000AB                     StartCommFsmSched@FsmStruct:
   417                           	opt stack 0
   418  0000AB                     StartRx@TxStr:
   419                           	opt stack 0
   420  0000AB                     ___awdiv@dividend:
   421                           	opt stack 0
   422  0000AB                     ___lwmod@dividend:
   423                           	opt stack 0
   424  0000AB                     memcpy@d1:
   425                           	opt stack 0
   426  0000AB                     strlen@s:
   427                           	opt stack 0
   428  0000AB                     ___wmul@multiplier:
   429                           	opt stack 0
   430  0000AB                     strchr@ptr:
   431                           	opt stack 0
   432                           
   433                           ; 2 bytes @ 0x0
   434  0000AB                     	ds	1
   435  0000AC                     RtcReadTime@Tens:
   436                           	opt stack 0
   437  0000AC                     _I2cBuffChk$1447:
   438                           	opt stack 0
   439  0000AC                     I2cData@TX1:
   440                           	opt stack 0
   441  0000AC                     OpenI2C@sync_mode:
   442                           	opt stack 0
   443  0000AC                     _isdigit$2072:
   444                           	opt stack 0
   445                           
   446                           ; 1 bytes @ 0x1
   447  0000AC                     	ds	1
   448  0000AD                     ??_SetTimer3:
   449  0000AD                     ??_StartCommFsmSched:
   450  0000AD                     ??_SetTimer1:
   451  0000AD                     ??_StartRx:
   452  0000AD                     ??_strlen:
   453  0000AD                     I2cBuffChk@I2cDevice:
   454                           	opt stack 0
   455  0000AD                     I2cData@TX2:
   456                           	opt stack 0
   457  0000AD                     isdigit@c:
   458                           	opt stack 0
   459  0000AD                     ___awdiv@divisor:
   460                           	opt stack 0
   461  0000AD                     ___lwmod@divisor:
   462                           	opt stack 0
   463  0000AD                     memcpy@s1:
   464                           	opt stack 0
   465  0000AD                     ___wmul@multiplicand:
   466                           	opt stack 0
   467  0000AD                     strchr@chr:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x2
   471  0000AD                     	ds	1
   472  0000AE                     I2cData@TX3:
   473                           	opt stack 0
   474                           
   475                           ; 1 bytes @ 0x3
   476  0000AE                     	ds	1
   477  0000AF                     ??_I2cService:
   478  0000AF                     ??_strchr:
   479  0000AF                     ??___awdiv:
   480  0000AF                     ??___lwmod:
   481  0000AF                     I2cData@TX4:
   482                           	opt stack 0
   483  0000AF                     memcpy@n:
   484                           	opt stack 0
   485  0000AF                     strlen@cp:
   486                           	opt stack 0
   487  0000AF                     ___wmul@product:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x4
   491  0000AF                     	ds	1
   492  0000B0                     I2cData@RxBytes:
   493                           	opt stack 0
   494  0000B0                     ___awdiv@counter:
   495                           	opt stack 0
   496  0000B0                     ___lwmod@counter:
   497                           	opt stack 0
   498                           
   499                           ; 1 bytes @ 0x5
   500  0000B0                     	ds	1
   501  0000B1                     ??_I2cData:
   502  0000B1                     ??_I2cSettings:
   503  0000B1                     ?_strcspn:
   504                           	opt stack 0
   505  0000B1                     ?_atoi:
   506                           	opt stack 0
   507  0000B1                     ___awdiv@sign:
   508                           	opt stack 0
   509  0000B1                     atoi@s:
   510                           	opt stack 0
   511  0000B1                     memcpy@d:
   512                           	opt stack 0
   513  0000B1                     strcspn@s1:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0x6
   517  0000B1                     	ds	1
   518  0000B2                     I2cData@DevPtr:
   519                           	opt stack 0
   520  0000B2                     ___awdiv@quotient:
   521                           	opt stack 0
   522                           
   523                           ; 2 bytes @ 0x7
   524  0000B2                     	ds	1
   525  0000B3                     ??_atoi:
   526  0000B3                     ??_RtcInit:
   527  0000B3                     memcpy@s:
   528                           	opt stack 0
   529  0000B3                     strcspn@s2:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0x8
   533  0000B3                     	ds	1
   534  0000B4                     ??_RtcWriteTime:
   535                           
   536                           ; 0 bytes @ 0x9
   537  0000B4                     	ds	1
   538  0000B5                     ??_strcspn:
   539  0000B5                     atoi@sign:
   540                           	opt stack 0
   541  0000B5                     StartTx@TxStr:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0xA
   545  0000B5                     	ds	1
   546  0000B6                     atoi@a:
   547                           	opt stack 0
   548  0000B6                     strcspn@i:
   549                           	opt stack 0
   550                           
   551                           ; 2 bytes @ 0xB
   552  0000B6                     	ds	1
   553  0000B7                     ??_StartTx:
   554  0000B7                     RtcWriteTime@Units:
   555                           	opt stack 0
   556                           
   557                           ; 1 bytes @ 0xC
   558  0000B7                     	ds	1
   559  0000B8                     ??_TimeDecode:
   560  0000B8                     RtcWriteTime@Tens:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0xD
   564  0000B8                     	ds	1
   565  0000B9                     RtcInit@Tmp:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0xE
   569  0000B9                     	ds	3
   570  0000BC                     TimeDecode@TimePoint:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x11
   574  0000BC                     	ds	2
   575  0000BE                     CommFsmSched@FsmStruct:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x13
   579  0000BE                     	ds	2
   580  0000C0                     ??_CommFsmSched:
   581                           
   582                           ; 0 bytes @ 0x15
   583  0000C0                     	ds	2
   584  0000C2                     CommFsmSched@FsmStat:
   585                           	opt stack 0
   586                           
   587                           ; 1 bytes @ 0x17
   588  0000C2                     	ds	1
   589  0000C3                     ??_main:
   590                           
   591                           ; 0 bytes @ 0x18
   592  0000C3                     	ds	6
   593                           tblptru	equ	0xFF8
   594                           tblptrh	equ	0xFF7
   595                           tblptrl	equ	0xFF6
   596                           tablat	equ	0xFF5
   597                           postinc0	equ	0xFEE
   598                           wreg	equ	0xFE8
   599                           postdec1	equ	0xFE5
   600                           fsr1l	equ	0xFE1
   601                           
   602                           	psect	cstackCOMRAM
   603  000001                     __pcstackCOMRAM:
   604                           	opt stack 0
   605  000001                     i2SetTimer3@Count:
   606                           	opt stack 0
   607                           
   608                           ; 2 bytes @ 0x0
   609  000001                     	ds	2
   610  000003                     ??i2_SetTimer3:
   611                           
   612                           ; 0 bytes @ 0x2
   613  000003                     	ds	2
   614  000005                     ??_high_isr:
   615                           
   616                           ; 0 bytes @ 0x4
   617  000005                     	ds	15
   618  000014                     ?i1_strlen:
   619                           	opt stack 0
   620  000014                     ?i1_strchr:
   621                           	opt stack 0
   622  000014                     ReadUSART@data:
   623                           	opt stack 0
   624  000014                     SetTimer0@Count:
   625                           	opt stack 0
   626  000014                     i1strlen@s:
   627                           	opt stack 0
   628  000014                     i1strchr@ptr:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0x13
   632  000014                     	ds	2
   633  000016                     ??_SetTimer0:
   634  000016                     ??i1_strlen:
   635  000016                     i1strchr@chr:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x15
   639  000016                     	ds	2
   640  000018                     ??i1_strchr:
   641  000018                     i1strlen@cp:
   642                           	opt stack 0
   643                           
   644                           ; 2 bytes @ 0x17
   645  000018                     	ds	2
   646  00001A                     ?_strncmp:
   647                           	opt stack 0
   648  00001A                     strncmp@s1:
   649                           	opt stack 0
   650                           
   651                           ; 2 bytes @ 0x19
   652  00001A                     	ds	2
   653  00001C                     strncmp@s2:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x1B
   657  00001C                     	ds	2
   658  00001E                     strncmp@len:
   659                           	opt stack 0
   660                           
   661                           ; 2 bytes @ 0x1D
   662  00001E                     	ds	2
   663  000020                     ??_strncmp:
   664                           
   665                           ; 0 bytes @ 0x1F
   666  000020                     	ds	3
   667  000023                     ?_strstr:
   668                           	opt stack 0
   669  000023                     strstr@s1:
   670                           	opt stack 0
   671                           
   672                           ; 2 bytes @ 0x22
   673  000023                     	ds	2
   674  000025                     strstr@s2:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0x24
   678  000025                     	ds	2
   679  000027                     ??_low_isr:
   680                           
   681                           ; 0 bytes @ 0x26
   682  000027                     	ds	19
   683                           tblptru	equ	0xFF8
   684                           tblptrh	equ	0xFF7
   685                           tblptrl	equ	0xFF6
   686                           tablat	equ	0xFF5
   687                           postinc0	equ	0xFEE
   688                           wreg	equ	0xFE8
   689                           postdec1	equ	0xFE5
   690                           fsr1l	equ	0xFE1
   691                           
   692 ;;
   693 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
   694 ;;
   695 ;; *************** function _main *****************
   696 ;; Defined at:
   697 ;;		line 51 in file "../WordClock.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;		None
   700 ;; Auto vars:     Size  Location     Type
   701 ;;		None
   702 ;; Return value:  Size  Location     Type
   703 ;;		None               void
   704 ;; Registers used:
   705 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   713 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   714 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   715 ;;Total ram usage:        6 bytes
   716 ;; Hardware stack levels required when called:    9
   717 ;; This function calls:
   718 ;;		_CommFsmSched
   719 ;;		_CommSetting
   720 ;;		_I2cBuffChk
   721 ;;		_I2cData
   722 ;;		_I2cService
   723 ;;		_I2cSettings
   724 ;;		_InterruptSettings
   725 ;;		_RtcInit
   726 ;;		_RtcReadTime
   727 ;;		_RtcWriteTime
   728 ;;		_SetTimer1
   729 ;;		_SetTimer3
   730 ;;		_Settings
   731 ;;		_StartCommFsmSched
   732 ;;		___lwmod
   733 ;; This function is called by:
   734 ;;		Startup code after reset
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text0
   739  001AF0                     __ptext0:
   740                           	opt stack 0
   741  001AF0                     _main:
   742                           	opt stack 22
   743                           
   744                           ;WordClock.c: 54: INTCONbits.GIEH=0;
   745                           
   746                           ;incstack = 0
   747  001AF0  9EF2               	bcf	intcon,7,c	;volatile
   748                           
   749                           ;WordClock.c: 55: INTCONbits.GIEL=0;
   750  001AF2  9CF2               	bcf	intcon,6,c	;volatile
   751                           
   752                           ;WordClock.c: 57: Settings();
   753  001AF4  ECAB  F013         	call	_Settings	;wreg free
   754                           
   755                           ;WordClock.c: 58: I2cSettings();
   756  001AF8  ECA4  F009         	call	_I2cSettings	;wreg free
   757                           
   758                           ;WordClock.c: 61: INTCONbits.GIEH=1;
   759  001AFC  8EF2               	bsf	intcon,7,c	;volatile
   760                           
   761                           ;WordClock.c: 62: INTCONbits.GIEL=1;
   762  001AFE  8CF2               	bsf	intcon,6,c	;volatile
   763                           
   764                           ;WordClock.c: 64: SetTimer3(Timer3_ms);
   765  001B00  C062  F0AB         	movff	_Timer3_ms,SetTimer3@Count
   766  001B04  C063  F0AC         	movff	_Timer3_ms+1,SetTimer3@Count+1
   767  001B08  EC17  F015         	call	_SetTimer3	;wreg free
   768                           
   769                           ;WordClock.c: 66: VARbits1.bit1=0;
   770  001B0C  9255               	bcf	_VARbits1,1,c
   771                           
   772                           ;WordClock.c: 68: RtcInit();
   773  001B0E  ECA7  F00B         	call	_RtcInit	;wreg free
   774                           
   775                           ;WordClock.c: 69: CommSetting();
   776  001B12  ECD9  F014         	call	_CommSetting	;wreg free
   777                           
   778                           ;WordClock.c: 70: InterruptSettings();
   779  001B16  EC31  F015         	call	_InterruptSettings	;wreg free
   780  001B1A                     l3449:
   781                           
   782                           ;WordClock.c: 73: {
   783                           ;WordClock.c: 74: if(VARbits1.bit1)
   784  001B1A  A255               	btfss	_VARbits1,1,c
   785  001B1C  D060               	goto	l3465
   786                           
   787                           ;WordClock.c: 75: {
   788                           ;WordClock.c: 76: OneHzTick ++;
   789  001B1E  4A3E               	infsnz	_OneHzTick,f,c
   790  001B20  2A3F               	incf	_OneHzTick+1,f,c
   791                           
   792                           ;WordClock.c: 77: if(!(OneHzTick % 900))
   793  001B22  C03E  F0AB         	movff	_OneHzTick,___lwmod@dividend
   794  001B26  C03F  F0AC         	movff	_OneHzTick+1,___lwmod@dividend+1
   795  001B2A  0E03               	movlw	3
   796  001B2C  0100               	movlb	0	; () banked
   797  001B2E  0100               	movlb	0	; () banked
   798  001B30  6FAE               	movwf	(___lwmod@divisor+1)& (0+255),b
   799  001B32  0E84               	movlw	132
   800  001B34  0100               	movlb	0	; () banked
   801  001B36  6FAD               	movwf	___lwmod@divisor& (0+255),b
   802  001B38  ECE1  F011         	call	___lwmod	;wreg free
   803  001B3C  0100               	movlb	0	; () banked
   804  001B3E  0100               	movlb	0	; () banked
   805  001B40  51AC               	movf	(?___lwmod+1)& (0+255),w,b
   806  001B42  0100               	movlb	0	; () banked
   807  001B44  11AB               	iorwf	?___lwmod& (0+255),w,b
   808  001B46  A4D8               	btfss	status,2,c
   809  001B48  D00F               	goto	l3459
   810                           
   811                           ; BSR set to: 0
   812                           ;WordClock.c: 78: {
   813                           ;WordClock.c: 79: StartCommFsmSched(ReadTimeFsm);
   814  001B4A  0100               	movlb	0	; () banked
   815  001B4C  0E00               	movlw	high _ReadTimeFsm
   816  001B4E  0100               	movlb	0	; () banked
   817  001B50  0100               	movlb	0	; () banked
   818  001B52  6FAC               	movwf	(StartCommFsmSched@FsmStruct+1)& (0+255),b
   819  001B54  0100               	movlb	0	; () banked
   820  001B56  0ECB               	movlw	low _ReadTimeFsm
   821  001B58  0100               	movlb	0	; () banked
   822  001B5A  0100               	movlb	0	; () banked
   823  001B5C  6FAB               	movwf	StartCommFsmSched@FsmStruct& (0+255),b
   824  001B5E  EC5F  F014         	call	_StartCommFsmSched	;wreg free
   825                           
   826                           ;WordClock.c: 80: RtcWriteTime();
   827  001B62  EC96  F00C         	call	_RtcWriteTime	;wreg free
   828                           
   829                           ;WordClock.c: 81: }
   830  001B66  D039               	goto	l3463
   831  001B68                     l3459:
   832                           
   833                           ;WordClock.c: 82: else if(I2cBuffChk(0))
   834  001B68  0E00               	movlw	0
   835  001B6A  EC43  F013         	call	_I2cBuffChk
   836  001B6E  0900               	iorlw	0
   837  001B70  B4D8               	btfsc	status,2,c
   838  001B72  D033               	goto	l3463
   839                           
   840                           ;WordClock.c: 83: {
   841                           ;WordClock.c: 84: I2cData(0,1,0,0,0,0,3);
   842  001B74  0100               	movlb	0	; () banked
   843  001B76  6FC3               	movwf	??_main& (0+255),b
   844  001B78  0E01               	movlw	1
   845  001B7A  0100               	movlb	0	; () banked
   846  001B7C  0100               	movlb	0	; () banked
   847  001B7E  6FAB               	movwf	I2cData@TxBytes& (0+255),b
   848  001B80  0100               	movlb	0	; () banked
   849  001B82  51C3               	movf	??_main& (0+255),w,b
   850  001B84  0100               	movlb	0	; () banked
   851  001B86  6FC4               	movwf	(??_main+1)& (0+255),b
   852  001B88  0E00               	movlw	0
   853  001B8A  0100               	movlb	0	; () banked
   854  001B8C  0100               	movlb	0	; () banked
   855  001B8E  6FAC               	movwf	I2cData@TX1& (0+255),b
   856  001B90  0100               	movlb	0	; () banked
   857  001B92  51C4               	movf	(??_main+1)& (0+255),w,b
   858  001B94  0100               	movlb	0	; () banked
   859  001B96  6FC5               	movwf	(??_main+2)& (0+255),b
   860  001B98  0E00               	movlw	0
   861  001B9A  0100               	movlb	0	; () banked
   862  001B9C  0100               	movlb	0	; () banked
   863  001B9E  6FAD               	movwf	I2cData@TX2& (0+255),b
   864  001BA0  0100               	movlb	0	; () banked
   865  001BA2  51C5               	movf	(??_main+2)& (0+255),w,b
   866  001BA4  0100               	movlb	0	; () banked
   867  001BA6  6FC6               	movwf	(??_main+3)& (0+255),b
   868  001BA8  0E00               	movlw	0
   869  001BAA  0100               	movlb	0	; () banked
   870  001BAC  0100               	movlb	0	; () banked
   871  001BAE  6FAE               	movwf	I2cData@TX3& (0+255),b
   872  001BB0  0100               	movlb	0	; () banked
   873  001BB2  51C6               	movf	(??_main+3)& (0+255),w,b
   874  001BB4  0100               	movlb	0	; () banked
   875  001BB6  6FC7               	movwf	(??_main+4)& (0+255),b
   876  001BB8  0E00               	movlw	0
   877  001BBA  0100               	movlb	0	; () banked
   878  001BBC  0100               	movlb	0	; () banked
   879  001BBE  6FAF               	movwf	I2cData@TX4& (0+255),b
   880  001BC0  0100               	movlb	0	; () banked
   881  001BC2  51C7               	movf	(??_main+4)& (0+255),w,b
   882  001BC4  0100               	movlb	0	; () banked
   883  001BC6  6FC8               	movwf	(??_main+5)& (0+255),b
   884  001BC8  0E03               	movlw	3
   885  001BCA  0100               	movlb	0	; () banked
   886  001BCC  0100               	movlb	0	; () banked
   887  001BCE  6FB0               	movwf	I2cData@RxBytes& (0+255),b
   888  001BD0  0100               	movlb	0	; () banked
   889  001BD2  51C8               	movf	(??_main+5)& (0+255),w,b
   890  001BD4  0E00               	movlw	0
   891  001BD6  ECB6  F00F         	call	_I2cData
   892  001BDA                     l3463:
   893                           
   894                           ;WordClock.c: 85: }
   895                           ;WordClock.c: 87: VARbits1.bit1=0;
   896  001BDA  9255               	bcf	_VARbits1,1,c
   897                           
   898                           ;WordClock.c: 88: }
   899  001BDC  D00B               	goto	l3471
   900  001BDE                     l3465:
   901                           
   902                           ;WordClock.c: 89: else if(I2c[0].Done == 1)
   903  001BDE  0457               	decf	_I2c+1,w,c
   904  001BE0  A4D8               	btfss	status,2,c
   905  001BE2  D008               	goto	l3471
   906                           
   907                           ;WordClock.c: 90: {
   908                           ;WordClock.c: 91: RtcReadTime();
   909  001BE4  EC98  F011         	call	_RtcReadTime	;wreg free
   910                           
   911                           ;WordClock.c: 92: I2c[0].Done = 0;
   912  001BE8  0100               	movlb	0	; () banked
   913  001BEA  6FC3               	movwf	??_main& (0+255),b
   914  001BEC  0E00               	movlw	0
   915  001BEE  6E57               	movwf	_I2c+1,c
   916  001BF0  0100               	movlb	0	; () banked
   917  001BF2  51C3               	movf	??_main& (0+255),w,b
   918  001BF4                     l3471:
   919                           
   920                           ;WordClock.c: 93: }
   921                           ;WordClock.c: 95: if(VARbits1.bit2)
   922  001BF4  A455               	btfss	_VARbits1,2,c
   923  001BF6  D009               	goto	l3479
   924                           
   925                           ;WordClock.c: 96: {
   926                           ;WordClock.c: 112: SetTimer1(DutyCycle);
   927  001BF8  C03A  F0AB         	movff	_DutyCycle,SetTimer1@Count
   928  001BFC  C03B  F0AC         	movff	_DutyCycle+1,SetTimer1@Count+1
   929  001C00  EC24  F015         	call	_SetTimer1	;wreg free
   930                           
   931                           ;WordClock.c: 113: T1CONbits.TMR1ON=1;
   932  001C04  80CD               	bsf	4045,0,c	;volatile
   933                           
   934                           ;WordClock.c: 115: VARbits1.bit2=0;
   935  001C06  9455               	bcf	_VARbits1,2,c
   936  001C08  0004               	clrwdt		;# 
   937  001C0A                     l3479:
   938                           
   939                           ;WordClock.c: 117: }
   940                           ;WordClock.c: 119: if(CommFsmFlag)
   941  001C0A  5046               	movf	_CommFsmFlag,w,c
   942  001C0C  B4D8               	btfsc	status,2,c
   943  001C0E  D008               	goto	l3483
   944                           
   945                           ;WordClock.c: 120: {
   946                           ;WordClock.c: 121: CommFsmSched(FsmStructActive);
   947  001C10  0100               	movlb	0	; () banked
   948  001C12  C03D  F0BF         	movff	_FsmStructActive+1,CommFsmSched@FsmStruct+1
   949  001C16  0100               	movlb	0	; () banked
   950  001C18  C03C  F0BE         	movff	_FsmStructActive,CommFsmSched@FsmStruct
   951  001C1C  ECAC  F00A         	call	_CommFsmSched	;wreg free
   952  001C20                     l3483:
   953                           
   954                           ;WordClock.c: 122: }
   955                           ;WordClock.c: 124: I2cService();
   956  001C20  EC0D  F014         	call	_I2cService	;wreg free
   957  001C24  D77A               	goto	l3449
   958  001C26                     __end_of_main:
   959                           	opt stack 0
   960                           tblptru	equ	0xFF8
   961                           tblptrh	equ	0xFF7
   962                           tblptrl	equ	0xFF6
   963                           tablat	equ	0xFF5
   964                           intcon	equ	0xFF2
   965                           postinc0	equ	0xFEE
   966                           wreg	equ	0xFE8
   967                           postdec1	equ	0xFE5
   968                           fsr1l	equ	0xFE1
   969                           status	equ	0xFD8
   970                           
   971 ;; *************** function ___lwmod *****************
   972 ;; Defined at:
   973 ;;		line 8 in file "/Applications/microchip/xc8/v1.31/sources/common/lwmod.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;  dividend        2    0[BANK0 ] unsigned int 
   976 ;;  divisor         2    2[BANK0 ] unsigned int 
   977 ;; Auto vars:     Size  Location     Type
   978 ;;  counter         1    5[BANK0 ] unsigned char 
   979 ;; Return value:  Size  Location     Type
   980 ;;                  2    0[BANK0 ] unsigned int 
   981 ;; Registers used:
   982 ;;		wreg, status,2, status,0
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   988 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   989 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   990 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   991 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   992 ;;Total ram usage:        6 bytes
   993 ;; Hardware stack levels used:    1
   994 ;; Hardware stack levels required when called:    5
   995 ;; This function calls:
   996 ;;		Nothing
   997 ;; This function is called by:
   998 ;;		_main
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           	psect	text1
  1003  0023C2                     __ptext1:
  1004                           	opt stack 0
  1005  0023C2                     ___lwmod:
  1006                           	opt stack 25
  1007                           
  1008                           ;incstack = 0
  1009  0023C2  0100               	movlb	0	; () banked
  1010  0023C4  0100               	movlb	0	; () banked
  1011  0023C6  51AE               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1012  0023C8  11AD               	iorwf	___lwmod@divisor& (0+255),w,b
  1013  0023CA  B4D8               	btfsc	status,2,c
  1014  0023CC  D03A               	goto	l1013
  1015                           
  1016                           ; BSR set to: 0
  1017  0023CE  0100               	movlb	0	; () banked
  1018  0023D0  6FAF               	movwf	??___lwmod& (0+255),b
  1019  0023D2  0E01               	movlw	1
  1020  0023D4  0100               	movlb	0	; () banked
  1021  0023D6  0100               	movlb	0	; () banked
  1022  0023D8  6FB0               	movwf	___lwmod@counter& (0+255),b
  1023  0023DA  0100               	movlb	0	; () banked
  1024  0023DC  51AF               	movf	??___lwmod& (0+255),w,b
  1025  0023DE  D009               	goto	l3421
  1026  0023E0                     l3419:
  1027                           
  1028                           ; BSR set to: 0
  1029  0023E0  0100               	movlb	0	; () banked
  1030  0023E2  0100               	movlb	0	; () banked
  1031  0023E4  0100               	movlb	0	; () banked
  1032  0023E6  90D8               	bcf	status,0,c
  1033  0023E8  37AD               	rlcf	___lwmod@divisor& (0+255),f,b
  1034  0023EA  37AE               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1035  0023EC  0100               	movlb	0	; () banked
  1036  0023EE  0100               	movlb	0	; () banked
  1037  0023F0  2BB0               	incf	___lwmod@counter& (0+255),f,b
  1038  0023F2                     l3421:
  1039                           
  1040                           ; BSR set to: 0
  1041  0023F2  0100               	movlb	0	; () banked
  1042  0023F4  0100               	movlb	0	; () banked
  1043  0023F6  AFAE               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1044  0023F8  D7F3               	goto	l3419
  1045  0023FA                     l3423:
  1046                           
  1047                           ; BSR set to: 0
  1048  0023FA  0100               	movlb	0	; () banked
  1049  0023FC  0100               	movlb	0	; () banked
  1050  0023FE  51AD               	movf	___lwmod@divisor& (0+255),w,b
  1051  002400  0100               	movlb	0	; () banked
  1052  002402  0100               	movlb	0	; () banked
  1053  002404  5DAB               	subwf	___lwmod@dividend& (0+255),w,b
  1054  002406  0100               	movlb	0	; () banked
  1055  002408  0100               	movlb	0	; () banked
  1056  00240A  51AE               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1057  00240C  0100               	movlb	0	; () banked
  1058  00240E  0100               	movlb	0	; () banked
  1059  002410  59AC               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1060  002412  A0D8               	btfss	status,0,c
  1061  002414  D00C               	goto	l3427
  1062                           
  1063                           ; BSR set to: 0
  1064  002416  0100               	movlb	0	; () banked
  1065  002418  0100               	movlb	0	; () banked
  1066  00241A  51AD               	movf	___lwmod@divisor& (0+255),w,b
  1067  00241C  0100               	movlb	0	; () banked
  1068  00241E  0100               	movlb	0	; () banked
  1069  002420  5FAB               	subwf	___lwmod@dividend& (0+255),f,b
  1070  002422  0100               	movlb	0	; () banked
  1071  002424  0100               	movlb	0	; () banked
  1072  002426  51AE               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1073  002428  0100               	movlb	0	; () banked
  1074  00242A  0100               	movlb	0	; () banked
  1075  00242C  5BAC               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1076  00242E                     l3427:
  1077                           
  1078                           ; BSR set to: 0
  1079  00242E  0100               	movlb	0	; () banked
  1080  002430  0100               	movlb	0	; () banked
  1081  002432  0100               	movlb	0	; () banked
  1082  002434  90D8               	bcf	status,0,c
  1083  002436  33AE               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1084  002438  33AD               	rrcf	___lwmod@divisor& (0+255),f,b
  1085                           
  1086                           ; BSR set to: 0
  1087  00243A  0100               	movlb	0	; () banked
  1088  00243C  0100               	movlb	0	; () banked
  1089  00243E  2FB0               	decfsz	___lwmod@counter& (0+255),f,b
  1090  002440  D7DC               	goto	l3423
  1091  002442                     l1013:
  1092                           
  1093                           ; BSR set to: 0
  1094  002442  C0AB  F0AB         	movff	___lwmod@dividend,?___lwmod
  1095  002446  C0AC  F0AC         	movff	___lwmod@dividend+1,?___lwmod+1
  1096                           
  1097                           ; BSR set to: 0
  1098  00244A  0012               	return	
  1099  00244C                     __end_of___lwmod:
  1100                           	opt stack 0
  1101                           tblptru	equ	0xFF8
  1102                           tblptrh	equ	0xFF7
  1103                           tblptrl	equ	0xFF6
  1104                           tablat	equ	0xFF5
  1105                           intcon	equ	0xFF2
  1106                           postinc0	equ	0xFEE
  1107                           wreg	equ	0xFE8
  1108                           postdec1	equ	0xFE5
  1109                           fsr1l	equ	0xFE1
  1110                           status	equ	0xFD8
  1111                           
  1112 ;; *************** function _StartCommFsmSched *****************
  1113 ;; Defined at:
  1114 ;;		line 62 in file "../comm.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;  FsmStruct       2    0[BANK0 ] PTR struct FsmTable
  1117 ;;		 -> ReadTimeFsm(25), 
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;		None
  1120 ;; Return value:  Size  Location     Type
  1121 ;;		None               void
  1122 ;; Registers used:
  1123 ;;		wreg, status,2, status,0
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1129 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1131 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1132 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1133 ;;Total ram usage:        3 bytes
  1134 ;; Hardware stack levels used:    1
  1135 ;; Hardware stack levels required when called:    5
  1136 ;; This function calls:
  1137 ;;		Nothing
  1138 ;; This function is called by:
  1139 ;;		_main
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           	psect	text2
  1144  0028BE                     __ptext2:
  1145                           	opt stack 0
  1146  0028BE                     _StartCommFsmSched:
  1147                           	opt stack 25
  1148                           
  1149                           ;comm.c: 64: FsmIndx = 0;
  1150                           
  1151                           ; BSR set to: 0
  1152                           ;incstack = 0
  1153  0028BE  0100               	movlb	0	; () banked
  1154  0028C0  6FAD               	movwf	??_StartCommFsmSched& (0+255),b
  1155  0028C2  0E00               	movlw	0
  1156  0028C4  6E47               	movwf	_FsmIndx,c
  1157  0028C6  0100               	movlb	0	; () banked
  1158  0028C8  51AD               	movf	??_StartCommFsmSched& (0+255),w,b
  1159                           
  1160                           ;comm.c: 65: CommFsmFlag = 1;
  1161  0028CA  0100               	movlb	0	; () banked
  1162  0028CC  6FAD               	movwf	??_StartCommFsmSched& (0+255),b
  1163  0028CE  0E01               	movlw	1
  1164  0028D0  6E46               	movwf	_CommFsmFlag,c
  1165  0028D2  0100               	movlb	0	; () banked
  1166  0028D4  51AD               	movf	??_StartCommFsmSched& (0+255),w,b
  1167                           
  1168                           ;comm.c: 66: TxFsmFlag = 0;
  1169  0028D6  0100               	movlb	0	; () banked
  1170  0028D8  6FAD               	movwf	??_StartCommFsmSched& (0+255),b
  1171  0028DA  0E00               	movlw	0
  1172  0028DC  0100               	movlb	0	; () banked
  1173  0028DE  0100               	movlb	0	; () banked
  1174  0028E0  6F8A               	movwf	_TxFsmFlag& (0+255),b
  1175  0028E2  0100               	movlb	0	; () banked
  1176  0028E4  51AD               	movf	??_StartCommFsmSched& (0+255),w,b
  1177                           
  1178                           ;comm.c: 67: RxFsmFlag = 0;
  1179  0028E6  0100               	movlb	0	; () banked
  1180  0028E8  6FAD               	movwf	??_StartCommFsmSched& (0+255),b
  1181  0028EA  0E00               	movlw	0
  1182  0028EC  0100               	movlb	0	; () banked
  1183  0028EE  0100               	movlb	0	; () banked
  1184  0028F0  6F89               	movwf	_RxFsmFlag& (0+255),b
  1185  0028F2  0100               	movlb	0	; () banked
  1186  0028F4  51AD               	movf	??_StartCommFsmSched& (0+255),w,b
  1187                           
  1188                           ; BSR set to: 0
  1189                           ;comm.c: 68: FsmStructActive = FsmStruct;
  1190  0028F6  0100               	movlb	0	; () banked
  1191  0028F8  C0AC  F03D         	movff	StartCommFsmSched@FsmStruct+1,_FsmStructActive+1
  1192  0028FC  0100               	movlb	0	; () banked
  1193  0028FE  C0AB  F03C         	movff	StartCommFsmSched@FsmStruct,_FsmStructActive
  1194                           
  1195                           ; BSR set to: 0
  1196  002902  0012               	return	
  1197  002904                     __end_of_StartCommFsmSched:
  1198                           	opt stack 0
  1199                           tblptru	equ	0xFF8
  1200                           tblptrh	equ	0xFF7
  1201                           tblptrl	equ	0xFF6
  1202                           tablat	equ	0xFF5
  1203                           intcon	equ	0xFF2
  1204                           postinc0	equ	0xFEE
  1205                           wreg	equ	0xFE8
  1206                           postdec1	equ	0xFE5
  1207                           fsr1l	equ	0xFE1
  1208                           status	equ	0xFD8
  1209                           
  1210 ;; *************** function _Settings *****************
  1211 ;; Defined at:
  1212 ;;		line 6 in file "../settings.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;		None               void
  1219 ;; Registers used:
  1220 ;;		wreg, status,2
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1230 ;;Total ram usage:        0 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:    5
  1233 ;; This function calls:
  1234 ;;		Nothing
  1235 ;; This function is called by:
  1236 ;;		_main
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           	psect	text3
  1241  002756                     __ptext3:
  1242                           	opt stack 0
  1243  002756                     _Settings:
  1244                           	opt stack 25
  1245                           
  1246                           ;settings.c: 17: TRISA = 0b11000001;
  1247                           
  1248                           ; BSR set to: 0
  1249                           ;incstack = 0
  1250  002756  0EC1               	movlw	193
  1251  002758  6E92               	movwf	3986,c	;volatile
  1252                           
  1253                           ;settings.c: 27: TRISB = 0b11000001;
  1254  00275A  0EC1               	movlw	193
  1255  00275C  6E93               	movwf	3987,c	;volatile
  1256                           
  1257                           ;settings.c: 39: TRISC = 0b11011100;
  1258  00275E  0EDC               	movlw	220
  1259  002760  6E94               	movwf	3988,c	;volatile
  1260                           
  1261                           ;settings.c: 51: TRISC = 0b00000000;
  1262  002762  0E00               	movlw	0
  1263  002764  6E94               	movwf	3988,c	;volatile
  1264                           
  1265                           ;settings.c: 59: TRISE = 0b11111000;
  1266  002766  0EF8               	movlw	248
  1267  002768  6E96               	movwf	3990,c	;volatile
  1268                           
  1269                           ;settings.c: 63: ADCON1bits.PCFG=0b1110;
  1270  00276A  50C1               	movf	4033,w,c	;volatile
  1271  00276C  0BF0               	andlw	-16
  1272  00276E  090E               	iorlw	14
  1273  002770  6EC1               	movwf	4033,c	;volatile
  1274                           
  1275                           ;settings.c: 66: T0CONbits.TMR0ON=0;
  1276  002772  9ED5               	bcf	4053,7,c	;volatile
  1277                           
  1278                           ;settings.c: 67: T0CONbits.T08BIT=0;
  1279  002774  9CD5               	bcf	4053,6,c	;volatile
  1280                           
  1281                           ;settings.c: 68: T0CONbits.T0CS=0;
  1282  002776  9AD5               	bcf	4053,5,c	;volatile
  1283                           
  1284                           ;settings.c: 69: T0CONbits.T0SE=0;
  1285  002778  98D5               	bcf	4053,4,c	;volatile
  1286                           
  1287                           ;settings.c: 70: T0CONbits.PSA=0;
  1288  00277A  96D5               	bcf	4053,3,c	;volatile
  1289                           
  1290                           ;settings.c: 72: T0CONbits.T0PS=7;
  1291  00277C  80D5               	bsf	4053,0,c	;volatile
  1292  00277E  82D5               	bsf	4053,1,c	;volatile
  1293  002780  84D5               	bsf	4053,2,c	;volatile
  1294                           
  1295                           ;settings.c: 77: Timer0_ms = (int)(65535 - (1.5 * (40000000 / 4) / 256));
  1296  002782  0E1B               	movlw	27
  1297  002784  6E61               	movwf	_Timer0_ms+1,c
  1298  002786  0E1D               	movlw	29
  1299  002788  6E60               	movwf	_Timer0_ms,c
  1300                           
  1301                           ;settings.c: 78: VARbits1.bit0 = 0;
  1302  00278A  9055               	bcf	_VARbits1,0,c
  1303                           
  1304                           ;settings.c: 79: INTCONbits.TMR0IF = 0;
  1305  00278C  94F2               	bcf	intcon,2,c	;volatile
  1306                           
  1307                           ;settings.c: 82: T1CONbits.TMR1ON=0;
  1308  00278E  90CD               	bcf	4045,0,c	;volatile
  1309                           
  1310                           ;settings.c: 83: T1CONbits.TMR1CS=0;
  1311  002790  92CD               	bcf	4045,1,c	;volatile
  1312                           
  1313                           ;settings.c: 84: T1CONbits.RD16=1;
  1314  002792  8ECD               	bsf	4045,7,c	;volatile
  1315                           
  1316                           ;settings.c: 85: T1CONbits.T1OSCEN=0;
  1317  002794  96CD               	bcf	4045,3,c	;volatile
  1318                           
  1319                           ;settings.c: 86: T1CONbits.T1RUN=0;
  1320  002796  9CCD               	bcf	4045,6,c	;volatile
  1321                           
  1322                           ;settings.c: 87: T1CONbits.T1SYNC=1;
  1323  002798  84CD               	bsf	4045,2,c	;volatile
  1324                           
  1325                           ;settings.c: 90: T1CONbits.T1CKPS=3;
  1326  00279A  0E30               	movlw	48
  1327  00279C  12CD               	iorwf	4045,f,c	;volatile
  1328                           
  1329                           ;settings.c: 94: PIR1bits.TMR1IF = 0;
  1330  00279E  909E               	bcf	3998,0,c	;volatile
  1331                           
  1332                           ;settings.c: 97: T3CONbits.TMR3ON=0;
  1333  0027A0  90B1               	bcf	4017,0,c	;volatile
  1334                           
  1335                           ;settings.c: 98: T3CONbits.RD16=1;
  1336  0027A2  8EB1               	bsf	4017,7,c	;volatile
  1337                           
  1338                           ;settings.c: 99: T3CONbits.TMR3CS=0;
  1339  0027A4  92B1               	bcf	4017,1,c	;volatile
  1340                           
  1341                           ;settings.c: 101: T3CONbits.T3CKPS=3;
  1342  0027A6  0E30               	movlw	48
  1343  0027A8  12B1               	iorwf	4017,f,c	;volatile
  1344                           
  1345                           ;settings.c: 106: Timer3_ms = (int)(65535 - (0.001 * (40000000 / 4) / 8));
  1346  0027AA  0EFB               	movlw	251
  1347  0027AC  6E63               	movwf	_Timer3_ms+1,c
  1348  0027AE  0E1D               	movlw	29
  1349  0027B0  6E62               	movwf	_Timer3_ms,c
  1350                           
  1351                           ;settings.c: 107: VARbits1.bit2 = 0;
  1352  0027B2  9455               	bcf	_VARbits1,2,c
  1353                           
  1354                           ;settings.c: 108: PIR2bits.TMR3IF = 0;
  1355  0027B4  92A1               	bcf	4001,1,c	;volatile
  1356  0027B6  0012               	return	
  1357  0027B8                     __end_of_Settings:
  1358                           	opt stack 0
  1359                           tblptru	equ	0xFF8
  1360                           tblptrh	equ	0xFF7
  1361                           tblptrl	equ	0xFF6
  1362                           tablat	equ	0xFF5
  1363                           intcon	equ	0xFF2
  1364                           postinc0	equ	0xFEE
  1365                           wreg	equ	0xFE8
  1366                           postdec1	equ	0xFE5
  1367                           fsr1l	equ	0xFE1
  1368                           status	equ	0xFD8
  1369                           
  1370 ;; *************** function _SetTimer3 *****************
  1371 ;; Defined at:
  1372 ;;		line 153 in file "../WordClock.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;  Count           2    0[BANK0 ] int 
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;		None
  1377 ;; Return value:  Size  Location     Type
  1378 ;;		None               void
  1379 ;; Registers used:
  1380 ;;		wreg, status,2
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1386 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1388 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1389 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1390 ;;Total ram usage:        4 bytes
  1391 ;; Hardware stack levels used:    1
  1392 ;; Hardware stack levels required when called:    5
  1393 ;; This function calls:
  1394 ;;		Nothing
  1395 ;; This function is called by:
  1396 ;;		_main
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           	psect	text4
  1401  002A2E                     __ptext4:
  1402                           	opt stack 0
  1403  002A2E                     _SetTimer3:
  1404                           	opt stack 25
  1405                           
  1406                           ;WordClock.c: 160: TMR3H = Count >> 8;
  1407                           
  1408                           ;incstack = 0
  1409  002A2E  0100               	movlb	0	; () banked
  1410  002A30  C0AC  F0AD         	movff	SetTimer3@Count+1,??_SetTimer3
  1411  002A34  0100               	movlb	0	; () banked
  1412  002A36  6BAE               	clrf	(??_SetTimer3+1)& (0+255),b
  1413  002A38  BFAD               	btfsc	??_SetTimer3& (0+255),7,b
  1414  002A3A  69AE               	setf	(??_SetTimer3+1)& (0+255),b
  1415  002A3C  0100               	movlb	0	; () banked
  1416  002A3E  51AD               	movf	??_SetTimer3& (0+255),w,b
  1417  002A40  6EB3               	movwf	4019,c	;volatile
  1418                           
  1419                           ; BSR set to: 0
  1420                           ;WordClock.c: 161: TMR3L = Count;
  1421  002A42  C0AB  FFB2         	movff	SetTimer3@Count,4018	;volatile
  1422                           
  1423                           ; BSR set to: 0
  1424  002A46  0012               	return	
  1425  002A48                     __end_of_SetTimer3:
  1426                           	opt stack 0
  1427                           tblptru	equ	0xFF8
  1428                           tblptrh	equ	0xFF7
  1429                           tblptrl	equ	0xFF6
  1430                           tablat	equ	0xFF5
  1431                           intcon	equ	0xFF2
  1432                           postinc0	equ	0xFEE
  1433                           wreg	equ	0xFE8
  1434                           postdec1	equ	0xFE5
  1435                           fsr1l	equ	0xFE1
  1436                           status	equ	0xFD8
  1437                           
  1438 ;; *************** function _SetTimer1 *****************
  1439 ;; Defined at:
  1440 ;;		line 145 in file "../WordClock.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;  Count           2    0[BANK0 ] int 
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;		None
  1445 ;; Return value:  Size  Location     Type
  1446 ;;		None               void
  1447 ;; Registers used:
  1448 ;;		wreg, status,2
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1454 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1456 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1457 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1458 ;;Total ram usage:        4 bytes
  1459 ;; Hardware stack levels used:    1
  1460 ;; Hardware stack levels required when called:    5
  1461 ;; This function calls:
  1462 ;;		Nothing
  1463 ;; This function is called by:
  1464 ;;		_main
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           	psect	text5
  1469  002A48                     __ptext5:
  1470                           	opt stack 0
  1471  002A48                     _SetTimer1:
  1472                           	opt stack 25
  1473                           
  1474                           ;WordClock.c: 149: TMR1H = Count >> 8;
  1475                           
  1476                           ; BSR set to: 0
  1477                           ;incstack = 0
  1478  002A48  0100               	movlb	0	; () banked
  1479  002A4A  C0AC  F0AD         	movff	SetTimer1@Count+1,??_SetTimer1
  1480  002A4E  0100               	movlb	0	; () banked
  1481  002A50  6BAE               	clrf	(??_SetTimer1+1)& (0+255),b
  1482  002A52  BFAD               	btfsc	??_SetTimer1& (0+255),7,b
  1483  002A54  69AE               	setf	(??_SetTimer1+1)& (0+255),b
  1484  002A56  0100               	movlb	0	; () banked
  1485  002A58  51AD               	movf	??_SetTimer1& (0+255),w,b
  1486  002A5A  6ECF               	movwf	4047,c	;volatile
  1487                           
  1488                           ; BSR set to: 0
  1489                           ;WordClock.c: 150: TMR1L = Count;
  1490  002A5C  C0AB  FFCE         	movff	SetTimer1@Count,4046	;volatile
  1491                           
  1492                           ; BSR set to: 0
  1493  002A60  0012               	return	
  1494  002A62                     __end_of_SetTimer1:
  1495                           	opt stack 0
  1496                           tblptru	equ	0xFF8
  1497                           tblptrh	equ	0xFF7
  1498                           tblptrl	equ	0xFF6
  1499                           tablat	equ	0xFF5
  1500                           intcon	equ	0xFF2
  1501                           postinc0	equ	0xFEE
  1502                           wreg	equ	0xFE8
  1503                           postdec1	equ	0xFE5
  1504                           fsr1l	equ	0xFE1
  1505                           status	equ	0xFD8
  1506                           
  1507 ;; *************** function _RtcWriteTime *****************
  1508 ;; Defined at:
  1509 ;;		line 184 in file "../WordClock.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;		None
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;  Tens            1   13[BANK0 ] unsigned char 
  1514 ;;  Units           1   12[BANK0 ] unsigned char 
  1515 ;; Return value:  Size  Location     Type
  1516 ;;		None               void
  1517 ;; Registers used:
  1518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1525 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1526 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1527 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1528 ;;Total ram usage:        5 bytes
  1529 ;; Hardware stack levels used:    1
  1530 ;; Hardware stack levels required when called:    6
  1531 ;; This function calls:
  1532 ;;		_I2cBuffChk
  1533 ;;		_I2cData
  1534 ;;		___awdiv
  1535 ;; This function is called by:
  1536 ;;		_main
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text6
  1541  00192C                     __ptext6:
  1542                           	opt stack 0
  1543  00192C                     _RtcWriteTime:
  1544                           	opt stack 24
  1545                           
  1546                           ;WordClock.c: 186: unsigned char Units;
  1547                           ;WordClock.c: 187: unsigned char Tens;
  1548                           ;WordClock.c: 189: Tens = NtpSec / 10;
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;incstack = 0
  1552  00192C  0100               	movlb	0	; () banked
  1553  00192E  0100               	movlb	0	; () banked
  1554  001930  C088  F0AB         	movff	_NtpSec,___awdiv@dividend
  1555  001934  0100               	movlb	0	; () banked
  1556  001936  0100               	movlb	0	; () banked
  1557  001938  6BAC               	clrf	(___awdiv@dividend+1)& (0+255),b
  1558  00193A  0E00               	movlw	0
  1559  00193C  0100               	movlb	0	; () banked
  1560  00193E  0100               	movlb	0	; () banked
  1561  001940  6FAE               	movwf	(___awdiv@divisor+1)& (0+255),b
  1562  001942  0E0A               	movlw	10
  1563  001944  0100               	movlb	0	; () banked
  1564  001946  6FAD               	movwf	___awdiv@divisor& (0+255),b
  1565  001948  EC13  F00E         	call	___awdiv	;wreg free
  1566  00194C  0100               	movlb	0	; () banked
  1567  00194E  0100               	movlb	0	; () banked
  1568  001950  51AB               	movf	?___awdiv& (0+255),w,b
  1569  001952  0100               	movlb	0	; () banked
  1570  001954  0100               	movlb	0	; () banked
  1571  001956  6FB8               	movwf	RtcWriteTime@Tens& (0+255),b
  1572                           
  1573                           ; BSR set to: 0
  1574                           ;WordClock.c: 190: Units = NtpSec - (Tens * 10);
  1575  001958  0100               	movlb	0	; () banked
  1576  00195A  0100               	movlb	0	; () banked
  1577  00195C  51B8               	movf	RtcWriteTime@Tens& (0+255),w,b
  1578  00195E  0D0A               	mullw	10
  1579  001960  50F3               	movf	prodl,w,c
  1580  001962  0800               	sublw	0
  1581  001964  0100               	movlb	0	; () banked
  1582  001966  0100               	movlb	0	; () banked
  1583  001968  2588               	addwf	_NtpSec& (0+255),w,b
  1584  00196A  0100               	movlb	0	; () banked
  1585  00196C  0100               	movlb	0	; () banked
  1586  00196E  6FB7               	movwf	RtcWriteTime@Units& (0+255),b
  1587                           
  1588                           ; BSR set to: 0
  1589                           ;WordClock.c: 191: Sec = (Tens << 4) | Units;
  1590  001970  0100               	movlb	0	; () banked
  1591  001972  0100               	movlb	0	; () banked
  1592  001974  51B8               	movf	RtcWriteTime@Tens& (0+255),w,b
  1593  001976  0100               	movlb	0	; () banked
  1594  001978  6FB4               	movwf	??_RtcWriteTime& (0+255),b
  1595  00197A  6BB5               	clrf	(??_RtcWriteTime+1)& (0+255),b
  1596  00197C  0100               	movlb	0	; () banked
  1597  00197E  3BB4               	swapf	??_RtcWriteTime& (0+255),f,b
  1598  001980  3BB5               	swapf	(??_RtcWriteTime+1)& (0+255),f,b
  1599  001982  0EF0               	movlw	240
  1600  001984  17B5               	andwf	(??_RtcWriteTime+1)& (0+255),f,b
  1601  001986  51B4               	movf	??_RtcWriteTime& (0+255),w,b
  1602  001988  0B0F               	andlw	15
  1603  00198A  13B5               	iorwf	(??_RtcWriteTime+1)& (0+255),f,b
  1604  00198C  0EF0               	movlw	240
  1605  00198E  17B4               	andwf	??_RtcWriteTime& (0+255),f,b
  1606  001990  0100               	movlb	0	; () banked
  1607  001992  0100               	movlb	0	; () banked
  1608  001994  51B7               	movf	RtcWriteTime@Units& (0+255),w,b
  1609  001996  0100               	movlb	0	; () banked
  1610  001998  11B4               	iorwf	??_RtcWriteTime& (0+255),w,b
  1611  00199A  0100               	movlb	0	; () banked
  1612  00199C  0100               	movlb	0	; () banked
  1613  00199E  6F84               	movwf	_Sec& (0+255),b
  1614  0019A0  0100               	movlb	0	; () banked
  1615  0019A2  51B5               	movf	(??_RtcWriteTime+1)& (0+255),w,b
  1616  0019A4  0100               	movlb	0	; () banked
  1617  0019A6  6F85               	movwf	(_Sec+1)& (0+255),b
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;WordClock.c: 194: Tens = NtpMin / 10;
  1621  0019A8  0100               	movlb	0	; () banked
  1622  0019AA  0100               	movlb	0	; () banked
  1623  0019AC  C087  F0AB         	movff	_NtpMin,___awdiv@dividend
  1624  0019B0  0100               	movlb	0	; () banked
  1625  0019B2  0100               	movlb	0	; () banked
  1626  0019B4  6BAC               	clrf	(___awdiv@dividend+1)& (0+255),b
  1627  0019B6  0E00               	movlw	0
  1628  0019B8  0100               	movlb	0	; () banked
  1629  0019BA  0100               	movlb	0	; () banked
  1630  0019BC  6FAE               	movwf	(___awdiv@divisor+1)& (0+255),b
  1631  0019BE  0E0A               	movlw	10
  1632  0019C0  0100               	movlb	0	; () banked
  1633  0019C2  6FAD               	movwf	___awdiv@divisor& (0+255),b
  1634  0019C4  EC13  F00E         	call	___awdiv	;wreg free
  1635  0019C8  0100               	movlb	0	; () banked
  1636  0019CA  0100               	movlb	0	; () banked
  1637  0019CC  51AB               	movf	?___awdiv& (0+255),w,b
  1638  0019CE  0100               	movlb	0	; () banked
  1639  0019D0  0100               	movlb	0	; () banked
  1640  0019D2  6FB8               	movwf	RtcWriteTime@Tens& (0+255),b
  1641                           
  1642                           ; BSR set to: 0
  1643                           ;WordClock.c: 195: Units = NtpMin - (Tens * 10);
  1644  0019D4  0100               	movlb	0	; () banked
  1645  0019D6  0100               	movlb	0	; () banked
  1646  0019D8  51B8               	movf	RtcWriteTime@Tens& (0+255),w,b
  1647  0019DA  0D0A               	mullw	10
  1648  0019DC  50F3               	movf	prodl,w,c
  1649  0019DE  0800               	sublw	0
  1650  0019E0  0100               	movlb	0	; () banked
  1651  0019E2  0100               	movlb	0	; () banked
  1652  0019E4  2587               	addwf	_NtpMin& (0+255),w,b
  1653  0019E6  0100               	movlb	0	; () banked
  1654  0019E8  0100               	movlb	0	; () banked
  1655  0019EA  6FB7               	movwf	RtcWriteTime@Units& (0+255),b
  1656                           
  1657                           ;WordClock.c: 196: Min = (Tens << 4) | Units;
  1658  0019EC  0100               	movlb	0	; () banked
  1659  0019EE  0100               	movlb	0	; () banked
  1660  0019F0  51B8               	movf	RtcWriteTime@Tens& (0+255),w,b
  1661  0019F2  0100               	movlb	0	; () banked
  1662  0019F4  6FB4               	movwf	??_RtcWriteTime& (0+255),b
  1663  0019F6  6BB5               	clrf	(??_RtcWriteTime+1)& (0+255),b
  1664  0019F8  0100               	movlb	0	; () banked
  1665  0019FA  3BB4               	swapf	??_RtcWriteTime& (0+255),f,b
  1666  0019FC  3BB5               	swapf	(??_RtcWriteTime+1)& (0+255),f,b
  1667  0019FE  0EF0               	movlw	240
  1668  001A00  17B5               	andwf	(??_RtcWriteTime+1)& (0+255),f,b
  1669  001A02  51B4               	movf	??_RtcWriteTime& (0+255),w,b
  1670  001A04  0B0F               	andlw	15
  1671  001A06  13B5               	iorwf	(??_RtcWriteTime+1)& (0+255),f,b
  1672  001A08  0EF0               	movlw	240
  1673  001A0A  17B4               	andwf	??_RtcWriteTime& (0+255),f,b
  1674  001A0C  0100               	movlb	0	; () banked
  1675  001A0E  0100               	movlb	0	; () banked
  1676  001A10  51B7               	movf	RtcWriteTime@Units& (0+255),w,b
  1677  001A12  0100               	movlb	0	; () banked
  1678  001A14  11B4               	iorwf	??_RtcWriteTime& (0+255),w,b
  1679  001A16  0100               	movlb	0	; () banked
  1680  001A18  0100               	movlb	0	; () banked
  1681  001A1A  6F82               	movwf	_Min& (0+255),b
  1682  001A1C  0100               	movlb	0	; () banked
  1683  001A1E  51B5               	movf	(??_RtcWriteTime+1)& (0+255),w,b
  1684  001A20  0100               	movlb	0	; () banked
  1685  001A22  6F83               	movwf	(_Min+1)& (0+255),b
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;WordClock.c: 198: Tens = NtpHour / 10;
  1689  001A24  0100               	movlb	0	; () banked
  1690  001A26  0100               	movlb	0	; () banked
  1691  001A28  C086  F0AB         	movff	_NtpHour,___awdiv@dividend
  1692  001A2C  0100               	movlb	0	; () banked
  1693  001A2E  0100               	movlb	0	; () banked
  1694  001A30  6BAC               	clrf	(___awdiv@dividend+1)& (0+255),b
  1695  001A32  0E00               	movlw	0
  1696  001A34  0100               	movlb	0	; () banked
  1697  001A36  0100               	movlb	0	; () banked
  1698  001A38  6FAE               	movwf	(___awdiv@divisor+1)& (0+255),b
  1699  001A3A  0E0A               	movlw	10
  1700  001A3C  0100               	movlb	0	; () banked
  1701  001A3E  6FAD               	movwf	___awdiv@divisor& (0+255),b
  1702  001A40  EC13  F00E         	call	___awdiv	;wreg free
  1703  001A44  0100               	movlb	0	; () banked
  1704  001A46  0100               	movlb	0	; () banked
  1705  001A48  51AB               	movf	?___awdiv& (0+255),w,b
  1706  001A4A  0100               	movlb	0	; () banked
  1707  001A4C  0100               	movlb	0	; () banked
  1708  001A4E  6FB8               	movwf	RtcWriteTime@Tens& (0+255),b
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;WordClock.c: 199: Units = NtpHour - (Tens * 10);
  1712  001A50  0100               	movlb	0	; () banked
  1713  001A52  0100               	movlb	0	; () banked
  1714  001A54  51B8               	movf	RtcWriteTime@Tens& (0+255),w,b
  1715  001A56  0D0A               	mullw	10
  1716  001A58  50F3               	movf	prodl,w,c
  1717  001A5A  0800               	sublw	0
  1718  001A5C  0100               	movlb	0	; () banked
  1719  001A5E  0100               	movlb	0	; () banked
  1720  001A60  2586               	addwf	_NtpHour& (0+255),w,b
  1721  001A62  0100               	movlb	0	; () banked
  1722  001A64  0100               	movlb	0	; () banked
  1723  001A66  6FB7               	movwf	RtcWriteTime@Units& (0+255),b
  1724                           
  1725                           ; BSR set to: 0
  1726                           ;WordClock.c: 200: Hour = (Tens<<4) | Units;
  1727  001A68  0100               	movlb	0	; () banked
  1728  001A6A  0100               	movlb	0	; () banked
  1729  001A6C  51B8               	movf	RtcWriteTime@Tens& (0+255),w,b
  1730  001A6E  0100               	movlb	0	; () banked
  1731  001A70  6FB4               	movwf	??_RtcWriteTime& (0+255),b
  1732  001A72  6BB5               	clrf	(??_RtcWriteTime+1)& (0+255),b
  1733  001A74  0100               	movlb	0	; () banked
  1734  001A76  3BB4               	swapf	??_RtcWriteTime& (0+255),f,b
  1735  001A78  3BB5               	swapf	(??_RtcWriteTime+1)& (0+255),f,b
  1736  001A7A  0EF0               	movlw	240
  1737  001A7C  17B5               	andwf	(??_RtcWriteTime+1)& (0+255),f,b
  1738  001A7E  51B4               	movf	??_RtcWriteTime& (0+255),w,b
  1739  001A80  0B0F               	andlw	15
  1740  001A82  13B5               	iorwf	(??_RtcWriteTime+1)& (0+255),f,b
  1741  001A84  0EF0               	movlw	240
  1742  001A86  17B4               	andwf	??_RtcWriteTime& (0+255),f,b
  1743  001A88  0100               	movlb	0	; () banked
  1744  001A8A  0100               	movlb	0	; () banked
  1745  001A8C  51B7               	movf	RtcWriteTime@Units& (0+255),w,b
  1746  001A8E  0100               	movlb	0	; () banked
  1747  001A90  11B4               	iorwf	??_RtcWriteTime& (0+255),w,b
  1748  001A92  0100               	movlb	0	; () banked
  1749  001A94  0100               	movlb	0	; () banked
  1750  001A96  6F80               	movwf	_Hour& (0+255),b
  1751  001A98  0100               	movlb	0	; () banked
  1752  001A9A  51B5               	movf	(??_RtcWriteTime+1)& (0+255),w,b
  1753  001A9C  0100               	movlb	0	; () banked
  1754  001A9E  6F81               	movwf	(_Hour+1)& (0+255),b
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;WordClock.c: 202: if(I2cBuffChk(0))
  1758  001AA0  0E00               	movlw	0
  1759  001AA2  EC43  F013         	call	_I2cBuffChk
  1760  001AA6  0900               	iorlw	0
  1761  001AA8  B4D8               	btfsc	status,2,c
  1762  001AAA  D021               	goto	l227
  1763                           
  1764                           ;WordClock.c: 203: {
  1765                           ;WordClock.c: 204: I2cData(0, 4, 0, Sec, Min, Hour, 0);
  1766  001AAC  0100               	movlb	0	; () banked
  1767  001AAE  6FB4               	movwf	??_RtcWriteTime& (0+255),b
  1768  001AB0  0E04               	movlw	4
  1769  001AB2  0100               	movlb	0	; () banked
  1770  001AB4  0100               	movlb	0	; () banked
  1771  001AB6  6FAB               	movwf	I2cData@TxBytes& (0+255),b
  1772  001AB8  0100               	movlb	0	; () banked
  1773  001ABA  51B4               	movf	??_RtcWriteTime& (0+255),w,b
  1774  001ABC  0100               	movlb	0	; () banked
  1775  001ABE  6FB5               	movwf	(??_RtcWriteTime+1)& (0+255),b
  1776  001AC0  0E00               	movlw	0
  1777  001AC2  0100               	movlb	0	; () banked
  1778  001AC4  0100               	movlb	0	; () banked
  1779  001AC6  6FAC               	movwf	I2cData@TX1& (0+255),b
  1780  001AC8  0100               	movlb	0	; () banked
  1781  001ACA  51B5               	movf	(??_RtcWriteTime+1)& (0+255),w,b
  1782  001ACC  C084  F0AD         	movff	_Sec,I2cData@TX2
  1783  001AD0  C082  F0AE         	movff	_Min,I2cData@TX3
  1784  001AD4  C080  F0AF         	movff	_Hour,I2cData@TX4
  1785  001AD8  0100               	movlb	0	; () banked
  1786  001ADA  6FB6               	movwf	(??_RtcWriteTime+2)& (0+255),b
  1787  001ADC  0E00               	movlw	0
  1788  001ADE  0100               	movlb	0	; () banked
  1789  001AE0  0100               	movlb	0	; () banked
  1790  001AE2  6FB0               	movwf	I2cData@RxBytes& (0+255),b
  1791  001AE4  0100               	movlb	0	; () banked
  1792  001AE6  51B6               	movf	(??_RtcWriteTime+2)& (0+255),w,b
  1793  001AE8  0E00               	movlw	0
  1794  001AEA  ECB6  F00F         	call	_I2cData
  1795  001AEE                     l227:
  1796  001AEE  0012               	return	
  1797  001AF0                     __end_of_RtcWriteTime:
  1798                           	opt stack 0
  1799                           tblptru	equ	0xFF8
  1800                           tblptrh	equ	0xFF7
  1801                           tblptrl	equ	0xFF6
  1802                           tablat	equ	0xFF5
  1803                           prodl	equ	0xFF3
  1804                           intcon	equ	0xFF2
  1805                           postinc0	equ	0xFEE
  1806                           wreg	equ	0xFE8
  1807                           postdec1	equ	0xFE5
  1808                           fsr1l	equ	0xFE1
  1809                           status	equ	0xFD8
  1810                           
  1811 ;; *************** function ___awdiv *****************
  1812 ;; Defined at:
  1813 ;;		line 8 in file "/Applications/microchip/xc8/v1.31/sources/common/awdiv.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;  dividend        2    0[BANK0 ] int 
  1816 ;;  divisor         2    2[BANK0 ] int 
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;  quotient        2    7[BANK0 ] int 
  1819 ;;  sign            1    6[BANK0 ] unsigned char 
  1820 ;;  counter         1    5[BANK0 ] unsigned char 
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  2    0[BANK0 ] int 
  1823 ;; Registers used:
  1824 ;;		wreg, status,2, status,0, prodl
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1830 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1832 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1833 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1834 ;;Total ram usage:        9 bytes
  1835 ;; Hardware stack levels used:    1
  1836 ;; Hardware stack levels required when called:    5
  1837 ;; This function calls:
  1838 ;;		Nothing
  1839 ;; This function is called by:
  1840 ;;		_RtcWriteTime
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           	psect	text7
  1845  001C26                     __ptext7:
  1846                           	opt stack 0
  1847  001C26                     ___awdiv:
  1848                           	opt stack 24
  1849                           
  1850                           ;incstack = 0
  1851  001C26  0100               	movlb	0	; () banked
  1852  001C28  6FAF               	movwf	??___awdiv& (0+255),b
  1853  001C2A  0E00               	movlw	0
  1854  001C2C  0100               	movlb	0	; () banked
  1855  001C2E  0100               	movlb	0	; () banked
  1856  001C30  6FB1               	movwf	___awdiv@sign& (0+255),b
  1857  001C32  0100               	movlb	0	; () banked
  1858  001C34  51AF               	movf	??___awdiv& (0+255),w,b
  1859                           
  1860                           ; BSR set to: 0
  1861  001C36  0100               	movlb	0	; () banked
  1862  001C38  0100               	movlb	0	; () banked
  1863  001C3A  51AE               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1864  001C3C  0A80               	xorlw	128
  1865  001C3E  6EF3               	movwf	prodl,c
  1866  001C40  0E80               	movlw	128
  1867  001C42  5CF3               	subwf	prodl,w,c
  1868  001C44  0E00               	movlw	0
  1869  001C46  B4D8               	btfsc	status,2,c
  1870  001C48  5DAD               	subwf	___awdiv@divisor& (0+255),w,b
  1871  001C4A  B0D8               	btfsc	status,0,c
  1872  001C4C  D00F               	goto	l3139
  1873                           
  1874                           ; BSR set to: 0
  1875  001C4E  0100               	movlb	0	; () banked
  1876  001C50  0100               	movlb	0	; () banked
  1877  001C52  6DAD               	negf	___awdiv@divisor& (0+255),b
  1878  001C54  0100               	movlb	0	; () banked
  1879  001C56  1FAE               	comf	(___awdiv@divisor+1)& (0+255),f,b
  1880  001C58  B0D8               	btfsc	status,0,c
  1881  001C5A  2BAE               	incf	(___awdiv@divisor+1)& (0+255),f,b
  1882                           
  1883                           ; BSR set to: 0
  1884  001C5C  0100               	movlb	0	; () banked
  1885  001C5E  6FAF               	movwf	??___awdiv& (0+255),b
  1886  001C60  0E01               	movlw	1
  1887  001C62  0100               	movlb	0	; () banked
  1888  001C64  0100               	movlb	0	; () banked
  1889  001C66  6FB1               	movwf	___awdiv@sign& (0+255),b
  1890  001C68  0100               	movlb	0	; () banked
  1891  001C6A  51AF               	movf	??___awdiv& (0+255),w,b
  1892  001C6C                     l3139:
  1893                           
  1894                           ; BSR set to: 0
  1895  001C6C  0100               	movlb	0	; () banked
  1896  001C6E  0100               	movlb	0	; () banked
  1897  001C70  51AC               	movf	(___awdiv@dividend+1)& (0+255),w,b
  1898  001C72  0A80               	xorlw	128
  1899  001C74  6EF3               	movwf	prodl,c
  1900  001C76  0E80               	movlw	128
  1901  001C78  5CF3               	subwf	prodl,w,c
  1902  001C7A  0E00               	movlw	0
  1903  001C7C  B4D8               	btfsc	status,2,c
  1904  001C7E  5DAB               	subwf	___awdiv@dividend& (0+255),w,b
  1905  001C80  B0D8               	btfsc	status,0,c
  1906  001C82  D00B               	goto	l3145
  1907                           
  1908                           ; BSR set to: 0
  1909  001C84  0100               	movlb	0	; () banked
  1910  001C86  0100               	movlb	0	; () banked
  1911  001C88  6DAB               	negf	___awdiv@dividend& (0+255),b
  1912  001C8A  0100               	movlb	0	; () banked
  1913  001C8C  1FAC               	comf	(___awdiv@dividend+1)& (0+255),f,b
  1914  001C8E  B0D8               	btfsc	status,0,c
  1915  001C90  2BAC               	incf	(___awdiv@dividend+1)& (0+255),f,b
  1916                           
  1917                           ; BSR set to: 0
  1918  001C92  0E01               	movlw	1
  1919  001C94  0100               	movlb	0	; () banked
  1920  001C96  0100               	movlb	0	; () banked
  1921  001C98  1BB1               	xorwf	___awdiv@sign& (0+255),f,b
  1922  001C9A                     l3145:
  1923                           
  1924                           ; BSR set to: 0
  1925  001C9A  0E00               	movlw	0
  1926  001C9C  0100               	movlb	0	; () banked
  1927  001C9E  0100               	movlb	0	; () banked
  1928  001CA0  6FB3               	movwf	(___awdiv@quotient+1)& (0+255),b
  1929  001CA2  0E00               	movlw	0
  1930  001CA4  0100               	movlb	0	; () banked
  1931  001CA6  6FB2               	movwf	___awdiv@quotient& (0+255),b
  1932                           
  1933                           ; BSR set to: 0
  1934  001CA8  0100               	movlb	0	; () banked
  1935  001CAA  0100               	movlb	0	; () banked
  1936  001CAC  51AE               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1937  001CAE  11AD               	iorwf	___awdiv@divisor& (0+255),w,b
  1938  001CB0  B4D8               	btfsc	status,2,c
  1939  001CB2  D043               	goto	l3167
  1940                           
  1941                           ; BSR set to: 0
  1942  001CB4  0100               	movlb	0	; () banked
  1943  001CB6  6FAF               	movwf	??___awdiv& (0+255),b
  1944  001CB8  0E01               	movlw	1
  1945  001CBA  0100               	movlb	0	; () banked
  1946  001CBC  0100               	movlb	0	; () banked
  1947  001CBE  6FB0               	movwf	___awdiv@counter& (0+255),b
  1948  001CC0  0100               	movlb	0	; () banked
  1949  001CC2  51AF               	movf	??___awdiv& (0+255),w,b
  1950  001CC4  D009               	goto	l3153
  1951  001CC6                     l3151:
  1952                           
  1953                           ; BSR set to: 0
  1954  001CC6  0100               	movlb	0	; () banked
  1955  001CC8  0100               	movlb	0	; () banked
  1956  001CCA  0100               	movlb	0	; () banked
  1957  001CCC  90D8               	bcf	status,0,c
  1958  001CCE  37AD               	rlcf	___awdiv@divisor& (0+255),f,b
  1959  001CD0  37AE               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  1960  001CD2  0100               	movlb	0	; () banked
  1961  001CD4  0100               	movlb	0	; () banked
  1962  001CD6  2BB0               	incf	___awdiv@counter& (0+255),f,b
  1963  001CD8                     l3153:
  1964                           
  1965                           ; BSR set to: 0
  1966  001CD8  0100               	movlb	0	; () banked
  1967  001CDA  0100               	movlb	0	; () banked
  1968  001CDC  AFAE               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  1969  001CDE  D7F3               	goto	l3151
  1970  001CE0                     l3155:
  1971                           
  1972                           ; BSR set to: 0
  1973  001CE0  0100               	movlb	0	; () banked
  1974  001CE2  0100               	movlb	0	; () banked
  1975  001CE4  0100               	movlb	0	; () banked
  1976  001CE6  90D8               	bcf	status,0,c
  1977  001CE8  37B2               	rlcf	___awdiv@quotient& (0+255),f,b
  1978  001CEA  37B3               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  1979                           
  1980                           ; BSR set to: 0
  1981  001CEC  0100               	movlb	0	; () banked
  1982  001CEE  0100               	movlb	0	; () banked
  1983  001CF0  51AD               	movf	___awdiv@divisor& (0+255),w,b
  1984  001CF2  0100               	movlb	0	; () banked
  1985  001CF4  0100               	movlb	0	; () banked
  1986  001CF6  5DAB               	subwf	___awdiv@dividend& (0+255),w,b
  1987  001CF8  0100               	movlb	0	; () banked
  1988  001CFA  0100               	movlb	0	; () banked
  1989  001CFC  51AE               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1990  001CFE  0100               	movlb	0	; () banked
  1991  001D00  0100               	movlb	0	; () banked
  1992  001D02  59AC               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  1993  001D04  A0D8               	btfss	status,0,c
  1994  001D06  D00F               	goto	l3163
  1995                           
  1996                           ; BSR set to: 0
  1997  001D08  0100               	movlb	0	; () banked
  1998  001D0A  0100               	movlb	0	; () banked
  1999  001D0C  51AD               	movf	___awdiv@divisor& (0+255),w,b
  2000  001D0E  0100               	movlb	0	; () banked
  2001  001D10  0100               	movlb	0	; () banked
  2002  001D12  5FAB               	subwf	___awdiv@dividend& (0+255),f,b
  2003  001D14  0100               	movlb	0	; () banked
  2004  001D16  0100               	movlb	0	; () banked
  2005  001D18  51AE               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2006  001D1A  0100               	movlb	0	; () banked
  2007  001D1C  0100               	movlb	0	; () banked
  2008  001D1E  5BAC               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  2009                           
  2010                           ; BSR set to: 0
  2011  001D20  0100               	movlb	0	; () banked
  2012  001D22  0100               	movlb	0	; () banked
  2013  001D24  81B2               	bsf	___awdiv@quotient& (0+255),0,b
  2014  001D26                     l3163:
  2015                           
  2016                           ; BSR set to: 0
  2017  001D26  0100               	movlb	0	; () banked
  2018  001D28  0100               	movlb	0	; () banked
  2019  001D2A  0100               	movlb	0	; () banked
  2020  001D2C  90D8               	bcf	status,0,c
  2021  001D2E  33AE               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  2022  001D30  33AD               	rrcf	___awdiv@divisor& (0+255),f,b
  2023                           
  2024                           ; BSR set to: 0
  2025  001D32  0100               	movlb	0	; () banked
  2026  001D34  0100               	movlb	0	; () banked
  2027  001D36  2FB0               	decfsz	___awdiv@counter& (0+255),f,b
  2028  001D38  D7D3               	goto	l3155
  2029  001D3A                     l3167:
  2030                           
  2031                           ; BSR set to: 0
  2032  001D3A  0100               	movlb	0	; () banked
  2033  001D3C  0100               	movlb	0	; () banked
  2034  001D3E  51B1               	movf	___awdiv@sign& (0+255),w,b
  2035  001D40  B4D8               	btfsc	status,2,c
  2036  001D42  D007               	goto	l3171
  2037                           
  2038                           ; BSR set to: 0
  2039  001D44  0100               	movlb	0	; () banked
  2040  001D46  0100               	movlb	0	; () banked
  2041  001D48  6DB2               	negf	___awdiv@quotient& (0+255),b
  2042  001D4A  0100               	movlb	0	; () banked
  2043  001D4C  1FB3               	comf	(___awdiv@quotient+1)& (0+255),f,b
  2044  001D4E  B0D8               	btfsc	status,0,c
  2045  001D50  2BB3               	incf	(___awdiv@quotient+1)& (0+255),f,b
  2046  001D52                     l3171:
  2047                           
  2048                           ; BSR set to: 0
  2049  001D52  C0B2  F0AB         	movff	___awdiv@quotient,?___awdiv
  2050  001D56  C0B3  F0AC         	movff	___awdiv@quotient+1,?___awdiv+1
  2051                           
  2052                           ; BSR set to: 0
  2053                           
  2054                           ; BSR set to: 0
  2055  001D5A  0012               	return	
  2056  001D5C                     __end_of___awdiv:
  2057                           	opt stack 0
  2058                           tblptru	equ	0xFF8
  2059                           tblptrh	equ	0xFF7
  2060                           tblptrl	equ	0xFF6
  2061                           tablat	equ	0xFF5
  2062                           prodl	equ	0xFF3
  2063                           intcon	equ	0xFF2
  2064                           postinc0	equ	0xFEE
  2065                           wreg	equ	0xFE8
  2066                           postdec1	equ	0xFE5
  2067                           fsr1l	equ	0xFE1
  2068                           status	equ	0xFD8
  2069                           
  2070 ;; *************** function _I2cBuffChk *****************
  2071 ;; Defined at:
  2072 ;;		line 304 in file "../myi2c.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  I2cDevice       1    wreg     unsigned char 
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;  I2cDevice       1    2[BANK0 ] unsigned char 
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  1    wreg      unsigned char 
  2079 ;; Registers used:
  2080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2087 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2088 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2090 ;;Total ram usage:        3 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    5
  2093 ;; This function calls:
  2094 ;;		Nothing
  2095 ;; This function is called by:
  2096 ;;		_main
  2097 ;;		_RtcWriteTime
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text8
  2102  002686                     __ptext8:
  2103                           	opt stack 0
  2104  002686                     _I2cBuffChk:
  2105                           	opt stack 24
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;incstack = 0
  2109                           ;I2cBuffChk@I2cDevice stored from wreg
  2110  002686  CFE8 F0AD          	movff	wreg,I2cBuffChk@I2cDevice
  2111                           
  2112                           ;myi2c.c: 306: return(!I2c[I2cDevice].Flag.Tx && !I2c[I2cDevice].Flag.Rx);
  2113  00268A  0100               	movlb	0	; () banked
  2114  00268C  6FAB               	movwf	??_I2cBuffChk& (0+255),b
  2115  00268E  0E00               	movlw	0
  2116  002690  0100               	movlb	0	; () banked
  2117  002692  0100               	movlb	0	; () banked
  2118  002694  6FAC               	movwf	_I2cBuffChk$1447& (0+255),b
  2119  002696  0100               	movlb	0	; () banked
  2120  002698  51AB               	movf	??_I2cBuffChk& (0+255),w,b
  2121                           
  2122                           ; BSR set to: 0
  2123  00269A  0100               	movlb	0	; () banked
  2124  00269C  0100               	movlb	0	; () banked
  2125  00269E  51AD               	movf	I2cBuffChk@I2cDevice& (0+255),w,b
  2126  0026A0  0D0A               	mullw	10
  2127  0026A2  0E56               	movlw	low _I2c
  2128  0026A4  24F3               	addwf	prodl,w,c
  2129  0026A6  6ED9               	movwf	fsr2l,c
  2130  0026A8  0E00               	movlw	high _I2c
  2131  0026AA  20F4               	addwfc	prodh,w,c
  2132  0026AC  6EDA               	movwf	fsr2h,c
  2133  0026AE  38DF               	swapf	indf2,w,c
  2134  0026B0  0B0F               	andlw	15
  2135  0026B2  0900               	iorlw	0
  2136  0026B4  A4D8               	btfss	status,2,c
  2137  0026B6  D017               	goto	l3087
  2138                           
  2139                           ; BSR set to: 0
  2140  0026B8  0100               	movlb	0	; () banked
  2141  0026BA  0100               	movlb	0	; () banked
  2142  0026BC  51AD               	movf	I2cBuffChk@I2cDevice& (0+255),w,b
  2143  0026BE  0D0A               	mullw	10
  2144  0026C0  0E56               	movlw	low _I2c
  2145  0026C2  24F3               	addwf	prodl,w,c
  2146  0026C4  6ED9               	movwf	fsr2l,c
  2147  0026C6  0E00               	movlw	high _I2c
  2148  0026C8  20F4               	addwfc	prodh,w,c
  2149  0026CA  6EDA               	movwf	fsr2h,c
  2150  0026CC  50DF               	movf	indf2,w,c
  2151  0026CE  0B0F               	andlw	15
  2152  0026D0  0900               	iorlw	0
  2153  0026D2  A4D8               	btfss	status,2,c
  2154  0026D4  D008               	goto	l3087
  2155                           
  2156                           ; BSR set to: 0
  2157  0026D6  0100               	movlb	0	; () banked
  2158  0026D8  6FAB               	movwf	??_I2cBuffChk& (0+255),b
  2159  0026DA  0E01               	movlw	1
  2160  0026DC  0100               	movlb	0	; () banked
  2161  0026DE  0100               	movlb	0	; () banked
  2162  0026E0  6FAC               	movwf	_I2cBuffChk$1447& (0+255),b
  2163  0026E2  0100               	movlb	0	; () banked
  2164  0026E4  51AB               	movf	??_I2cBuffChk& (0+255),w,b
  2165  0026E6                     l3087:
  2166                           
  2167                           ; BSR set to: 0
  2168  0026E6  0100               	movlb	0	; () banked
  2169  0026E8  0100               	movlb	0	; () banked
  2170  0026EA  51AC               	movf	_I2cBuffChk$1447& (0+255),w,b
  2171                           
  2172                           ; BSR set to: 0
  2173                           
  2174                           ; BSR set to: 0
  2175  0026EC  0012               	return	
  2176  0026EE                     __end_of_I2cBuffChk:
  2177                           	opt stack 0
  2178                           tblptru	equ	0xFF8
  2179                           tblptrh	equ	0xFF7
  2180                           tblptrl	equ	0xFF6
  2181                           tablat	equ	0xFF5
  2182                           prodh	equ	0xFF4
  2183                           prodl	equ	0xFF3
  2184                           intcon	equ	0xFF2
  2185                           postinc0	equ	0xFEE
  2186                           wreg	equ	0xFE8
  2187                           postdec1	equ	0xFE5
  2188                           fsr1l	equ	0xFE1
  2189                           indf2	equ	0xFDF
  2190                           fsr2h	equ	0xFDA
  2191                           fsr2l	equ	0xFD9
  2192                           status	equ	0xFD8
  2193                           
  2194 ;; *************** function _RtcReadTime *****************
  2195 ;; Defined at:
  2196 ;;		line 164 in file "../WordClock.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;		None
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;  Tens            1    1[BANK0 ] unsigned char 
  2201 ;;  Units           1    0[BANK0 ] unsigned char 
  2202 ;; Return value:  Size  Location     Type
  2203 ;;		None               void
  2204 ;; Registers used:
  2205 ;;		wreg, status,2, status,0, prodl, prodh
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2212 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2214 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2215 ;;Total ram usage:        2 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:    5
  2218 ;; This function calls:
  2219 ;;		Nothing
  2220 ;; This function is called by:
  2221 ;;		_main
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text9
  2226  002330                     __ptext9:
  2227                           	opt stack 0
  2228  002330                     _RtcReadTime:
  2229                           	opt stack 25
  2230                           
  2231                           ;WordClock.c: 168: unsigned char Units;
  2232                           ;WordClock.c: 169: unsigned char Tens;
  2233                           ;WordClock.c: 171: Units=I2c[0].RxBuff[0]&0b00001111;
  2234                           
  2235                           ; BSR set to: 0
  2236                           ;incstack = 0
  2237  002330  5058               	movf	_I2c+2,w,c
  2238  002332  0B0F               	andlw	15
  2239  002334  0100               	movlb	0	; () banked
  2240  002336  0100               	movlb	0	; () banked
  2241  002338  6FAB               	movwf	RtcReadTime@Units& (0+255),b
  2242                           
  2243                           ; BSR set to: 0
  2244                           ;WordClock.c: 172: Tens=((I2c[0].RxBuff[0]&0b01110000)>>4)*10;
  2245  00233A  3858               	swapf	_I2c+2,w,c
  2246  00233C  0B0F               	andlw	15
  2247  00233E  0B07               	andlw	7
  2248  002340  0D0A               	mullw	10
  2249  002342  CFF3 F0AC          	movff	prodl,RtcReadTime@Tens
  2250                           
  2251                           ; BSR set to: 0
  2252                           ;WordClock.c: 173: Sec=Units + Tens;
  2253  002346  0100               	movlb	0	; () banked
  2254  002348  0100               	movlb	0	; () banked
  2255  00234A  51AB               	movf	RtcReadTime@Units& (0+255),w,b
  2256  00234C  0100               	movlb	0	; () banked
  2257  00234E  0100               	movlb	0	; () banked
  2258  002350  25AC               	addwf	RtcReadTime@Tens& (0+255),w,b
  2259  002352  0100               	movlb	0	; () banked
  2260  002354  0100               	movlb	0	; () banked
  2261  002356  6F84               	movwf	_Sec& (0+255),b
  2262  002358  0100               	movlb	0	; () banked
  2263  00235A  6B85               	clrf	(_Sec+1)& (0+255),b
  2264  00235C  0100               	movlb	0	; () banked
  2265  00235E  3785               	rlcf	(_Sec+1)& (0+255),f,b
  2266                           
  2267                           ; BSR set to: 0
  2268                           ;WordClock.c: 175: Units=I2c[0].RxBuff[1]&0b00001111;
  2269  002360  5059               	movf	_I2c+3,w,c
  2270  002362  0B0F               	andlw	15
  2271  002364  0100               	movlb	0	; () banked
  2272  002366  0100               	movlb	0	; () banked
  2273  002368  6FAB               	movwf	RtcReadTime@Units& (0+255),b
  2274                           
  2275                           ; BSR set to: 0
  2276                           ;WordClock.c: 176: Tens=((I2c[0].RxBuff[1]&0b01110000)>>4)*10;
  2277  00236A  3859               	swapf	_I2c+3,w,c
  2278  00236C  0B0F               	andlw	15
  2279  00236E  0B07               	andlw	7
  2280  002370  0D0A               	mullw	10
  2281  002372  CFF3 F0AC          	movff	prodl,RtcReadTime@Tens
  2282                           
  2283                           ;WordClock.c: 177: Min=Units + Tens;
  2284  002376  0100               	movlb	0	; () banked
  2285  002378  0100               	movlb	0	; () banked
  2286  00237A  51AB               	movf	RtcReadTime@Units& (0+255),w,b
  2287  00237C  0100               	movlb	0	; () banked
  2288  00237E  0100               	movlb	0	; () banked
  2289  002380  25AC               	addwf	RtcReadTime@Tens& (0+255),w,b
  2290  002382  0100               	movlb	0	; () banked
  2291  002384  0100               	movlb	0	; () banked
  2292  002386  6F82               	movwf	_Min& (0+255),b
  2293  002388  0100               	movlb	0	; () banked
  2294  00238A  6B83               	clrf	(_Min+1)& (0+255),b
  2295  00238C  0100               	movlb	0	; () banked
  2296  00238E  3783               	rlcf	(_Min+1)& (0+255),f,b
  2297                           
  2298                           ;WordClock.c: 179: Units=I2c[0].RxBuff[2]&0b00001111;
  2299  002390  505A               	movf	_I2c+4,w,c
  2300  002392  0B0F               	andlw	15
  2301  002394  0100               	movlb	0	; () banked
  2302  002396  0100               	movlb	0	; () banked
  2303  002398  6FAB               	movwf	RtcReadTime@Units& (0+255),b
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;WordClock.c: 180: Tens=((I2c[0].RxBuff[2]&0b00010000)>>4)*10;
  2307  00239A  385A               	swapf	_I2c+4,w,c
  2308  00239C  0B0F               	andlw	15
  2309  00239E  0B01               	andlw	1
  2310  0023A0  0D0A               	mullw	10
  2311  0023A2  CFF3 F0AC          	movff	prodl,RtcReadTime@Tens
  2312                           
  2313                           ; BSR set to: 0
  2314                           ;WordClock.c: 181: Hour=Units + Tens;
  2315  0023A6  0100               	movlb	0	; () banked
  2316  0023A8  0100               	movlb	0	; () banked
  2317  0023AA  51AB               	movf	RtcReadTime@Units& (0+255),w,b
  2318  0023AC  0100               	movlb	0	; () banked
  2319  0023AE  0100               	movlb	0	; () banked
  2320  0023B0  25AC               	addwf	RtcReadTime@Tens& (0+255),w,b
  2321  0023B2  0100               	movlb	0	; () banked
  2322  0023B4  0100               	movlb	0	; () banked
  2323  0023B6  6F80               	movwf	_Hour& (0+255),b
  2324  0023B8  0100               	movlb	0	; () banked
  2325  0023BA  6B81               	clrf	(_Hour+1)& (0+255),b
  2326  0023BC  0100               	movlb	0	; () banked
  2327  0023BE  3781               	rlcf	(_Hour+1)& (0+255),f,b
  2328                           
  2329                           ; BSR set to: 0
  2330  0023C0  0012               	return	
  2331  0023C2                     __end_of_RtcReadTime:
  2332                           	opt stack 0
  2333                           tblptru	equ	0xFF8
  2334                           tblptrh	equ	0xFF7
  2335                           tblptrl	equ	0xFF6
  2336                           tablat	equ	0xFF5
  2337                           prodh	equ	0xFF4
  2338                           prodl	equ	0xFF3
  2339                           intcon	equ	0xFF2
  2340                           postinc0	equ	0xFEE
  2341                           wreg	equ	0xFE8
  2342                           postdec1	equ	0xFE5
  2343                           fsr1l	equ	0xFE1
  2344                           indf2	equ	0xFDF
  2345                           fsr2h	equ	0xFDA
  2346                           fsr2l	equ	0xFD9
  2347                           status	equ	0xFD8
  2348                           
  2349 ;; *************** function _RtcInit *****************
  2350 ;; Defined at:
  2351 ;;		line 128 in file "../settings.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;		None
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;  Tmp             1   14[BANK0 ] unsigned char 
  2356 ;; Return value:  Size  Location     Type
  2357 ;;		None               void
  2358 ;; Registers used:
  2359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2366 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2367 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2368 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;Total ram usage:        7 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; Hardware stack levels required when called:    7
  2372 ;; This function calls:
  2373 ;;		_I2cData
  2374 ;;		_I2cService
  2375 ;; This function is called by:
  2376 ;;		_main
  2377 ;; This function uses a non-reentrant model
  2378 ;;
  2379                           
  2380                           	psect	text10
  2381  00174E                     __ptext10:
  2382                           	opt stack 0
  2383  00174E                     _RtcInit:
  2384                           	opt stack 23
  2385                           
  2386                           ;settings.c: 134: unsigned char Tmp;
  2387                           ;settings.c: 135: I2cAdr[0] = 0xD0;
  2388                           
  2389                           ; BSR set to: 0
  2390                           ;incstack = 0
  2391  00174E  0100               	movlb	0	; () banked
  2392  001750  6FB3               	movwf	??_RtcInit& (0+255),b
  2393  001752  0ED0               	movlw	208
  2394  001754  6E48               	movwf	_I2cAdr,c
  2395  001756  0100               	movlb	0	; () banked
  2396  001758  51B3               	movf	??_RtcInit& (0+255),w,b
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;settings.c: 141: I2cData(0, 2, 7, 0b00010000, 0, 0, 0);
  2400  00175A  0100               	movlb	0	; () banked
  2401  00175C  6FB3               	movwf	??_RtcInit& (0+255),b
  2402  00175E  0E02               	movlw	2
  2403  001760  0100               	movlb	0	; () banked
  2404  001762  0100               	movlb	0	; () banked
  2405  001764  6FAB               	movwf	I2cData@TxBytes& (0+255),b
  2406  001766  0100               	movlb	0	; () banked
  2407  001768  51B3               	movf	??_RtcInit& (0+255),w,b
  2408  00176A  0100               	movlb	0	; () banked
  2409  00176C  6FB4               	movwf	(??_RtcInit+1)& (0+255),b
  2410  00176E  0E07               	movlw	7
  2411  001770  0100               	movlb	0	; () banked
  2412  001772  0100               	movlb	0	; () banked
  2413  001774  6FAC               	movwf	I2cData@TX1& (0+255),b
  2414  001776  0100               	movlb	0	; () banked
  2415  001778  51B4               	movf	(??_RtcInit+1)& (0+255),w,b
  2416  00177A  0100               	movlb	0	; () banked
  2417  00177C  6FB5               	movwf	(??_RtcInit+2)& (0+255),b
  2418  00177E  0E10               	movlw	16
  2419  001780  0100               	movlb	0	; () banked
  2420  001782  0100               	movlb	0	; () banked
  2421  001784  6FAD               	movwf	I2cData@TX2& (0+255),b
  2422  001786  0100               	movlb	0	; () banked
  2423  001788  51B5               	movf	(??_RtcInit+2)& (0+255),w,b
  2424  00178A  0100               	movlb	0	; () banked
  2425  00178C  6FB6               	movwf	(??_RtcInit+3)& (0+255),b
  2426  00178E  0E00               	movlw	0
  2427  001790  0100               	movlb	0	; () banked
  2428  001792  0100               	movlb	0	; () banked
  2429  001794  6FAE               	movwf	I2cData@TX3& (0+255),b
  2430  001796  0100               	movlb	0	; () banked
  2431  001798  51B6               	movf	(??_RtcInit+3)& (0+255),w,b
  2432  00179A  0100               	movlb	0	; () banked
  2433  00179C  6FB7               	movwf	(??_RtcInit+4)& (0+255),b
  2434  00179E  0E00               	movlw	0
  2435  0017A0  0100               	movlb	0	; () banked
  2436  0017A2  0100               	movlb	0	; () banked
  2437  0017A4  6FAF               	movwf	I2cData@TX4& (0+255),b
  2438  0017A6  0100               	movlb	0	; () banked
  2439  0017A8  51B7               	movf	(??_RtcInit+4)& (0+255),w,b
  2440  0017AA  0100               	movlb	0	; () banked
  2441  0017AC  6FB8               	movwf	(??_RtcInit+5)& (0+255),b
  2442  0017AE  0E00               	movlw	0
  2443  0017B0  0100               	movlb	0	; () banked
  2444  0017B2  0100               	movlb	0	; () banked
  2445  0017B4  6FB0               	movwf	I2cData@RxBytes& (0+255),b
  2446  0017B6  0100               	movlb	0	; () banked
  2447  0017B8  51B8               	movf	(??_RtcInit+5)& (0+255),w,b
  2448  0017BA  0E00               	movlw	0
  2449  0017BC  ECB6  F00F         	call	_I2cData
  2450                           
  2451                           ;settings.c: 142: while(I2c[0].Done != 1)
  2452  0017C0  D002               	goto	l3225
  2453  0017C2                     l3223:
  2454                           
  2455                           ;settings.c: 143: {
  2456                           ;settings.c: 144: I2cService();
  2457  0017C2  EC0D  F014         	call	_I2cService	;wreg free
  2458  0017C6                     l3225:
  2459  0017C6  0457               	decf	_I2c+1,w,c
  2460  0017C8  A4D8               	btfss	status,2,c
  2461  0017CA  D7FB               	goto	l3223
  2462                           
  2463                           ;settings.c: 145: }
  2464                           ;settings.c: 147: I2cData(0, 1, 0, 0, 0, 0, 1);
  2465  0017CC  0100               	movlb	0	; () banked
  2466  0017CE  6FB3               	movwf	??_RtcInit& (0+255),b
  2467  0017D0  0E01               	movlw	1
  2468  0017D2  0100               	movlb	0	; () banked
  2469  0017D4  0100               	movlb	0	; () banked
  2470  0017D6  6FAB               	movwf	I2cData@TxBytes& (0+255),b
  2471  0017D8  0100               	movlb	0	; () banked
  2472  0017DA  51B3               	movf	??_RtcInit& (0+255),w,b
  2473  0017DC  0100               	movlb	0	; () banked
  2474  0017DE  6FB4               	movwf	(??_RtcInit+1)& (0+255),b
  2475  0017E0  0E00               	movlw	0
  2476  0017E2  0100               	movlb	0	; () banked
  2477  0017E4  0100               	movlb	0	; () banked
  2478  0017E6  6FAC               	movwf	I2cData@TX1& (0+255),b
  2479  0017E8  0100               	movlb	0	; () banked
  2480  0017EA  51B4               	movf	(??_RtcInit+1)& (0+255),w,b
  2481  0017EC  0100               	movlb	0	; () banked
  2482  0017EE  6FB5               	movwf	(??_RtcInit+2)& (0+255),b
  2483  0017F0  0E00               	movlw	0
  2484  0017F2  0100               	movlb	0	; () banked
  2485  0017F4  0100               	movlb	0	; () banked
  2486  0017F6  6FAD               	movwf	I2cData@TX2& (0+255),b
  2487  0017F8  0100               	movlb	0	; () banked
  2488  0017FA  51B5               	movf	(??_RtcInit+2)& (0+255),w,b
  2489  0017FC  0100               	movlb	0	; () banked
  2490  0017FE  6FB6               	movwf	(??_RtcInit+3)& (0+255),b
  2491  001800  0E00               	movlw	0
  2492  001802  0100               	movlb	0	; () banked
  2493  001804  0100               	movlb	0	; () banked
  2494  001806  6FAE               	movwf	I2cData@TX3& (0+255),b
  2495  001808  0100               	movlb	0	; () banked
  2496  00180A  51B6               	movf	(??_RtcInit+3)& (0+255),w,b
  2497  00180C  0100               	movlb	0	; () banked
  2498  00180E  6FB7               	movwf	(??_RtcInit+4)& (0+255),b
  2499  001810  0E00               	movlw	0
  2500  001812  0100               	movlb	0	; () banked
  2501  001814  0100               	movlb	0	; () banked
  2502  001816  6FAF               	movwf	I2cData@TX4& (0+255),b
  2503  001818  0100               	movlb	0	; () banked
  2504  00181A  51B7               	movf	(??_RtcInit+4)& (0+255),w,b
  2505  00181C  0100               	movlb	0	; () banked
  2506  00181E  6FB8               	movwf	(??_RtcInit+5)& (0+255),b
  2507  001820  0E01               	movlw	1
  2508  001822  0100               	movlb	0	; () banked
  2509  001824  0100               	movlb	0	; () banked
  2510  001826  6FB0               	movwf	I2cData@RxBytes& (0+255),b
  2511  001828  0100               	movlb	0	; () banked
  2512  00182A  51B8               	movf	(??_RtcInit+5)& (0+255),w,b
  2513  00182C  0E00               	movlw	0
  2514  00182E  ECB6  F00F         	call	_I2cData
  2515                           
  2516                           ;settings.c: 148: while(I2c[0].Done != 1)
  2517  001832  D002               	goto	l3231
  2518  001834                     l3229:
  2519                           
  2520                           ;settings.c: 149: {
  2521                           ;settings.c: 150: I2cService();
  2522  001834  EC0D  F014         	call	_I2cService	;wreg free
  2523  001838                     l3231:
  2524  001838  0457               	decf	_I2c+1,w,c
  2525  00183A  A4D8               	btfss	status,2,c
  2526  00183C  D7FB               	goto	l3229
  2527                           
  2528                           ;settings.c: 151: }
  2529                           ;settings.c: 153: Tmp = I2c[0].RxBuff[0] & 0b01111111;
  2530  00183E  5058               	movf	_I2c+2,w,c
  2531  001840  0B7F               	andlw	127
  2532  001842  0100               	movlb	0	; () banked
  2533  001844  0100               	movlb	0	; () banked
  2534  001846  6FB9               	movwf	RtcInit@Tmp& (0+255),b
  2535                           
  2536                           ; BSR set to: 0
  2537                           ;settings.c: 155: I2cData(0, 1, 2, 0, 0, 0, 1);
  2538  001848  0100               	movlb	0	; () banked
  2539  00184A  6FB3               	movwf	??_RtcInit& (0+255),b
  2540  00184C  0E01               	movlw	1
  2541  00184E  0100               	movlb	0	; () banked
  2542  001850  0100               	movlb	0	; () banked
  2543  001852  6FAB               	movwf	I2cData@TxBytes& (0+255),b
  2544  001854  0100               	movlb	0	; () banked
  2545  001856  51B3               	movf	??_RtcInit& (0+255),w,b
  2546  001858  0100               	movlb	0	; () banked
  2547  00185A  6FB4               	movwf	(??_RtcInit+1)& (0+255),b
  2548  00185C  0E02               	movlw	2
  2549  00185E  0100               	movlb	0	; () banked
  2550  001860  0100               	movlb	0	; () banked
  2551  001862  6FAC               	movwf	I2cData@TX1& (0+255),b
  2552  001864  0100               	movlb	0	; () banked
  2553  001866  51B4               	movf	(??_RtcInit+1)& (0+255),w,b
  2554  001868  0100               	movlb	0	; () banked
  2555  00186A  6FB5               	movwf	(??_RtcInit+2)& (0+255),b
  2556  00186C  0E00               	movlw	0
  2557  00186E  0100               	movlb	0	; () banked
  2558  001870  0100               	movlb	0	; () banked
  2559  001872  6FAD               	movwf	I2cData@TX2& (0+255),b
  2560  001874  0100               	movlb	0	; () banked
  2561  001876  51B5               	movf	(??_RtcInit+2)& (0+255),w,b
  2562  001878  0100               	movlb	0	; () banked
  2563  00187A  6FB6               	movwf	(??_RtcInit+3)& (0+255),b
  2564  00187C  0E00               	movlw	0
  2565  00187E  0100               	movlb	0	; () banked
  2566  001880  0100               	movlb	0	; () banked
  2567  001882  6FAE               	movwf	I2cData@TX3& (0+255),b
  2568  001884  0100               	movlb	0	; () banked
  2569  001886  51B6               	movf	(??_RtcInit+3)& (0+255),w,b
  2570  001888  0100               	movlb	0	; () banked
  2571  00188A  6FB7               	movwf	(??_RtcInit+4)& (0+255),b
  2572  00188C  0E00               	movlw	0
  2573  00188E  0100               	movlb	0	; () banked
  2574  001890  0100               	movlb	0	; () banked
  2575  001892  6FAF               	movwf	I2cData@TX4& (0+255),b
  2576  001894  0100               	movlb	0	; () banked
  2577  001896  51B7               	movf	(??_RtcInit+4)& (0+255),w,b
  2578  001898  0100               	movlb	0	; () banked
  2579  00189A  6FB8               	movwf	(??_RtcInit+5)& (0+255),b
  2580  00189C  0E01               	movlw	1
  2581  00189E  0100               	movlb	0	; () banked
  2582  0018A0  0100               	movlb	0	; () banked
  2583  0018A2  6FB0               	movwf	I2cData@RxBytes& (0+255),b
  2584  0018A4  0100               	movlb	0	; () banked
  2585  0018A6  51B8               	movf	(??_RtcInit+5)& (0+255),w,b
  2586  0018A8  0E00               	movlw	0
  2587  0018AA  ECB6  F00F         	call	_I2cData
  2588                           
  2589                           ;settings.c: 156: while(I2c[0].Done != 1)
  2590  0018AE  D002               	goto	l3239
  2591  0018B0                     l3237:
  2592                           
  2593                           ;settings.c: 157: {
  2594                           ;settings.c: 158: I2cService();
  2595  0018B0  EC0D  F014         	call	_I2cService	;wreg free
  2596  0018B4                     l3239:
  2597  0018B4  0457               	decf	_I2c+1,w,c
  2598  0018B6  A4D8               	btfss	status,2,c
  2599  0018B8  D7FB               	goto	l3237
  2600                           
  2601                           ;settings.c: 159: }
  2602                           ;settings.c: 161: Tmp = I2c[0].RxBuff[0] | 0b01000000;
  2603  0018BA  5058               	movf	_I2c+2,w,c
  2604  0018BC  0940               	iorlw	64
  2605  0018BE  0100               	movlb	0	; () banked
  2606  0018C0  0100               	movlb	0	; () banked
  2607  0018C2  6FB9               	movwf	RtcInit@Tmp& (0+255),b
  2608                           
  2609                           ; BSR set to: 0
  2610                           ;settings.c: 163: I2cData(0, 2, 2, Tmp, 0, 0, 0);
  2611  0018C4  0100               	movlb	0	; () banked
  2612  0018C6  6FB3               	movwf	??_RtcInit& (0+255),b
  2613  0018C8  0E02               	movlw	2
  2614  0018CA  0100               	movlb	0	; () banked
  2615  0018CC  0100               	movlb	0	; () banked
  2616  0018CE  6FAB               	movwf	I2cData@TxBytes& (0+255),b
  2617  0018D0  0100               	movlb	0	; () banked
  2618  0018D2  51B3               	movf	??_RtcInit& (0+255),w,b
  2619  0018D4  0100               	movlb	0	; () banked
  2620  0018D6  6FB4               	movwf	(??_RtcInit+1)& (0+255),b
  2621  0018D8  0E02               	movlw	2
  2622  0018DA  0100               	movlb	0	; () banked
  2623  0018DC  0100               	movlb	0	; () banked
  2624  0018DE  6FAC               	movwf	I2cData@TX1& (0+255),b
  2625  0018E0  0100               	movlb	0	; () banked
  2626  0018E2  51B4               	movf	(??_RtcInit+1)& (0+255),w,b
  2627  0018E4  C0B9  F0AD         	movff	RtcInit@Tmp,I2cData@TX2
  2628  0018E8  0100               	movlb	0	; () banked
  2629  0018EA  6FB5               	movwf	(??_RtcInit+2)& (0+255),b
  2630  0018EC  0E00               	movlw	0
  2631  0018EE  0100               	movlb	0	; () banked
  2632  0018F0  0100               	movlb	0	; () banked
  2633  0018F2  6FAE               	movwf	I2cData@TX3& (0+255),b
  2634  0018F4  0100               	movlb	0	; () banked
  2635  0018F6  51B5               	movf	(??_RtcInit+2)& (0+255),w,b
  2636  0018F8  0100               	movlb	0	; () banked
  2637  0018FA  6FB6               	movwf	(??_RtcInit+3)& (0+255),b
  2638  0018FC  0E00               	movlw	0
  2639  0018FE  0100               	movlb	0	; () banked
  2640  001900  0100               	movlb	0	; () banked
  2641  001902  6FAF               	movwf	I2cData@TX4& (0+255),b
  2642  001904  0100               	movlb	0	; () banked
  2643  001906  51B6               	movf	(??_RtcInit+3)& (0+255),w,b
  2644  001908  0100               	movlb	0	; () banked
  2645  00190A  6FB7               	movwf	(??_RtcInit+4)& (0+255),b
  2646  00190C  0E00               	movlw	0
  2647  00190E  0100               	movlb	0	; () banked
  2648  001910  0100               	movlb	0	; () banked
  2649  001912  6FB0               	movwf	I2cData@RxBytes& (0+255),b
  2650  001914  0100               	movlb	0	; () banked
  2651  001916  51B7               	movf	(??_RtcInit+4)& (0+255),w,b
  2652  001918  0E00               	movlw	0
  2653  00191A  ECB6  F00F         	call	_I2cData
  2654                           
  2655                           ;settings.c: 164: while(I2c[0].Done != 1)
  2656  00191E  D002               	goto	l3247
  2657  001920                     l3245:
  2658                           
  2659                           ;settings.c: 165: {
  2660                           ;settings.c: 166: I2cService();
  2661  001920  EC0D  F014         	call	_I2cService	;wreg free
  2662  001924                     l3247:
  2663  001924  0457               	decf	_I2c+1,w,c
  2664  001926  B4D8               	btfsc	status,2,c
  2665  001928  0012               	return	
  2666  00192A  D7FA               	goto	l3245
  2667  00192C                     __end_of_RtcInit:
  2668                           	opt stack 0
  2669                           tblptru	equ	0xFF8
  2670                           tblptrh	equ	0xFF7
  2671                           tblptrl	equ	0xFF6
  2672                           tablat	equ	0xFF5
  2673                           prodh	equ	0xFF4
  2674                           prodl	equ	0xFF3
  2675                           intcon	equ	0xFF2
  2676                           postinc0	equ	0xFEE
  2677                           wreg	equ	0xFE8
  2678                           postdec1	equ	0xFE5
  2679                           fsr1l	equ	0xFE1
  2680                           indf2	equ	0xFDF
  2681                           fsr2h	equ	0xFDA
  2682                           fsr2l	equ	0xFD9
  2683                           status	equ	0xFD8
  2684                           
  2685 ;; *************** function _I2cService *****************
  2686 ;; Defined at:
  2687 ;;		line 259 in file "../myi2c.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;		None
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;		None
  2692 ;; Return value:  Size  Location     Type
  2693 ;;		None               void
  2694 ;; Registers used:
  2695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2703 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2704 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2705 ;;Total ram usage:        1 bytes
  2706 ;; Hardware stack levels used:    1
  2707 ;; Hardware stack levels required when called:    6
  2708 ;; This function calls:
  2709 ;;		_I2cHighService
  2710 ;;		_I2cLowService
  2711 ;; This function is called by:
  2712 ;;		_RtcInit
  2713 ;;		_main
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           	psect	text11
  2718  00281A                     __ptext11:
  2719                           	opt stack 0
  2720  00281A                     _I2cService:
  2721                           	opt stack 23
  2722                           
  2723                           ;myi2c.c: 261: if (I2cEventFlag)
  2724                           
  2725                           ;incstack = 0
  2726  00281A  504C               	movf	_I2cEventFlag,w,c
  2727  00281C  B4D8               	btfsc	status,2,c
  2728  00281E  D003               	goto	l3065
  2729                           
  2730                           ;myi2c.c: 264: {
  2731                           ;myi2c.c: 265: I2cLowService();
  2732  002820  EC0D  F008         	call	_I2cLowService	;wreg free
  2733                           
  2734                           ;myi2c.c: 267: }
  2735  002824  D026               	goto	l363
  2736  002826                     l3065:
  2737                           
  2738                           ;myi2c.c: 268: else
  2739                           ;myi2c.c: 269: {
  2740                           ;myi2c.c: 270: if (I2cBusyFlag)
  2741  002826  504A               	movf	_I2cBusyFlag,w,c
  2742  002828  A4D8               	btfss	status,2,c
  2743  00282A  D023               	goto	l363
  2744                           
  2745                           ;myi2c.c: 277: else
  2746                           ;myi2c.c: 278: {
  2747                           ;myi2c.c: 279: if ((I2c[I2cDevPtr].Flag.Rx > 0) || (I2c[I2cDevPtr].Flag.Tx > 0))
  2748                           
  2749                           ;myi2c.c: 273: {
  2750                           ;myi2c.c: 275: }
  2751  00282C  504B               	movf	_I2cDevPtr,w,c
  2752  00282E  0D0A               	mullw	10
  2753  002830  0E56               	movlw	low _I2c
  2754  002832  24F3               	addwf	prodl,w,c
  2755  002834  6ED9               	movwf	fsr2l,c
  2756  002836  0E00               	movlw	high _I2c
  2757  002838  20F4               	addwfc	prodh,w,c
  2758  00283A  6EDA               	movwf	fsr2h,c
  2759  00283C  50DF               	movf	indf2,w,c
  2760  00283E  0B0F               	andlw	15
  2761  002840  0900               	iorlw	0
  2762  002842  A4D8               	btfss	status,2,c
  2763  002844  D00D               	goto	l3073
  2764  002846  504B               	movf	_I2cDevPtr,w,c
  2765  002848  0D0A               	mullw	10
  2766  00284A  0E56               	movlw	low _I2c
  2767  00284C  24F3               	addwf	prodl,w,c
  2768  00284E  6ED9               	movwf	fsr2l,c
  2769  002850  0E00               	movlw	high _I2c
  2770  002852  20F4               	addwfc	prodh,w,c
  2771  002854  6EDA               	movwf	fsr2h,c
  2772  002856  38DF               	swapf	indf2,w,c
  2773  002858  0B0F               	andlw	15
  2774  00285A  0900               	iorlw	0
  2775  00285C  B4D8               	btfsc	status,2,c
  2776  00285E  D003               	goto	l3077
  2777  002860                     l3073:
  2778                           
  2779                           ;myi2c.c: 281: {
  2780                           ;myi2c.c: 282: I2cHighService();
  2781  002860  EC26  F012         	call	_I2cHighService	;wreg free
  2782                           
  2783                           ;myi2c.c: 285: }
  2784  002864  D006               	goto	l363
  2785  002866                     l3077:
  2786                           
  2787                           ;myi2c.c: 295: else
  2788                           ;myi2c.c: 296: {
  2789                           ;myi2c.c: 297: I2cDevPtr = 0;
  2790  002866  0100               	movlb	0	; () banked
  2791  002868  6FAF               	movwf	??_I2cService& (0+255),b
  2792  00286A  0E00               	movlw	0
  2793  00286C  6E4B               	movwf	_I2cDevPtr,c
  2794  00286E  0100               	movlb	0	; () banked
  2795  002870  51AF               	movf	??_I2cService& (0+255),w,b
  2796  002872                     l363:
  2797  002872  0012               	return	
  2798  002874                     __end_of_I2cService:
  2799                           	opt stack 0
  2800                           tblptru	equ	0xFF8
  2801                           tblptrh	equ	0xFF7
  2802                           tblptrl	equ	0xFF6
  2803                           tablat	equ	0xFF5
  2804                           prodh	equ	0xFF4
  2805                           prodl	equ	0xFF3
  2806                           intcon	equ	0xFF2
  2807                           postinc0	equ	0xFEE
  2808                           wreg	equ	0xFE8
  2809                           postdec1	equ	0xFE5
  2810                           fsr1l	equ	0xFE1
  2811                           indf2	equ	0xFDF
  2812                           fsr2h	equ	0xFDA
  2813                           fsr2l	equ	0xFD9
  2814                           status	equ	0xFD8
  2815                           
  2816 ;; *************** function _I2cLowService *****************
  2817 ;; Defined at:
  2818 ;;		line 118 in file "../myi2c.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;		None
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;		None
  2823 ;; Return value:  Size  Location     Type
  2824 ;;		None               void
  2825 ;; Registers used:
  2826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2835 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;Total ram usage:        4 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; Hardware stack levels required when called:    5
  2839 ;; This function calls:
  2840 ;;		Nothing
  2841 ;; This function is called by:
  2842 ;;		_I2cService
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           	psect	text12
  2847  00101A                     __ptext12:
  2848                           	opt stack 0
  2849  00101A                     _I2cLowService:
  2850                           	opt stack 23
  2851                           
  2852                           ;myi2c.c: 120: I2cEventFlag=0;
  2853                           
  2854                           ;incstack = 0
  2855  00101A  0100               	movlb	0	; () banked
  2856  00101C  6FAB               	movwf	??_I2cLowService& (0+255),b
  2857  00101E  0E00               	movlw	0
  2858  001020  6E4C               	movwf	_I2cEventFlag,c
  2859  001022  0100               	movlb	0	; () banked
  2860  001024  51AB               	movf	??_I2cLowService& (0+255),w,b
  2861                           
  2862                           ; BSR set to: 0
  2863                           ;myi2c.c: 122: if (I2cBusCollFlag || SSPCON2bits.ACKSTAT)
  2864  001026  6649               	tstfsz	_I2cBusCollFlag,c
  2865  001028  D002               	goto	l2949
  2866                           
  2867                           ; BSR set to: 0
  2868  00102A  ACC5               	btfss	4037,6,c	;volatile
  2869  00102C  D170               	goto	l3023
  2870  00102E                     l2949:
  2871                           
  2872                           ; BSR set to: 0
  2873                           ;myi2c.c: 123: {
  2874                           ;myi2c.c: 124: I2cBusCollFlag = 0;
  2875  00102E  0100               	movlb	0	; () banked
  2876  001030  6FAB               	movwf	??_I2cLowService& (0+255),b
  2877  001032  0E00               	movlw	0
  2878  001034  6E49               	movwf	_I2cBusCollFlag,c
  2879  001036  0100               	movlb	0	; () banked
  2880  001038  51AB               	movf	??_I2cLowService& (0+255),w,b
  2881                           
  2882                           ;myi2c.c: 125: I2cStat = FINE;
  2883  00103A  0100               	movlb	0	; () banked
  2884  00103C  6FAB               	movwf	??_I2cLowService& (0+255),b
  2885  00103E  0E08               	movlw	8
  2886  001040  6E4D               	movwf	_I2cStat,c
  2887  001042  0100               	movlb	0	; () banked
  2888  001044  51AB               	movf	??_I2cLowService& (0+255),w,b
  2889                           
  2890                           ; BSR set to: 0
  2891                           ;myi2c.c: 126: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  2892  001046  84C5               	bsf	4037,2,c	;volatile
  2893  001048                     l308:
  2894  001048  A4C5               	btfss	4037,2,c	;volatile
  2895  00104A  D17D               	goto	l344
  2896  00104C  D7FD               	goto	l308
  2897  00104E                     l2953:
  2898                           
  2899                           ;myi2c.c: 137: if (I2c[I2cDevPtr].Flag.Tx > 0)
  2900  00104E  504B               	movf	_I2cDevPtr,w,c
  2901  001050  0D0A               	mullw	10
  2902  001052  0E56               	movlw	low _I2c
  2903  001054  24F3               	addwf	prodl,w,c
  2904  001056  6ED9               	movwf	fsr2l,c
  2905  001058  0E00               	movlw	high _I2c
  2906  00105A  20F4               	addwfc	prodh,w,c
  2907  00105C  6EDA               	movwf	fsr2h,c
  2908  00105E  38DF               	swapf	indf2,w,c
  2909  001060  0B0F               	andlw	15
  2910  001062  0900               	iorlw	0
  2911  001064  B4D8               	btfsc	status,2,c
  2912  001066  D108               	goto	l3005
  2913                           
  2914                           ;myi2c.c: 138: {
  2915                           ;myi2c.c: 139: I2cStat = WRITE;
  2916  001068  0100               	movlb	0	; () banked
  2917  00106A  6FAB               	movwf	??_I2cLowService& (0+255),b
  2918  00106C  0E01               	movlw	1
  2919  00106E  6E4D               	movwf	_I2cStat,c
  2920  001070  0100               	movlb	0	; () banked
  2921  001072  51AB               	movf	??_I2cLowService& (0+255),w,b
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;myi2c.c: 140: SSPBUF = I2cAdr[I2cDevPtr];
  2925  001074  504B               	movf	_I2cDevPtr,w,c
  2926  001076  0D01               	mullw	1
  2927  001078  0E48               	movlw	low _I2cAdr
  2928  00107A  24F3               	addwf	prodl,w,c
  2929  00107C  6ED9               	movwf	fsr2l,c
  2930  00107E  0E00               	movlw	high _I2cAdr
  2931  001080  20F4               	addwfc	prodh,w,c
  2932  001082  6EDA               	movwf	fsr2h,c
  2933  001084  50DF               	movf	indf2,w,c
  2934  001086                     L1:
  2935  001086  6EC9               	movwf	4041,c	;volatile
  2936  001088  D15E               	goto	l344
  2937  00108A                     l2963:
  2938                           
  2939                           ;myi2c.c: 156: SSPBUF = I2c[I2cDevPtr].TxBuff[Ptr.Tx];
  2940  00108A  384E               	swapf	_Ptr,w,c
  2941  00108C  0B0F               	andlw	15
  2942  00108E  0100               	movlb	0	; () banked
  2943  001090  6FAB               	movwf	??_I2cLowService& (0+255),b
  2944  001092  0100               	movlb	0	; () banked
  2945  001094  51AB               	movf	??_I2cLowService& (0+255),w,b
  2946  001096  0D01               	mullw	1
  2947  001098  0E06               	movlw	6
  2948  00109A  26F3               	addwf	prodl,f,c
  2949  00109C  0E00               	movlw	0
  2950  00109E  22F4               	addwfc	prodh,f,c
  2951  0010A0  0E56               	movlw	low _I2c
  2952  0010A2  0100               	movlb	0	; () banked
  2953  0010A4  6FAC               	movwf	(??_I2cLowService+1)& (0+255),b
  2954  0010A6  0E00               	movlw	high _I2c
  2955  0010A8  6FAD               	movwf	(??_I2cLowService+2)& (0+255),b
  2956  0010AA  50F3               	movf	prodl,w,c
  2957  0010AC  0100               	movlb	0	; () banked
  2958  0010AE  27AC               	addwf	(??_I2cLowService+1)& (0+255),f,b
  2959  0010B0  50F4               	movf	prodh,w,c
  2960  0010B2  0100               	movlb	0	; () banked
  2961  0010B4  23AD               	addwfc	(??_I2cLowService+2)& (0+255),f,b
  2962  0010B6  504B               	movf	_I2cDevPtr,w,c
  2963  0010B8  0D0A               	mullw	10
  2964  0010BA  50F3               	movf	prodl,w,c
  2965  0010BC  0100               	movlb	0	; () banked
  2966  0010BE  25AC               	addwf	(??_I2cLowService+1)& (0+255),w,b
  2967  0010C0  6ED9               	movwf	fsr2l,c
  2968  0010C2  50F4               	movf	prodh,w,c
  2969  0010C4  0100               	movlb	0	; () banked
  2970  0010C6  21AD               	addwfc	(??_I2cLowService+2)& (0+255),w,b
  2971  0010C8  6EDA               	movwf	fsr2h,c
  2972  0010CA  50DF               	movf	indf2,w,c
  2973  0010CC  6EC9               	movwf	4041,c	;volatile
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;myi2c.c: 157: Ptr.Tx ++;
  2977  0010CE  0E01               	movlw	1
  2978  0010D0  0100               	movlb	0	; () banked
  2979  0010D2  6FAB               	movwf	??_I2cLowService& (0+255),b
  2980  0010D4  384E               	swapf	_Ptr,w,c
  2981  0010D6  0B0F               	andlw	15
  2982  0010D8  0100               	movlb	0	; () banked
  2983  0010DA  6FAC               	movwf	(??_I2cLowService+1)& (0+255),b
  2984  0010DC  0100               	movlb	0	; () banked
  2985  0010DE  51AB               	movf	??_I2cLowService& (0+255),w,b
  2986  0010E0  0100               	movlb	0	; () banked
  2987  0010E2  27AC               	addwf	(??_I2cLowService+1)& (0+255),f,b
  2988  0010E4  0100               	movlb	0	; () banked
  2989  0010E6  3BAC               	swapf	(??_I2cLowService+1)& (0+255),f,b
  2990  0010E8  504E               	movf	_Ptr,w,c
  2991  0010EA  0100               	movlb	0	; () banked
  2992  0010EC  19AC               	xorwf	(??_I2cLowService+1)& (0+255),w,b
  2993  0010EE  0B0F               	andlw	-241
  2994  0010F0  0100               	movlb	0	; () banked
  2995  0010F2  19AC               	xorwf	(??_I2cLowService+1)& (0+255),w,b
  2996  0010F4  6E4E               	movwf	_Ptr,c
  2997                           
  2998                           ; BSR set to: 0
  2999                           ;myi2c.c: 158: if (Ptr.Tx >= I2c[I2cDevPtr].Flag.Tx)
  3000  0010F6  384E               	swapf	_Ptr,w,c
  3001  0010F8  0B0F               	andlw	15
  3002  0010FA  0100               	movlb	0	; () banked
  3003  0010FC  6FAB               	movwf	??_I2cLowService& (0+255),b
  3004  0010FE  504B               	movf	_I2cDevPtr,w,c
  3005  001100  0D0A               	mullw	10
  3006  001102  0E56               	movlw	low _I2c
  3007  001104  24F3               	addwf	prodl,w,c
  3008  001106  6ED9               	movwf	fsr2l,c
  3009  001108  0E00               	movlw	high _I2c
  3010  00110A  20F4               	addwfc	prodh,w,c
  3011  00110C  6EDA               	movwf	fsr2h,c
  3012  00110E  38DF               	swapf	indf2,w,c
  3013  001110  0B0F               	andlw	15
  3014  001112  0100               	movlb	0	; () banked
  3015  001114  5DAB               	subwf	??_I2cLowService& (0+255),w,b
  3016  001116  A0D8               	btfss	status,0,c
  3017  001118  D015               	goto	l2975
  3018                           
  3019                           ; BSR set to: 0
  3020                           ;myi2c.c: 159: {
  3021                           ;myi2c.c: 160: if (I2c[I2cDevPtr].Flag.Rx > 0)
  3022  00111A  504B               	movf	_I2cDevPtr,w,c
  3023  00111C  0D0A               	mullw	10
  3024  00111E  0E56               	movlw	low _I2c
  3025  001120  24F3               	addwf	prodl,w,c
  3026  001122  6ED9               	movwf	fsr2l,c
  3027  001124  0E00               	movlw	high _I2c
  3028  001126  20F4               	addwfc	prodh,w,c
  3029  001128  6EDA               	movwf	fsr2h,c
  3030  00112A  50DF               	movf	indf2,w,c
  3031  00112C  0B0F               	andlw	15
  3032  00112E  0900               	iorlw	0
  3033  001130  B4D8               	btfsc	status,2,c
  3034  001132  D004               	goto	l2973
  3035                           
  3036                           ; BSR set to: 0
  3037                           ;myi2c.c: 161: {
  3038                           ;myi2c.c: 162: I2cStat = RSTART;
  3039  001134  0100               	movlb	0	; () banked
  3040  001136  6FAB               	movwf	??_I2cLowService& (0+255),b
  3041  001138  0E06               	movlw	6
  3042  00113A  D034               	goto	L5
  3043  00113C                     l2973:
  3044                           
  3045                           ; BSR set to: 0
  3046                           ;myi2c.c: 164: else
  3047                           ;myi2c.c: 165: {
  3048                           ;myi2c.c: 166: I2cStat = STP;
  3049  00113C  0100               	movlb	0	; () banked
  3050  00113E  6FAB               	movwf	??_I2cLowService& (0+255),b
  3051  001140  0E07               	movlw	7
  3052  001142  D030               	goto	L5
  3053  001144                     l2975:
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;myi2c.c: 169: else
  3057                           ;myi2c.c: 170: {
  3058                           ;myi2c.c: 171: I2cStat = WRITE;
  3059  001144  0100               	movlb	0	; () banked
  3060  001146  6FAB               	movwf	??_I2cLowService& (0+255),b
  3061  001148  0E01               	movlw	1
  3062  00114A  D02C               	goto	L5
  3063  00114C                     l322:
  3064                           
  3065                           ;myi2c.c: 177: SSPCON2bits.RCEN = 1;
  3066  00114C  86C5               	bsf	4037,3,c	;volatile
  3067                           
  3068                           ;myi2c.c: 178: Ptr.Rx ++;
  3069  00114E  0E01               	movlw	1
  3070  001150  0100               	movlb	0	; () banked
  3071  001152  6FAB               	movwf	??_I2cLowService& (0+255),b
  3072  001154  504E               	movf	_Ptr,w,c
  3073  001156  0B0F               	andlw	15
  3074  001158  0100               	movlb	0	; () banked
  3075  00115A  6FAC               	movwf	(??_I2cLowService+1)& (0+255),b
  3076  00115C  0100               	movlb	0	; () banked
  3077  00115E  51AB               	movf	??_I2cLowService& (0+255),w,b
  3078  001160  0100               	movlb	0	; () banked
  3079  001162  27AC               	addwf	(??_I2cLowService+1)& (0+255),f,b
  3080  001164  504E               	movf	_Ptr,w,c
  3081  001166  0100               	movlb	0	; () banked
  3082  001168  19AC               	xorwf	(??_I2cLowService+1)& (0+255),w,b
  3083  00116A  0BF0               	andlw	-16
  3084  00116C  0100               	movlb	0	; () banked
  3085  00116E  19AC               	xorwf	(??_I2cLowService+1)& (0+255),w,b
  3086  001170  6E4E               	movwf	_Ptr,c
  3087                           
  3088                           ; BSR set to: 0
  3089                           ;myi2c.c: 179: if (Ptr.Rx >= I2c[I2cDevPtr].Flag.Rx)
  3090  001172  504E               	movf	_Ptr,w,c
  3091  001174  0B0F               	andlw	15
  3092  001176  0100               	movlb	0	; () banked
  3093  001178  6FAB               	movwf	??_I2cLowService& (0+255),b
  3094  00117A  504B               	movf	_I2cDevPtr,w,c
  3095  00117C  0D0A               	mullw	10
  3096  00117E  0E56               	movlw	low _I2c
  3097  001180  24F3               	addwf	prodl,w,c
  3098  001182  6ED9               	movwf	fsr2l,c
  3099  001184  0E00               	movlw	high _I2c
  3100  001186  20F4               	addwfc	prodh,w,c
  3101  001188  6EDA               	movwf	fsr2h,c
  3102  00118A  50DF               	movf	indf2,w,c
  3103  00118C  0B0F               	andlw	15
  3104  00118E  0100               	movlb	0	; () banked
  3105  001190  5DAB               	subwf	??_I2cLowService& (0+255),w,b
  3106  001192  A0D8               	btfss	status,0,c
  3107  001194  D004               	goto	l2983
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;myi2c.c: 180: {
  3111                           ;myi2c.c: 181: I2cStat = NACK;
  3112  001196  0100               	movlb	0	; () banked
  3113  001198  6FAB               	movwf	??_I2cLowService& (0+255),b
  3114  00119A  0E05               	movlw	5
  3115  00119C  D003               	goto	L5
  3116  00119E                     l2983:
  3117                           
  3118                           ; BSR set to: 0
  3119                           ;myi2c.c: 183: else
  3120                           ;myi2c.c: 184: {
  3121                           ;myi2c.c: 185: I2cStat = ACK;
  3122  00119E  0100               	movlb	0	; () banked
  3123  0011A0  6FAB               	movwf	??_I2cLowService& (0+255),b
  3124  0011A2  0E04               	movlw	4
  3125  0011A4                     L5:
  3126  0011A4  6E4D               	movwf	_I2cStat,c
  3127  0011A6  0100               	movlb	0	; () banked
  3128  0011A8  51AB               	movf	??_I2cLowService& (0+255),w,b
  3129  0011AA  D0CD               	goto	l344
  3130  0011AC                     l2985:
  3131                           
  3132                           ;myi2c.c: 191: I2c[I2cDevPtr].RxBuff[Ptr.Rx-1] = SSPBUF;
  3133  0011AC  504B               	movf	_I2cDevPtr,w,c
  3134  0011AE  0D0A               	mullw	10
  3135  0011B0  504E               	movf	_Ptr,w,c
  3136  0011B2  0B0F               	andlw	15
  3137  0011B4  0100               	movlb	0	; () banked
  3138  0011B6  6FAB               	movwf	??_I2cLowService& (0+255),b
  3139  0011B8  6BAC               	clrf	(??_I2cLowService+1)& (0+255),b
  3140  0011BA  0E01               	movlw	1
  3141  0011BC  0100               	movlb	0	; () banked
  3142  0011BE  27AB               	addwf	??_I2cLowService& (0+255),f,b
  3143  0011C0  0E00               	movlw	0
  3144  0011C2  23AC               	addwfc	(??_I2cLowService+1)& (0+255),f,b
  3145  0011C4  0E56               	movlw	low _I2c
  3146  0011C6  0100               	movlb	0	; () banked
  3147  0011C8  6FAD               	movwf	(??_I2cLowService+2)& (0+255),b
  3148  0011CA  0E00               	movlw	high _I2c
  3149  0011CC  6FAE               	movwf	(??_I2cLowService+3)& (0+255),b
  3150  0011CE  0100               	movlb	0	; () banked
  3151  0011D0  51AB               	movf	??_I2cLowService& (0+255),w,b
  3152  0011D2  0100               	movlb	0	; () banked
  3153  0011D4  27AD               	addwf	(??_I2cLowService+2)& (0+255),f,b
  3154  0011D6  0100               	movlb	0	; () banked
  3155  0011D8  51AC               	movf	(??_I2cLowService+1)& (0+255),w,b
  3156  0011DA  0100               	movlb	0	; () banked
  3157  0011DC  23AE               	addwfc	(??_I2cLowService+3)& (0+255),f,b
  3158  0011DE  50F3               	movf	prodl,w,c
  3159  0011E0  0100               	movlb	0	; () banked
  3160  0011E2  25AD               	addwf	(??_I2cLowService+2)& (0+255),w,b
  3161  0011E4  6ED9               	movwf	fsr2l,c
  3162  0011E6  50F4               	movf	prodh,w,c
  3163  0011E8  0100               	movlb	0	; () banked
  3164  0011EA  21AE               	addwfc	(??_I2cLowService+3)& (0+255),w,b
  3165  0011EC  6EDA               	movwf	fsr2h,c
  3166  0011EE  CFC9 FFDF          	movff	4041,indf2	;volatile
  3167                           
  3168                           ; BSR set to: 0
  3169                           ;myi2c.c: 192: I2cStat = READ;
  3170  0011F2  0100               	movlb	0	; () banked
  3171  0011F4  6FAB               	movwf	??_I2cLowService& (0+255),b
  3172  0011F6  0E03               	movlw	3
  3173  0011F8  6E4D               	movwf	_I2cStat,c
  3174  0011FA  0100               	movlb	0	; () banked
  3175  0011FC  51AB               	movf	??_I2cLowService& (0+255),w,b
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;myi2c.c: 193: SSPCON2bits.ACKDT=0;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  3179  0011FE  9AC5               	bcf	4037,5,c	;volatile
  3180                           
  3181                           ; BSR set to: 0
  3182  001200  88C5               	bsf	4037,4,c	;volatile
  3183  001202                     l326:
  3184  001202  A8C5               	btfss	4037,4,c	;volatile
  3185  001204  D0A0               	goto	l344
  3186  001206  D7FD               	goto	l326
  3187  001208                     l2993:
  3188                           
  3189                           ;myi2c.c: 198: I2c[I2cDevPtr].RxBuff[Ptr.Rx-1] = SSPBUF;
  3190  001208  504B               	movf	_I2cDevPtr,w,c
  3191  00120A  0D0A               	mullw	10
  3192  00120C  504E               	movf	_Ptr,w,c
  3193  00120E  0B0F               	andlw	15
  3194  001210  0100               	movlb	0	; () banked
  3195  001212  6FAB               	movwf	??_I2cLowService& (0+255),b
  3196  001214  6BAC               	clrf	(??_I2cLowService+1)& (0+255),b
  3197  001216  0E01               	movlw	1
  3198  001218  0100               	movlb	0	; () banked
  3199  00121A  27AB               	addwf	??_I2cLowService& (0+255),f,b
  3200  00121C  0E00               	movlw	0
  3201  00121E  23AC               	addwfc	(??_I2cLowService+1)& (0+255),f,b
  3202  001220  0E56               	movlw	low _I2c
  3203  001222  0100               	movlb	0	; () banked
  3204  001224  6FAD               	movwf	(??_I2cLowService+2)& (0+255),b
  3205  001226  0E00               	movlw	high _I2c
  3206  001228  6FAE               	movwf	(??_I2cLowService+3)& (0+255),b
  3207  00122A  0100               	movlb	0	; () banked
  3208  00122C  51AB               	movf	??_I2cLowService& (0+255),w,b
  3209  00122E  0100               	movlb	0	; () banked
  3210  001230  27AD               	addwf	(??_I2cLowService+2)& (0+255),f,b
  3211  001232  0100               	movlb	0	; () banked
  3212  001234  51AC               	movf	(??_I2cLowService+1)& (0+255),w,b
  3213  001236  0100               	movlb	0	; () banked
  3214  001238  23AE               	addwfc	(??_I2cLowService+3)& (0+255),f,b
  3215  00123A  50F3               	movf	prodl,w,c
  3216  00123C  0100               	movlb	0	; () banked
  3217  00123E  25AD               	addwf	(??_I2cLowService+2)& (0+255),w,b
  3218  001240  6ED9               	movwf	fsr2l,c
  3219  001242  50F4               	movf	prodh,w,c
  3220  001244  0100               	movlb	0	; () banked
  3221  001246  21AE               	addwfc	(??_I2cLowService+3)& (0+255),w,b
  3222  001248  6EDA               	movwf	fsr2h,c
  3223  00124A  CFC9 FFDF          	movff	4041,indf2	;volatile
  3224                           
  3225                           ; BSR set to: 0
  3226                           ;myi2c.c: 199: I2cStat = STP;
  3227  00124E  0100               	movlb	0	; () banked
  3228  001250  6FAB               	movwf	??_I2cLowService& (0+255),b
  3229  001252  0E07               	movlw	7
  3230  001254  6E4D               	movwf	_I2cStat,c
  3231  001256  0100               	movlb	0	; () banked
  3232  001258  51AB               	movf	??_I2cLowService& (0+255),w,b
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;myi2c.c: 200: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  3236  00125A  8AC5               	bsf	4037,5,c	;volatile
  3237                           
  3238                           ; BSR set to: 0
  3239  00125C  88C5               	bsf	4037,4,c	;volatile
  3240  00125E                     l330:
  3241  00125E  A8C5               	btfss	4037,4,c	;volatile
  3242  001260  D072               	goto	l344
  3243  001262  D7FD               	goto	l330
  3244  001264                     l3001:
  3245                           
  3246                           ;myi2c.c: 206: I2cStat = ADRR;
  3247  001264  0100               	movlb	0	; () banked
  3248  001266  6FAB               	movwf	??_I2cLowService& (0+255),b
  3249  001268  0E02               	movlw	2
  3250  00126A  6E4D               	movwf	_I2cStat,c
  3251  00126C  0100               	movlb	0	; () banked
  3252  00126E  51AB               	movf	??_I2cLowService& (0+255),w,b
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;myi2c.c: 207: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  3256  001270  82C5               	bsf	4037,1,c	;volatile
  3257  001272                     l334:
  3258  001272  A2C5               	btfss	4037,1,c	;volatile
  3259  001274  D068               	goto	l344
  3260  001276  D7FD               	goto	l334
  3261  001278                     l3005:
  3262                           
  3263                           ;myi2c.c: 212: I2cStat = READ;
  3264  001278  0100               	movlb	0	; () banked
  3265  00127A  6FAB               	movwf	??_I2cLowService& (0+255),b
  3266  00127C  0E03               	movlw	3
  3267  00127E  6E4D               	movwf	_I2cStat,c
  3268  001280  0100               	movlb	0	; () banked
  3269  001282  51AB               	movf	??_I2cLowService& (0+255),w,b
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;myi2c.c: 213: SSPBUF = I2cAdr[I2cDevPtr]+1;
  3273  001284  504B               	movf	_I2cDevPtr,w,c
  3274  001286  0D01               	mullw	1
  3275  001288  0E48               	movlw	low _I2cAdr
  3276  00128A  24F3               	addwf	prodl,w,c
  3277  00128C  6ED9               	movwf	fsr2l,c
  3278  00128E  0E00               	movlw	high _I2cAdr
  3279  001290  20F4               	addwfc	prodh,w,c
  3280  001292  6EDA               	movwf	fsr2h,c
  3281  001294  50DF               	movf	indf2,w,c
  3282  001296  0100               	movlb	0	; () banked
  3283  001298  6FAB               	movwf	??_I2cLowService& (0+255),b
  3284  00129A  0100               	movlb	0	; () banked
  3285  00129C  29AB               	incf	??_I2cLowService& (0+255),w,b
  3286  00129E  D6F3               	goto	L1
  3287  0012A0                     l3009:
  3288                           
  3289                           ;myi2c.c: 218: I2cStat = FINE;
  3290  0012A0  0100               	movlb	0	; () banked
  3291  0012A2  6FAB               	movwf	??_I2cLowService& (0+255),b
  3292  0012A4  0E08               	movlw	8
  3293  0012A6  6E4D               	movwf	_I2cStat,c
  3294  0012A8  0100               	movlb	0	; () banked
  3295  0012AA  51AB               	movf	??_I2cLowService& (0+255),w,b
  3296                           
  3297                           ; BSR set to: 0
  3298                           ;myi2c.c: 219: I2c[I2cDevPtr].Flag.Rx = 0;
  3299  0012AC  504B               	movf	_I2cDevPtr,w,c
  3300  0012AE  0D0A               	mullw	10
  3301  0012B0  0E56               	movlw	low _I2c
  3302  0012B2  24F3               	addwf	prodl,w,c
  3303  0012B4  6ED9               	movwf	fsr2l,c
  3304  0012B6  0E00               	movlw	high _I2c
  3305  0012B8  20F4               	addwfc	prodh,w,c
  3306  0012BA  6EDA               	movwf	fsr2h,c
  3307  0012BC  90DF               	bcf	indf2,0,c
  3308  0012BE  92DF               	bcf	indf2,1,c
  3309  0012C0  94DF               	bcf	indf2,2,c
  3310  0012C2  96DF               	bcf	indf2,3,c
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;myi2c.c: 220: I2c[I2cDevPtr].Flag.Tx = 0;
  3314  0012C4  504B               	movf	_I2cDevPtr,w,c
  3315  0012C6  0D0A               	mullw	10
  3316  0012C8  0E56               	movlw	low _I2c
  3317  0012CA  24F3               	addwf	prodl,w,c
  3318  0012CC  6ED9               	movwf	fsr2l,c
  3319  0012CE  0E00               	movlw	high _I2c
  3320  0012D0  20F4               	addwfc	prodh,w,c
  3321  0012D2  6EDA               	movwf	fsr2h,c
  3322  0012D4  98DF               	bcf	indf2,4,c
  3323  0012D6  9ADF               	bcf	indf2,5,c
  3324  0012D8  9CDF               	bcf	indf2,6,c
  3325  0012DA  9EDF               	bcf	indf2,7,c
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;myi2c.c: 221: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  3329  0012DC  84C5               	bsf	4037,2,c	;volatile
  3330  0012DE                     l339:
  3331  0012DE  A4C5               	btfss	4037,2,c	;volatile
  3332  0012E0  D032               	goto	l344
  3333  0012E2  D7FD               	goto	l339
  3334  0012E4                     l3017:
  3335                           
  3336                           ;myi2c.c: 226: I2cBusyFlag = 0;
  3337  0012E4  0100               	movlb	0	; () banked
  3338  0012E6  6FAB               	movwf	??_I2cLowService& (0+255),b
  3339  0012E8  0E00               	movlw	0
  3340  0012EA  6E4A               	movwf	_I2cBusyFlag,c
  3341  0012EC  0100               	movlb	0	; () banked
  3342  0012EE  51AB               	movf	??_I2cLowService& (0+255),w,b
  3343                           
  3344                           ; BSR set to: 0
  3345                           ;myi2c.c: 227: I2c[I2cDevPtr].Done = 1;
  3346  0012F0  504B               	movf	_I2cDevPtr,w,c
  3347  0012F2  0D0A               	mullw	10
  3348  0012F4  0E01               	movlw	1
  3349  0012F6  26F3               	addwf	prodl,f,c
  3350  0012F8  0E00               	movlw	0
  3351  0012FA  22F4               	addwfc	prodh,f,c
  3352  0012FC  0E56               	movlw	low _I2c
  3353  0012FE  24F3               	addwf	prodl,w,c
  3354  001300  6ED9               	movwf	fsr2l,c
  3355  001302  0E00               	movlw	high _I2c
  3356  001304  20F4               	addwfc	prodh,w,c
  3357  001306  6EDA               	movwf	fsr2h,c
  3358  001308  0E01               	movlw	1
  3359  00130A  6EDF               	movwf	indf2,c
  3360                           
  3361                           ;myi2c.c: 228: break;
  3362  00130C  D01C               	goto	l344
  3363  00130E                     l3023:
  3364  00130E  504D               	movf	_I2cStat,w,c
  3365                           
  3366                           ; Switch size 1, requested type "space"
  3367                           ; Number of cases is 9, Range of values is 0 to 8
  3368                           ; switch strategies available:
  3369                           ; Name         Instructions Cycles
  3370                           ; simple_byte           28    15 (average)
  3371                           ;	Chosen strategy is simple_byte
  3372  001310  0A00               	xorlw	0	; case 0
  3373  001312  B4D8               	btfsc	status,2,c
  3374  001314  D69C               	goto	l2953
  3375  001316  0A01               	xorlw	1	; case 1
  3376  001318  B4D8               	btfsc	status,2,c
  3377  00131A  D6B7               	goto	l2963
  3378  00131C  0A03               	xorlw	3	; case 2
  3379  00131E  B4D8               	btfsc	status,2,c
  3380  001320  D7AB               	goto	l3005
  3381  001322  0A01               	xorlw	1	; case 3
  3382  001324  B4D8               	btfsc	status,2,c
  3383  001326  D712               	goto	l322
  3384  001328  0A07               	xorlw	7	; case 4
  3385  00132A  B4D8               	btfsc	status,2,c
  3386  00132C  D73F               	goto	l2985
  3387  00132E  0A01               	xorlw	1	; case 5
  3388  001330  B4D8               	btfsc	status,2,c
  3389  001332  D76A               	goto	l2993
  3390  001334  0A03               	xorlw	3	; case 6
  3391  001336  B4D8               	btfsc	status,2,c
  3392  001338  D795               	goto	l3001
  3393  00133A  0A01               	xorlw	1	; case 7
  3394  00133C  B4D8               	btfsc	status,2,c
  3395  00133E  D7B0               	goto	l3009
  3396  001340  0A0F               	xorlw	15	; case 8
  3397  001342  B4D8               	btfsc	status,2,c
  3398  001344  D7CF               	goto	l3017
  3399  001346                     l344:
  3400  001346  0012               	return	
  3401  001348                     __end_of_I2cLowService:
  3402                           	opt stack 0
  3403                           tblptru	equ	0xFF8
  3404                           tblptrh	equ	0xFF7
  3405                           tblptrl	equ	0xFF6
  3406                           tablat	equ	0xFF5
  3407                           prodh	equ	0xFF4
  3408                           prodl	equ	0xFF3
  3409                           intcon	equ	0xFF2
  3410                           postinc0	equ	0xFEE
  3411                           wreg	equ	0xFE8
  3412                           postdec1	equ	0xFE5
  3413                           fsr1l	equ	0xFE1
  3414                           indf2	equ	0xFDF
  3415                           fsr2h	equ	0xFDA
  3416                           fsr2l	equ	0xFD9
  3417                           status	equ	0xFD8
  3418                           
  3419 ;; *************** function _I2cHighService *****************
  3420 ;; Defined at:
  3421 ;;		line 239 in file "../myi2c.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;		None
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;		None
  3426 ;; Return value:  Size  Location     Type
  3427 ;;		None               void
  3428 ;; Registers used:
  3429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3437 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3438 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3439 ;;Total ram usage:        1 bytes
  3440 ;; Hardware stack levels used:    1
  3441 ;; Hardware stack levels required when called:    5
  3442 ;; This function calls:
  3443 ;;		Nothing
  3444 ;; This function is called by:
  3445 ;;		_I2cService
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           	psect	text13
  3450  00244C                     __ptext13:
  3451                           	opt stack 0
  3452  00244C                     _I2cHighService:
  3453                           	opt stack 23
  3454                           
  3455                           ;myi2c.c: 246: Ptr.Tx = 0;
  3456                           
  3457                           ;incstack = 0
  3458  00244C  984E               	bcf	_Ptr,4,c
  3459  00244E  9A4E               	bcf	_Ptr,5,c
  3460  002450  9C4E               	bcf	_Ptr,6,c
  3461  002452  9E4E               	bcf	_Ptr,7,c
  3462                           
  3463                           ;myi2c.c: 247: Ptr.Rx = 0;
  3464  002454  904E               	bcf	_Ptr,0,c
  3465  002456  924E               	bcf	_Ptr,1,c
  3466  002458  944E               	bcf	_Ptr,2,c
  3467  00245A  964E               	bcf	_Ptr,3,c
  3468                           
  3469                           ;myi2c.c: 248: I2c[I2cDevPtr].RxBuff[0] = 0;
  3470  00245C  504B               	movf	_I2cDevPtr,w,c
  3471  00245E  0D0A               	mullw	10
  3472  002460  0E02               	movlw	2
  3473  002462  26F3               	addwf	prodl,f,c
  3474  002464  0E00               	movlw	0
  3475  002466  22F4               	addwfc	prodh,f,c
  3476  002468  0E56               	movlw	low _I2c
  3477  00246A  24F3               	addwf	prodl,w,c
  3478  00246C  6ED9               	movwf	fsr2l,c
  3479  00246E  0E00               	movlw	high _I2c
  3480  002470  20F4               	addwfc	prodh,w,c
  3481  002472  6EDA               	movwf	fsr2h,c
  3482  002474  0E00               	movlw	0
  3483  002476  6EDF               	movwf	indf2,c
  3484                           
  3485                           ;myi2c.c: 249: I2c[I2cDevPtr].RxBuff[1] = 0;
  3486  002478  504B               	movf	_I2cDevPtr,w,c
  3487  00247A  0D0A               	mullw	10
  3488  00247C  0E03               	movlw	3
  3489  00247E  26F3               	addwf	prodl,f,c
  3490  002480  0E00               	movlw	0
  3491  002482  22F4               	addwfc	prodh,f,c
  3492  002484  0E56               	movlw	low _I2c
  3493  002486  24F3               	addwf	prodl,w,c
  3494  002488  6ED9               	movwf	fsr2l,c
  3495  00248A  0E00               	movlw	high _I2c
  3496  00248C  20F4               	addwfc	prodh,w,c
  3497  00248E  6EDA               	movwf	fsr2h,c
  3498  002490  0E00               	movlw	0
  3499  002492  6EDF               	movwf	indf2,c
  3500                           
  3501                           ;myi2c.c: 250: I2cEventFlag = 0;
  3502  002494  0100               	movlb	0	; () banked
  3503  002496  6FAB               	movwf	??_I2cHighService& (0+255),b
  3504  002498  0E00               	movlw	0
  3505  00249A  6E4C               	movwf	_I2cEventFlag,c
  3506  00249C  0100               	movlb	0	; () banked
  3507  00249E  51AB               	movf	??_I2cHighService& (0+255),w,b
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;myi2c.c: 251: I2cBusCollFlag = 0;
  3511  0024A0  0100               	movlb	0	; () banked
  3512  0024A2  6FAB               	movwf	??_I2cHighService& (0+255),b
  3513  0024A4  0E00               	movlw	0
  3514  0024A6  6E49               	movwf	_I2cBusCollFlag,c
  3515  0024A8  0100               	movlb	0	; () banked
  3516  0024AA  51AB               	movf	??_I2cHighService& (0+255),w,b
  3517                           
  3518                           ; BSR set to: 0
  3519                           ;myi2c.c: 252: I2cBusyFlag = 1;
  3520  0024AC  0100               	movlb	0	; () banked
  3521  0024AE  6FAB               	movwf	??_I2cHighService& (0+255),b
  3522  0024B0  0E01               	movlw	1
  3523  0024B2  6E4A               	movwf	_I2cBusyFlag,c
  3524  0024B4  0100               	movlb	0	; () banked
  3525  0024B6  51AB               	movf	??_I2cHighService& (0+255),w,b
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;myi2c.c: 253: I2cStat = START;
  3529  0024B8  0E00               	movlw	0
  3530  0024BA  B6C7               	btfsc	4039,3,c	;volatile
  3531  0024BC  0E01               	movlw	1
  3532  0024BE  6E4D               	movwf	_I2cStat,c
  3533                           
  3534                           ; BSR set to: 0
  3535                           ;myi2c.c: 255: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  3536  0024C0  80C5               	bsf	4037,0,c	;volatile
  3537  0024C2                     l347:
  3538  0024C2  A0C5               	btfss	4037,0,c	;volatile
  3539  0024C4  0012               	return	
  3540  0024C6  D7FD               	goto	l347
  3541  0024C8                     __end_of_I2cHighService:
  3542                           	opt stack 0
  3543                           tblptru	equ	0xFF8
  3544                           tblptrh	equ	0xFF7
  3545                           tblptrl	equ	0xFF6
  3546                           tablat	equ	0xFF5
  3547                           prodh	equ	0xFF4
  3548                           prodl	equ	0xFF3
  3549                           intcon	equ	0xFF2
  3550                           postinc0	equ	0xFEE
  3551                           wreg	equ	0xFE8
  3552                           postdec1	equ	0xFE5
  3553                           fsr1l	equ	0xFE1
  3554                           indf2	equ	0xFDF
  3555                           fsr2h	equ	0xFDA
  3556                           fsr2l	equ	0xFD9
  3557                           status	equ	0xFD8
  3558                           
  3559 ;; *************** function _I2cData *****************
  3560 ;; Defined at:
  3561 ;;		line 309 in file "../myi2c.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;  DevPtr          1    wreg     unsigned char 
  3564 ;;  TxBytes         1    0[BANK0 ] unsigned char 
  3565 ;;  TX1             1    1[BANK0 ] unsigned char 
  3566 ;;  TX2             1    2[BANK0 ] unsigned char 
  3567 ;;  TX3             1    3[BANK0 ] unsigned char 
  3568 ;;  TX4             1    4[BANK0 ] unsigned char 
  3569 ;;  RxBytes         1    5[BANK0 ] unsigned char 
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;  DevPtr          1    7[BANK0 ] unsigned char 
  3572 ;; Return value:  Size  Location     Type
  3573 ;;		None               void
  3574 ;; Registers used:
  3575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3581 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3582 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3583 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3584 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3585 ;;Total ram usage:        8 bytes
  3586 ;; Hardware stack levels used:    1
  3587 ;; Hardware stack levels required when called:    5
  3588 ;; This function calls:
  3589 ;;		Nothing
  3590 ;; This function is called by:
  3591 ;;		_RtcInit
  3592 ;;		_main
  3593 ;;		_RtcWriteTime
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597                           	psect	text14
  3598  001F6C                     __ptext14:
  3599                           	opt stack 0
  3600  001F6C                     _I2cData:
  3601                           	opt stack 24
  3602                           
  3603                           ;incstack = 0
  3604                           ;I2cData@DevPtr stored from wreg
  3605  001F6C  CFE8 F0B2          	movff	wreg,I2cData@DevPtr
  3606                           
  3607                           ;myi2c.c: 313: I2c[DevPtr].Flag.Tx = TxBytes;
  3608  001F70  C0AB  F0B1         	movff	I2cData@TxBytes,??_I2cData
  3609  001F74  0100               	movlb	0	; () banked
  3610  001F76  0100               	movlb	0	; () banked
  3611  001F78  51B2               	movf	I2cData@DevPtr& (0+255),w,b
  3612  001F7A  0D0A               	mullw	10
  3613  001F7C  0E56               	movlw	low _I2c
  3614  001F7E  24F3               	addwf	prodl,w,c
  3615  001F80  6ED9               	movwf	fsr2l,c
  3616  001F82  0E00               	movlw	high _I2c
  3617  001F84  20F4               	addwfc	prodh,w,c
  3618  001F86  6EDA               	movwf	fsr2h,c
  3619  001F88  0100               	movlb	0	; () banked
  3620  001F8A  3BB1               	swapf	??_I2cData& (0+255),f,b
  3621  001F8C  50DF               	movf	indf2,w,c
  3622  001F8E  0100               	movlb	0	; () banked
  3623  001F90  19B1               	xorwf	??_I2cData& (0+255),w,b
  3624  001F92  0B0F               	andlw	-241
  3625  001F94  19B1               	xorwf	??_I2cData& (0+255),w,b
  3626  001F96  6EDF               	movwf	indf2,c
  3627                           
  3628                           ;myi2c.c: 314: I2c[DevPtr].TxBuff[0] = TX1 ;
  3629  001F98  0100               	movlb	0	; () banked
  3630  001F9A  0100               	movlb	0	; () banked
  3631  001F9C  51B2               	movf	I2cData@DevPtr& (0+255),w,b
  3632  001F9E  0D0A               	mullw	10
  3633  001FA0  0E06               	movlw	6
  3634  001FA2  26F3               	addwf	prodl,f,c
  3635  001FA4  0E00               	movlw	0
  3636  001FA6  22F4               	addwfc	prodh,f,c
  3637  001FA8  0E56               	movlw	low _I2c
  3638  001FAA  24F3               	addwf	prodl,w,c
  3639  001FAC  6ED9               	movwf	fsr2l,c
  3640  001FAE  0E00               	movlw	high _I2c
  3641  001FB0  20F4               	addwfc	prodh,w,c
  3642  001FB2  6EDA               	movwf	fsr2h,c
  3643  001FB4  0100               	movlb	0	; () banked
  3644  001FB6  C0AC  FFDF         	movff	I2cData@TX1,indf2
  3645                           
  3646                           ;myi2c.c: 315: I2c[DevPtr].TxBuff[1] = TX2 ;
  3647  001FBA  0100               	movlb	0	; () banked
  3648  001FBC  0100               	movlb	0	; () banked
  3649  001FBE  51B2               	movf	I2cData@DevPtr& (0+255),w,b
  3650  001FC0  0D0A               	mullw	10
  3651  001FC2  0E07               	movlw	7
  3652  001FC4  26F3               	addwf	prodl,f,c
  3653  001FC6  0E00               	movlw	0
  3654  001FC8  22F4               	addwfc	prodh,f,c
  3655  001FCA  0E56               	movlw	low _I2c
  3656  001FCC  24F3               	addwf	prodl,w,c
  3657  001FCE  6ED9               	movwf	fsr2l,c
  3658  001FD0  0E00               	movlw	high _I2c
  3659  001FD2  20F4               	addwfc	prodh,w,c
  3660  001FD4  6EDA               	movwf	fsr2h,c
  3661  001FD6  0100               	movlb	0	; () banked
  3662  001FD8  C0AD  FFDF         	movff	I2cData@TX2,indf2
  3663                           
  3664                           ;myi2c.c: 316: I2c[DevPtr].TxBuff[2] = TX3 ;
  3665  001FDC  0100               	movlb	0	; () banked
  3666  001FDE  0100               	movlb	0	; () banked
  3667  001FE0  51B2               	movf	I2cData@DevPtr& (0+255),w,b
  3668  001FE2  0D0A               	mullw	10
  3669  001FE4  0E08               	movlw	8
  3670  001FE6  26F3               	addwf	prodl,f,c
  3671  001FE8  0E00               	movlw	0
  3672  001FEA  22F4               	addwfc	prodh,f,c
  3673  001FEC  0E56               	movlw	low _I2c
  3674  001FEE  24F3               	addwf	prodl,w,c
  3675  001FF0  6ED9               	movwf	fsr2l,c
  3676  001FF2  0E00               	movlw	high _I2c
  3677  001FF4  20F4               	addwfc	prodh,w,c
  3678  001FF6  6EDA               	movwf	fsr2h,c
  3679  001FF8  0100               	movlb	0	; () banked
  3680  001FFA  C0AE  FFDF         	movff	I2cData@TX3,indf2
  3681                           
  3682                           ;myi2c.c: 317: I2c[DevPtr].TxBuff[3] = TX4 ;
  3683  001FFE  0100               	movlb	0	; () banked
  3684  002000  0100               	movlb	0	; () banked
  3685  002002  51B2               	movf	I2cData@DevPtr& (0+255),w,b
  3686  002004  0D0A               	mullw	10
  3687  002006  0E09               	movlw	9
  3688  002008  26F3               	addwf	prodl,f,c
  3689  00200A  0E00               	movlw	0
  3690  00200C  22F4               	addwfc	prodh,f,c
  3691  00200E  0E56               	movlw	low _I2c
  3692  002010  24F3               	addwf	prodl,w,c
  3693  002012  6ED9               	movwf	fsr2l,c
  3694  002014  0E00               	movlw	high _I2c
  3695  002016  20F4               	addwfc	prodh,w,c
  3696  002018  6EDA               	movwf	fsr2h,c
  3697  00201A  0100               	movlb	0	; () banked
  3698  00201C  C0AF  FFDF         	movff	I2cData@TX4,indf2
  3699                           
  3700                           ;myi2c.c: 318: I2c[DevPtr].Flag.Rx = RxBytes;
  3701  002020  0100               	movlb	0	; () banked
  3702  002022  0100               	movlb	0	; () banked
  3703  002024  51B2               	movf	I2cData@DevPtr& (0+255),w,b
  3704  002026  0D0A               	mullw	10
  3705  002028  0E56               	movlw	low _I2c
  3706  00202A  24F3               	addwf	prodl,w,c
  3707  00202C  6ED9               	movwf	fsr2l,c
  3708  00202E  0E00               	movlw	high _I2c
  3709  002030  20F4               	addwfc	prodh,w,c
  3710  002032  6EDA               	movwf	fsr2h,c
  3711  002034  50DF               	movf	indf2,w,c
  3712  002036  0100               	movlb	0	; () banked
  3713  002038  0100               	movlb	0	; () banked
  3714  00203A  19B0               	xorwf	I2cData@RxBytes& (0+255),w,b
  3715  00203C  0BF0               	andlw	-16
  3716  00203E  0100               	movlb	0	; () banked
  3717  002040  19B0               	xorwf	I2cData@RxBytes& (0+255),w,b
  3718  002042  6EDF               	movwf	indf2,c
  3719                           
  3720                           ;myi2c.c: 319: I2c[DevPtr].Done = 0;
  3721  002044  0100               	movlb	0	; () banked
  3722  002046  0100               	movlb	0	; () banked
  3723  002048  51B2               	movf	I2cData@DevPtr& (0+255),w,b
  3724  00204A  0D0A               	mullw	10
  3725  00204C  0E01               	movlw	1
  3726  00204E  26F3               	addwf	prodl,f,c
  3727  002050  0E00               	movlw	0
  3728  002052  22F4               	addwfc	prodh,f,c
  3729  002054  0E56               	movlw	low _I2c
  3730  002056  24F3               	addwf	prodl,w,c
  3731  002058  6ED9               	movwf	fsr2l,c
  3732  00205A  0E00               	movlw	high _I2c
  3733  00205C  20F4               	addwfc	prodh,w,c
  3734  00205E  6EDA               	movwf	fsr2h,c
  3735  002060  0E00               	movlw	0
  3736  002062  6EDF               	movwf	indf2,c
  3737                           
  3738                           ; BSR set to: 0
  3739  002064  0012               	return	
  3740  002066                     __end_of_I2cData:
  3741                           	opt stack 0
  3742                           tblptru	equ	0xFF8
  3743                           tblptrh	equ	0xFF7
  3744                           tblptrl	equ	0xFF6
  3745                           tablat	equ	0xFF5
  3746                           prodh	equ	0xFF4
  3747                           prodl	equ	0xFF3
  3748                           intcon	equ	0xFF2
  3749                           postinc0	equ	0xFEE
  3750                           wreg	equ	0xFE8
  3751                           postdec1	equ	0xFE5
  3752                           fsr1l	equ	0xFE1
  3753                           indf2	equ	0xFDF
  3754                           fsr2h	equ	0xFDA
  3755                           fsr2l	equ	0xFD9
  3756                           status	equ	0xFD8
  3757                           
  3758 ;; *************** function _InterruptSettings *****************
  3759 ;; Defined at:
  3760 ;;		line 111 in file "../settings.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;		None
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;		None
  3765 ;; Return value:  Size  Location     Type
  3766 ;;		None               void
  3767 ;; Registers used:
  3768 ;;		None
  3769 ;; Tracked objects:
  3770 ;;		On entry : 0/0
  3771 ;;		On exit  : 0/0
  3772 ;;		Unchanged: 0/0
  3773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3778 ;;Total ram usage:        0 bytes
  3779 ;; Hardware stack levels used:    1
  3780 ;; Hardware stack levels required when called:    5
  3781 ;; This function calls:
  3782 ;;		Nothing
  3783 ;; This function is called by:
  3784 ;;		_main
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           
  3788                           	psect	text15
  3789  002A62                     __ptext15:
  3790                           	opt stack 0
  3791  002A62                     _InterruptSettings:
  3792                           	opt stack 25
  3793                           
  3794                           ;settings.c: 113: RCONbits.IPEN=1;
  3795                           
  3796                           ; BSR set to: 0
  3797                           ;incstack = 0
  3798  002A62  8ED0               	bsf	4048,7,c	;volatile
  3799                           
  3800                           ;settings.c: 115: INTCON2bits.TMR0IP=0;
  3801  002A64  94F1               	bcf	intcon2,2,c	;volatile
  3802                           
  3803                           ;settings.c: 116: INTCONbits.TMR0IF = 0;
  3804  002A66  94F2               	bcf	intcon,2,c	;volatile
  3805                           
  3806                           ;settings.c: 117: INTCONbits.TMR0IE=1;
  3807  002A68  8AF2               	bsf	intcon,5,c	;volatile
  3808                           
  3809                           ;settings.c: 119: INTCON2bits.INTEDG0=0;
  3810  002A6A  9CF1               	bcf	intcon2,6,c	;volatile
  3811                           
  3812                           ;settings.c: 120: INTCONbits.INT0IF = 0;
  3813  002A6C  92F2               	bcf	intcon,1,c	;volatile
  3814                           
  3815                           ;settings.c: 121: INTCONbits.INT0IE=1;
  3816  002A6E  88F2               	bsf	intcon,4,c	;volatile
  3817                           
  3818                           ;settings.c: 123: IPR1bits.TMR1IP=1;
  3819  002A70  809F               	bsf	3999,0,c	;volatile
  3820                           
  3821                           ;settings.c: 124: PIR1bits.TMR1IF = 0;
  3822  002A72  909E               	bcf	3998,0,c	;volatile
  3823                           
  3824                           ;settings.c: 125: PIE1bits.TMR1IE=1;
  3825  002A74  809D               	bsf	3997,0,c	;volatile
  3826  002A76  0012               	return	
  3827  002A78                     __end_of_InterruptSettings:
  3828                           	opt stack 0
  3829                           tblptru	equ	0xFF8
  3830                           tblptrh	equ	0xFF7
  3831                           tblptrl	equ	0xFF6
  3832                           tablat	equ	0xFF5
  3833                           prodh	equ	0xFF4
  3834                           prodl	equ	0xFF3
  3835                           intcon	equ	0xFF2
  3836                           intcon2	equ	0xFF1
  3837                           postinc0	equ	0xFEE
  3838                           wreg	equ	0xFE8
  3839                           postdec1	equ	0xFE5
  3840                           fsr1l	equ	0xFE1
  3841                           indf2	equ	0xFDF
  3842                           fsr2h	equ	0xFDA
  3843                           fsr2l	equ	0xFD9
  3844                           status	equ	0xFD8
  3845                           
  3846 ;; *************** function _I2cSettings *****************
  3847 ;; Defined at:
  3848 ;;		line 84 in file "../myi2c.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;		None
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;		None
  3853 ;; Return value:  Size  Location     Type
  3854 ;;		None               void
  3855 ;; Registers used:
  3856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3864 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3865 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3866 ;;Total ram usage:        4 bytes
  3867 ;; Hardware stack levels used:    1
  3868 ;; Hardware stack levels required when called:    6
  3869 ;; This function calls:
  3870 ;;		_OpenI2C
  3871 ;;		___wmul
  3872 ;; This function is called by:
  3873 ;;		_main
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           	psect	text16
  3878  001348                     __ptext16:
  3879                           	opt stack 0
  3880  001348                     _I2cSettings:
  3881                           	opt stack 24
  3882                           
  3883                           ;myi2c.c: 86: OpenI2C(0b00001000, 0b10000000);
  3884                           
  3885                           ;incstack = 0
  3886  001348  0100               	movlb	0	; () banked
  3887  00134A  6FB1               	movwf	??_I2cSettings& (0+255),b
  3888  00134C  0E80               	movlw	128
  3889  00134E  0100               	movlb	0	; () banked
  3890  001350  0100               	movlb	0	; () banked
  3891  001352  6FAB               	movwf	OpenI2C@slew& (0+255),b
  3892  001354  0100               	movlb	0	; () banked
  3893  001356  51B1               	movf	??_I2cSettings& (0+255),w,b
  3894  001358  0E08               	movlw	8
  3895  00135A  ECC5  F014         	call	_OpenI2C
  3896                           
  3897                           ;myi2c.c: 87: SSPADD=99;
  3898  00135E  0E63               	movlw	99
  3899  001360  6EC8               	movwf	4040,c	;volatile
  3900                           
  3901                           ;myi2c.c: 91: IPR1bits.SSPIP=1;
  3902  001362  869F               	bsf	3999,3,c	;volatile
  3903                           
  3904                           ;myi2c.c: 92: IPR2bits.BCLIP=1;
  3905  001364  86A2               	bsf	4002,3,c	;volatile
  3906                           
  3907                           ;myi2c.c: 93: PIR1bits.SSPIF=0;
  3908  001366  969E               	bcf	3998,3,c	;volatile
  3909                           
  3910                           ;myi2c.c: 94: PIE1bits.SSPIE=1;
  3911  001368  869D               	bsf	3997,3,c	;volatile
  3912                           
  3913                           ;myi2c.c: 95: PIE2bits.BCLIE=1;
  3914  00136A  86A0               	bsf	4000,3,c	;volatile
  3915                           
  3916                           ;myi2c.c: 98: I2cBusCollFlag = 0;
  3917  00136C  0100               	movlb	0	; () banked
  3918  00136E  6FB1               	movwf	??_I2cSettings& (0+255),b
  3919  001370  0E00               	movlw	0
  3920  001372  6E49               	movwf	_I2cBusCollFlag,c
  3921  001374  0100               	movlb	0	; () banked
  3922  001376  51B1               	movf	??_I2cSettings& (0+255),w,b
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;myi2c.c: 99: I2cEventFlag = 0;
  3926  001378  0100               	movlb	0	; () banked
  3927  00137A  6FB1               	movwf	??_I2cSettings& (0+255),b
  3928  00137C  0E00               	movlw	0
  3929  00137E  6E4C               	movwf	_I2cEventFlag,c
  3930  001380  0100               	movlb	0	; () banked
  3931  001382  51B1               	movf	??_I2cSettings& (0+255),w,b
  3932                           
  3933                           ; BSR set to: 0
  3934                           ;myi2c.c: 100: I2cBusyFlag = 0;
  3935  001384  0100               	movlb	0	; () banked
  3936  001386  6FB1               	movwf	??_I2cSettings& (0+255),b
  3937  001388  0E00               	movlw	0
  3938  00138A  6E4A               	movwf	_I2cBusyFlag,c
  3939  00138C  0100               	movlb	0	; () banked
  3940  00138E  51B1               	movf	??_I2cSettings& (0+255),w,b
  3941                           
  3942                           ; BSR set to: 0
  3943                           ;myi2c.c: 101: for (i=0; i<1; i++)
  3944  001390  0E00               	movlw	0
  3945  001392  6E43               	movwf	_i+1,c
  3946  001394  0E00               	movlw	0
  3947  001396  6E42               	movwf	_i,c
  3948  001398                     
  3949                           ; BSR set to: 0
  3950  001398  5043               	movf	_i+1,w,c
  3951  00139A  0A80               	xorlw	128
  3952  00139C  0F80               	addlw	-128
  3953  00139E  0E01               	movlw	1
  3954  0013A0  B4D8               	btfsc	status,2,c
  3955  0013A2  5C42               	subwf	_i,w,c
  3956  0013A4  B0D8               	btfsc	status,0,c
  3957  0013A6  D0D7               	goto	l302
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;myi2c.c: 102: {
  3961                           ;myi2c.c: 103: I2c[i].Flag.Tx = 0;
  3962                           
  3963                           ; BSR set to: 0
  3964                           
  3965                           ; BSR set to: 0
  3966  0013A8  C042  F0AB         	movff	_i,___wmul@multiplier
  3967  0013AC  C043  F0AC         	movff	_i+1,___wmul@multiplier+1
  3968  0013B0  0E00               	movlw	0
  3969  0013B2  0100               	movlb	0	; () banked
  3970  0013B4  0100               	movlb	0	; () banked
  3971  0013B6  6FAE               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3972  0013B8  0E0A               	movlw	10
  3973  0013BA  0100               	movlb	0	; () banked
  3974  0013BC  6FAD               	movwf	___wmul@multiplicand& (0+255),b
  3975  0013BE  ECDC  F013         	call	___wmul	;wreg free
  3976  0013C2  0E56               	movlw	low _I2c
  3977  0013C4  0100               	movlb	0	; () banked
  3978  0013C6  0100               	movlb	0	; () banked
  3979  0013C8  25AB               	addwf	?___wmul& (0+255),w,b
  3980  0013CA  6ED9               	movwf	fsr2l,c
  3981  0013CC  0E00               	movlw	high _I2c
  3982  0013CE  0100               	movlb	0	; () banked
  3983  0013D0  0100               	movlb	0	; () banked
  3984  0013D2  21AC               	addwfc	(?___wmul+1)& (0+255),w,b
  3985  0013D4  6EDA               	movwf	fsr2h,c
  3986  0013D6  98DF               	bcf	indf2,4,c
  3987  0013D8  9ADF               	bcf	indf2,5,c
  3988  0013DA  9CDF               	bcf	indf2,6,c
  3989  0013DC  9EDF               	bcf	indf2,7,c
  3990                           
  3991                           ;myi2c.c: 104: I2c[i].Flag.Rx = 0;
  3992  0013DE  C042  F0AB         	movff	_i,___wmul@multiplier
  3993  0013E2  C043  F0AC         	movff	_i+1,___wmul@multiplier+1
  3994  0013E6  0E00               	movlw	0
  3995  0013E8  0100               	movlb	0	; () banked
  3996  0013EA  0100               	movlb	0	; () banked
  3997  0013EC  6FAE               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3998  0013EE  0E0A               	movlw	10
  3999  0013F0  0100               	movlb	0	; () banked
  4000  0013F2  6FAD               	movwf	___wmul@multiplicand& (0+255),b
  4001  0013F4  ECDC  F013         	call	___wmul	;wreg free
  4002  0013F8  0E56               	movlw	low _I2c
  4003  0013FA  0100               	movlb	0	; () banked
  4004  0013FC  0100               	movlb	0	; () banked
  4005  0013FE  25AB               	addwf	?___wmul& (0+255),w,b
  4006  001400  6ED9               	movwf	fsr2l,c
  4007  001402  0E00               	movlw	high _I2c
  4008  001404  0100               	movlb	0	; () banked
  4009  001406  0100               	movlb	0	; () banked
  4010  001408  21AC               	addwfc	(?___wmul+1)& (0+255),w,b
  4011  00140A  6EDA               	movwf	fsr2h,c
  4012  00140C  90DF               	bcf	indf2,0,c
  4013  00140E  92DF               	bcf	indf2,1,c
  4014  001410  94DF               	bcf	indf2,2,c
  4015  001412  96DF               	bcf	indf2,3,c
  4016                           
  4017                           ;myi2c.c: 105: I2c[i].Done = 0;
  4018  001414  C042  F0AB         	movff	_i,___wmul@multiplier
  4019  001418  C043  F0AC         	movff	_i+1,___wmul@multiplier+1
  4020  00141C  0E00               	movlw	0
  4021  00141E  0100               	movlb	0	; () banked
  4022  001420  0100               	movlb	0	; () banked
  4023  001422  6FAE               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4024  001424  0E0A               	movlw	10
  4025  001426  0100               	movlb	0	; () banked
  4026  001428  6FAD               	movwf	___wmul@multiplicand& (0+255),b
  4027  00142A  ECDC  F013         	call	___wmul	;wreg free
  4028  00142E  0E01               	movlw	1
  4029  001430  0100               	movlb	0	; () banked
  4030  001432  0100               	movlb	0	; () banked
  4031  001434  27AB               	addwf	?___wmul& (0+255),f,b
  4032  001436  0E00               	movlw	0
  4033  001438  0100               	movlb	0	; () banked
  4034  00143A  23AC               	addwfc	(?___wmul+1)& (0+255),f,b
  4035  00143C  0E56               	movlw	low _I2c
  4036  00143E  0100               	movlb	0	; () banked
  4037  001440  0100               	movlb	0	; () banked
  4038  001442  25AB               	addwf	?___wmul& (0+255),w,b
  4039  001444  6ED9               	movwf	fsr2l,c
  4040  001446  0E00               	movlw	high _I2c
  4041  001448  0100               	movlb	0	; () banked
  4042  00144A  0100               	movlb	0	; () banked
  4043  00144C  21AC               	addwfc	(?___wmul+1)& (0+255),w,b
  4044  00144E  6EDA               	movwf	fsr2h,c
  4045  001450  0E00               	movlw	0
  4046  001452  6EDF               	movwf	indf2,c
  4047                           
  4048                           ; BSR set to: 0
  4049                           ;myi2c.c: 106: for (j=0; j<=1; j++)
  4050  001454  0E00               	movlw	0
  4051  001456  6E45               	movwf	_j+1,c
  4052  001458  0E00               	movlw	0
  4053  00145A  6E44               	movwf	_j,c
  4054  00145C                     
  4055                           ; BSR set to: 0
  4056  00145C  5045               	movf	_j+1,w,c
  4057  00145E  0A80               	xorlw	128
  4058  001460  0F80               	addlw	-128
  4059  001462  0E02               	movlw	2
  4060  001464  B4D8               	btfsc	status,2,c
  4061  001466  5C44               	subwf	_j,w,c
  4062  001468  B0D8               	btfsc	status,0,c
  4063  00146A  D033               	goto	l3289
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;myi2c.c: 107: {
  4067                           ;myi2c.c: 108: I2c[i].RxBuff[j] = 0;
  4068                           
  4069                           ; BSR set to: 0
  4070                           
  4071                           ; BSR set to: 0
  4072  00146C  C042  F0AB         	movff	_i,___wmul@multiplier
  4073  001470  C043  F0AC         	movff	_i+1,___wmul@multiplier+1
  4074  001474  0E00               	movlw	0
  4075  001476  0100               	movlb	0	; () banked
  4076  001478  0100               	movlb	0	; () banked
  4077  00147A  6FAE               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4078  00147C  0E0A               	movlw	10
  4079  00147E  0100               	movlb	0	; () banked
  4080  001480  6FAD               	movwf	___wmul@multiplicand& (0+255),b
  4081  001482  ECDC  F013         	call	___wmul	;wreg free
  4082  001486  0E02               	movlw	2
  4083  001488  2444               	addwf	_j,w,c
  4084  00148A  0100               	movlb	0	; () banked
  4085  00148C  6FB1               	movwf	??_I2cSettings& (0+255),b
  4086  00148E  0E00               	movlw	0
  4087  001490  2045               	addwfc	_j+1,w,c
  4088  001492  0100               	movlb	0	; () banked
  4089  001494  6FB2               	movwf	(??_I2cSettings+1)& (0+255),b
  4090  001496  0E56               	movlw	low _I2c
  4091  001498  0100               	movlb	0	; () banked
  4092  00149A  6FB3               	movwf	(??_I2cSettings+2)& (0+255),b
  4093  00149C  0E00               	movlw	high _I2c
  4094  00149E  6FB4               	movwf	(??_I2cSettings+3)& (0+255),b
  4095  0014A0  0100               	movlb	0	; () banked
  4096  0014A2  51B1               	movf	??_I2cSettings& (0+255),w,b
  4097  0014A4  0100               	movlb	0	; () banked
  4098  0014A6  27B3               	addwf	(??_I2cSettings+2)& (0+255),f,b
  4099  0014A8  0100               	movlb	0	; () banked
  4100  0014AA  51B2               	movf	(??_I2cSettings+1)& (0+255),w,b
  4101  0014AC  0100               	movlb	0	; () banked
  4102  0014AE  23B4               	addwfc	(??_I2cSettings+3)& (0+255),f,b
  4103  0014B0  0100               	movlb	0	; () banked
  4104  0014B2  0100               	movlb	0	; () banked
  4105  0014B4  51AB               	movf	?___wmul& (0+255),w,b
  4106  0014B6  0100               	movlb	0	; () banked
  4107  0014B8  25B3               	addwf	(??_I2cSettings+2)& (0+255),w,b
  4108  0014BA  6ED9               	movwf	fsr2l,c
  4109  0014BC  0100               	movlb	0	; () banked
  4110  0014BE  0100               	movlb	0	; () banked
  4111  0014C0  51AC               	movf	(?___wmul+1)& (0+255),w,b
  4112  0014C2  0100               	movlb	0	; () banked
  4113  0014C4  21B4               	addwfc	(??_I2cSettings+3)& (0+255),w,b
  4114  0014C6  6EDA               	movwf	fsr2h,c
  4115  0014C8  0E00               	movlw	0
  4116  0014CA  6EDF               	movwf	indf2,c
  4117                           
  4118                           ; BSR set to: 0
  4119  0014CC  4A44               	infsnz	_j,f,c
  4120  0014CE  2A45               	incf	_j+1,f,c
  4121  0014D0  D7C5               	goto	L6
  4122  0014D2                     l3289:
  4123                           
  4124                           ; BSR set to: 0
  4125                           ;myi2c.c: 109: }
  4126                           ;myi2c.c: 111: for (j=0; j<=3; j++)
  4127  0014D2  0E00               	movlw	0
  4128  0014D4  6E45               	movwf	_j+1,c
  4129  0014D6  0E00               	movlw	0
  4130  0014D8  6E44               	movwf	_j,c
  4131  0014DA                     
  4132                           ; BSR set to: 0
  4133  0014DA  5045               	movf	_j+1,w,c
  4134  0014DC  0A80               	xorlw	128
  4135  0014DE  0F80               	addlw	-128
  4136  0014E0  0E04               	movlw	4
  4137  0014E2  B4D8               	btfsc	status,2,c
  4138  0014E4  5C44               	subwf	_j,w,c
  4139  0014E6  B0D8               	btfsc	status,0,c
  4140  0014E8  D033               	goto	l3301
  4141                           
  4142                           ; BSR set to: 0
  4143                           ;myi2c.c: 112: {
  4144                           ;myi2c.c: 113: I2c[i].TxBuff[j] = 0;
  4145                           
  4146                           ; BSR set to: 0
  4147                           
  4148                           ; BSR set to: 0
  4149  0014EA  C042  F0AB         	movff	_i,___wmul@multiplier
  4150  0014EE  C043  F0AC         	movff	_i+1,___wmul@multiplier+1
  4151  0014F2  0E00               	movlw	0
  4152  0014F4  0100               	movlb	0	; () banked
  4153  0014F6  0100               	movlb	0	; () banked
  4154  0014F8  6FAE               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4155  0014FA  0E0A               	movlw	10
  4156  0014FC  0100               	movlb	0	; () banked
  4157  0014FE  6FAD               	movwf	___wmul@multiplicand& (0+255),b
  4158  001500  ECDC  F013         	call	___wmul	;wreg free
  4159  001504  0E06               	movlw	6
  4160  001506  2444               	addwf	_j,w,c
  4161  001508  0100               	movlb	0	; () banked
  4162  00150A  6FB1               	movwf	??_I2cSettings& (0+255),b
  4163  00150C  0E00               	movlw	0
  4164  00150E  2045               	addwfc	_j+1,w,c
  4165  001510  0100               	movlb	0	; () banked
  4166  001512  6FB2               	movwf	(??_I2cSettings+1)& (0+255),b
  4167  001514  0E56               	movlw	low _I2c
  4168  001516  0100               	movlb	0	; () banked
  4169  001518  6FB3               	movwf	(??_I2cSettings+2)& (0+255),b
  4170  00151A  0E00               	movlw	high _I2c
  4171  00151C  6FB4               	movwf	(??_I2cSettings+3)& (0+255),b
  4172  00151E  0100               	movlb	0	; () banked
  4173  001520  51B1               	movf	??_I2cSettings& (0+255),w,b
  4174  001522  0100               	movlb	0	; () banked
  4175  001524  27B3               	addwf	(??_I2cSettings+2)& (0+255),f,b
  4176  001526  0100               	movlb	0	; () banked
  4177  001528  51B2               	movf	(??_I2cSettings+1)& (0+255),w,b
  4178  00152A  0100               	movlb	0	; () banked
  4179  00152C  23B4               	addwfc	(??_I2cSettings+3)& (0+255),f,b
  4180  00152E  0100               	movlb	0	; () banked
  4181  001530  0100               	movlb	0	; () banked
  4182  001532  51AB               	movf	?___wmul& (0+255),w,b
  4183  001534  0100               	movlb	0	; () banked
  4184  001536  25B3               	addwf	(??_I2cSettings+2)& (0+255),w,b
  4185  001538  6ED9               	movwf	fsr2l,c
  4186  00153A  0100               	movlb	0	; () banked
  4187  00153C  0100               	movlb	0	; () banked
  4188  00153E  51AC               	movf	(?___wmul+1)& (0+255),w,b
  4189  001540  0100               	movlb	0	; () banked
  4190  001542  21B4               	addwfc	(??_I2cSettings+3)& (0+255),w,b
  4191  001544  6EDA               	movwf	fsr2h,c
  4192  001546  0E00               	movlw	0
  4193  001548  6EDF               	movwf	indf2,c
  4194                           
  4195                           ; BSR set to: 0
  4196  00154A  4A44               	infsnz	_j,f,c
  4197  00154C  2A45               	incf	_j+1,f,c
  4198  00154E  D7C5               	goto	L7
  4199  001550                     l3301:
  4200                           
  4201                           ; BSR set to: 0
  4202  001550  4A42               	infsnz	_i,f,c
  4203  001552  2A43               	incf	_i+1,f,c
  4204  001554  D721               	goto	L8
  4205  001556                     l302:
  4206                           
  4207                           ; BSR set to: 0
  4208  001556  0012               	return	
  4209  001558                     __end_of_I2cSettings:
  4210                           	opt stack 0
  4211                           tblptru	equ	0xFF8
  4212                           tblptrh	equ	0xFF7
  4213                           tblptrl	equ	0xFF6
  4214                           tablat	equ	0xFF5
  4215                           prodh	equ	0xFF4
  4216                           prodl	equ	0xFF3
  4217                           intcon	equ	0xFF2
  4218                           intcon2	equ	0xFF1
  4219                           postinc0	equ	0xFEE
  4220                           wreg	equ	0xFE8
  4221                           postdec1	equ	0xFE5
  4222                           fsr1l	equ	0xFE1
  4223                           indf2	equ	0xFDF
  4224                           fsr2h	equ	0xFDA
  4225                           fsr2l	equ	0xFD9
  4226                           status	equ	0xFD8
  4227                           
  4228 ;; *************** function _OpenI2C *****************
  4229 ;; Defined at:
  4230 ;;		line 14 in file "/Applications/microchip/xc8/v1.31/sources/pic18/plib/i2c/i2c_open.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;  sync_mode       1    wreg     unsigned char 
  4233 ;;  slew            1    0[BANK0 ] unsigned char 
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;  sync_mode       1    1[BANK0 ] unsigned char 
  4236 ;; Return value:  Size  Location     Type
  4237 ;;		None               void
  4238 ;; Registers used:
  4239 ;;		wreg, status,2, status,0
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4245 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4246 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4248 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4249 ;;Total ram usage:        2 bytes
  4250 ;; Hardware stack levels used:    1
  4251 ;; Hardware stack levels required when called:    5
  4252 ;; This function calls:
  4253 ;;		Nothing
  4254 ;; This function is called by:
  4255 ;;		_I2cSettings
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           	psect	text17
  4260  00298A                     __ptext17:
  4261                           	opt stack 0
  4262  00298A                     _OpenI2C:
  4263                           	opt stack 24
  4264                           
  4265                           ; BSR set to: 0
  4266                           ;incstack = 0
  4267                           ;OpenI2C@sync_mode stored from wreg
  4268  00298A  CFE8 F0AC          	movff	wreg,OpenI2C@sync_mode
  4269  00298E  0E3F               	movlw	63
  4270  002990  16C7               	andwf	4039,f,c	;volatile
  4271  002992  0E00               	movlw	0
  4272  002994  6EC6               	movwf	4038,c	;volatile
  4273  002996  0E00               	movlw	0
  4274  002998  6EC5               	movwf	4037,c	;volatile
  4275  00299A  0100               	movlb	0	; () banked
  4276  00299C  0100               	movlb	0	; () banked
  4277  00299E  51AC               	movf	OpenI2C@sync_mode& (0+255),w,b
  4278  0029A0  12C6               	iorwf	4038,f,c	;volatile
  4279  0029A2  0100               	movlb	0	; () banked
  4280  0029A4  0100               	movlb	0	; () banked
  4281  0029A6  51AB               	movf	OpenI2C@slew& (0+255),w,b
  4282  0029A8  12C7               	iorwf	4039,f,c	;volatile
  4283                           
  4284                           ; BSR set to: 0
  4285  0029AA  8694               	bsf	3988,3,c	;volatile
  4286                           
  4287                           ; BSR set to: 0
  4288  0029AC  8894               	bsf	3988,4,c	;volatile
  4289                           
  4290                           ; BSR set to: 0
  4291  0029AE  8AC6               	bsf	4038,5,c	;volatile
  4292                           
  4293                           ; BSR set to: 0
  4294  0029B0  0012               	return	
  4295  0029B2                     __end_of_OpenI2C:
  4296                           	opt stack 0
  4297                           tblptru	equ	0xFF8
  4298                           tblptrh	equ	0xFF7
  4299                           tblptrl	equ	0xFF6
  4300                           tablat	equ	0xFF5
  4301                           prodh	equ	0xFF4
  4302                           prodl	equ	0xFF3
  4303                           intcon	equ	0xFF2
  4304                           intcon2	equ	0xFF1
  4305                           postinc0	equ	0xFEE
  4306                           wreg	equ	0xFE8
  4307                           postdec1	equ	0xFE5
  4308                           fsr1l	equ	0xFE1
  4309                           indf2	equ	0xFDF
  4310                           fsr2h	equ	0xFDA
  4311                           fsr2l	equ	0xFD9
  4312                           status	equ	0xFD8
  4313                           
  4314 ;; *************** function _CommSetting *****************
  4315 ;; Defined at:
  4316 ;;		line 7 in file "../comm.c"
  4317 ;; Parameters:    Size  Location     Type
  4318 ;;		None
  4319 ;; Auto vars:     Size  Location     Type
  4320 ;;		None
  4321 ;; Return value:  Size  Location     Type
  4322 ;;		None               void
  4323 ;; Registers used:
  4324 ;;		wreg, status,2
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4334 ;;Total ram usage:        0 bytes
  4335 ;; Hardware stack levels used:    1
  4336 ;; Hardware stack levels required when called:    5
  4337 ;; This function calls:
  4338 ;;		Nothing
  4339 ;; This function is called by:
  4340 ;;		_main
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           	psect	text18
  4345  0029B2                     __ptext18:
  4346                           	opt stack 0
  4347  0029B2                     _CommSetting:
  4348                           	opt stack 25
  4349                           
  4350                           ;comm.c: 31: SPBRGH=0;
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;incstack = 0
  4354  0029B2  0E00               	movlw	0
  4355  0029B4  6EB0               	movwf	4016,c	;volatile
  4356                           
  4357                           ;comm.c: 32: SPBRG=0x0411;
  4358  0029B6  0E11               	movlw	17
  4359  0029B8  6EAF               	movwf	4015,c	;volatile
  4360                           
  4361                           ;comm.c: 38: TXSTAbits.BRGH=1;
  4362  0029BA  84AC               	bsf	4012,2,c	;volatile
  4363                           
  4364                           ;comm.c: 39: TXSTAbits.SYNC=0;
  4365  0029BC  98AC               	bcf	4012,4,c	;volatile
  4366                           
  4367                           ;comm.c: 40: BAUDCONbits.BRG16=1;
  4368  0029BE  86B8               	bsf	4024,3,c	;volatile
  4369                           
  4370                           ;comm.c: 43: RCSTAbits.SPEN=1;
  4371  0029C0  8EAB               	bsf	4011,7,c	;volatile
  4372                           
  4373                           ;comm.c: 44: RCSTAbits.CREN=1;
  4374  0029C2  88AB               	bsf	4011,4,c	;volatile
  4375                           
  4376                           ;comm.c: 45: RCSTAbits.SREN=0;
  4377  0029C4  9AAB               	bcf	4011,5,c	;volatile
  4378                           
  4379                           ;comm.c: 46: TXSTAbits.TX9=0;
  4380  0029C6  9CAC               	bcf	4012,6,c	;volatile
  4381                           
  4382                           ;comm.c: 47: RCSTAbits.RX9=0;
  4383  0029C8  9CAB               	bcf	4011,6,c	;volatile
  4384                           
  4385                           ;comm.c: 48: TXSTAbits.TXEN=0;
  4386  0029CA  9AAC               	bcf	4012,5,c	;volatile
  4387                           
  4388                           ;comm.c: 49: TXSTAbits.TXEN=0;
  4389  0029CC  9AAC               	bcf	4012,5,c	;volatile
  4390                           
  4391                           ;comm.c: 50: IPR1bits.TXIP=0;
  4392  0029CE  989F               	bcf	3999,4,c	;volatile
  4393                           
  4394                           ;comm.c: 51: PIE1bits.TXIE=0;
  4395  0029D0  989D               	bcf	3997,4,c	;volatile
  4396                           
  4397                           ;comm.c: 53: IPR1bits.RCIP=0;
  4398  0029D2  9A9F               	bcf	3999,5,c	;volatile
  4399                           
  4400                           ;comm.c: 54: PIE1bits.RCIE=0;
  4401  0029D4  9A9D               	bcf	3997,5,c	;volatile
  4402  0029D6  0012               	return	
  4403  0029D8                     __end_of_CommSetting:
  4404                           	opt stack 0
  4405                           tblptru	equ	0xFF8
  4406                           tblptrh	equ	0xFF7
  4407                           tblptrl	equ	0xFF6
  4408                           tablat	equ	0xFF5
  4409                           prodh	equ	0xFF4
  4410                           prodl	equ	0xFF3
  4411                           intcon	equ	0xFF2
  4412                           intcon2	equ	0xFF1
  4413                           postinc0	equ	0xFEE
  4414                           wreg	equ	0xFE8
  4415                           postdec1	equ	0xFE5
  4416                           fsr1l	equ	0xFE1
  4417                           indf2	equ	0xFDF
  4418                           fsr2h	equ	0xFDA
  4419                           fsr2l	equ	0xFD9
  4420                           status	equ	0xFD8
  4421                           
  4422 ;; *************** function _CommFsmSched *****************
  4423 ;; Defined at:
  4424 ;;		line 71 in file "../comm.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;  FsmStruct       2   19[BANK0 ] PTR struct FsmTable
  4427 ;;		 -> NULL(0), ReadTimeFsm(25), 
  4428 ;; Auto vars:     Size  Location     Type
  4429 ;;  FsmStat         1   23[BANK0 ] unsigned char 
  4430 ;; Return value:  Size  Location     Type
  4431 ;;		None               void
  4432 ;; Registers used:
  4433 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4439 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4440 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4441 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4442 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4443 ;;Total ram usage:        5 bytes
  4444 ;; Hardware stack levels used:    1
  4445 ;; Hardware stack levels required when called:    8
  4446 ;; This function calls:
  4447 ;;		_CommFsmIdle
  4448 ;;		_StartRx
  4449 ;;		_StartTx
  4450 ;;		_TimeDecode
  4451 ;; This function is called by:
  4452 ;;		_main
  4453 ;; This function uses a non-reentrant model
  4454 ;;
  4455                           
  4456                           	psect	text19
  4457  001558                     __ptext19:
  4458                           	opt stack 0
  4459  001558                     _CommFsmSched:
  4460                           	opt stack 22
  4461                           
  4462                           ;comm.c: 73: unsigned char FsmStat;
  4463                           ;comm.c: 75: FsmStat = FsmStruct[FsmIndx].Stat;
  4464                           
  4465                           ;incstack = 0
  4466  001558  5047               	movf	_FsmIndx,w,c
  4467  00155A  0D05               	mullw	5
  4468  00155C  50F3               	movf	prodl,w,c
  4469  00155E  0100               	movlb	0	; () banked
  4470  001560  0100               	movlb	0	; () banked
  4471  001562  25BE               	addwf	CommFsmSched@FsmStruct& (0+255),w,b
  4472  001564  6ED9               	movwf	fsr2l,c
  4473  001566  50F4               	movf	prodh,w,c
  4474  001568  0100               	movlb	0	; () banked
  4475  00156A  0100               	movlb	0	; () banked
  4476  00156C  21BF               	addwfc	(CommFsmSched@FsmStruct+1)& (0+255),w,b
  4477  00156E  6EDA               	movwf	fsr2h,c
  4478  001570  50DF               	movf	indf2,w,c
  4479  001572  0100               	movlb	0	; () banked
  4480  001574  0100               	movlb	0	; () banked
  4481  001576  6FC2               	movwf	CommFsmSched@FsmStat& (0+255),b
  4482                           
  4483                           ;comm.c: 77: switch (FsmStat)
  4484  001578  D0DC               	goto	l3413
  4485  00157A                     l438:
  4486                           
  4487                           ; BSR set to: 0
  4488                           ;comm.c: 80: if(RxFsmFlag==0)
  4489  00157A  0100               	movlb	0	; () banked
  4490  00157C  0100               	movlb	0	; () banked
  4491  00157E  6789               	tstfsz	_RxFsmFlag& (0+255),b
  4492  001580  D01F               	goto	l3385
  4493                           
  4494                           ; BSR set to: 0
  4495                           ;comm.c: 81: {
  4496                           ;comm.c: 82: StartRx(FsmStruct[FsmIndx].Str);
  4497  001582  5047               	movf	_FsmIndx,w,c
  4498  001584  0D05               	mullw	5
  4499  001586  0100               	movlb	0	; () banked
  4500  001588  C0BE  F0C0         	movff	CommFsmSched@FsmStruct,??_CommFsmSched
  4501  00158C  0100               	movlb	0	; () banked
  4502  00158E  C0BF  F0C1         	movff	CommFsmSched@FsmStruct+1,??_CommFsmSched+1
  4503  001592  50F3               	movf	prodl,w,c
  4504  001594  0100               	movlb	0	; () banked
  4505  001596  27C0               	addwf	??_CommFsmSched& (0+255),f,b
  4506  001598  50F4               	movf	prodh,w,c
  4507  00159A  0100               	movlb	0	; () banked
  4508  00159C  23C1               	addwfc	(??_CommFsmSched+1)& (0+255),f,b
  4509  00159E  0E01               	movlw	1
  4510  0015A0  0100               	movlb	0	; () banked
  4511  0015A2  25C0               	addwf	??_CommFsmSched& (0+255),w,b
  4512  0015A4  6ED9               	movwf	fsr2l,c
  4513  0015A6  0E00               	movlw	0
  4514  0015A8  0100               	movlb	0	; () banked
  4515  0015AA  21C1               	addwfc	(??_CommFsmSched+1)& (0+255),w,b
  4516  0015AC  6EDA               	movwf	fsr2h,c
  4517  0015AE  0100               	movlb	0	; () banked
  4518  0015B0  CFDE F0AB          	movff	postinc2,StartRx@TxStr
  4519  0015B4  0100               	movlb	0	; () banked
  4520  0015B6  CFDD F0AC          	movff	postdec2,StartRx@TxStr+1
  4521  0015BA  ECFB  F014         	call	_StartRx	;wreg free
  4522                           
  4523                           ;comm.c: 83: }
  4524  0015BE  D0C6               	goto	l447
  4525  0015C0                     l3385:
  4526                           
  4527                           ;comm.c: 84: else
  4528                           ;comm.c: 85: {
  4529                           ;comm.c: 87: CommFsmState = (* FsmStruct[FsmIndx].pCallback);
  4530  0015C0  5047               	movf	_FsmIndx,w,c
  4531  0015C2  0D05               	mullw	5
  4532  0015C4  0100               	movlb	0	; () banked
  4533  0015C6  C0BE  F0C0         	movff	CommFsmSched@FsmStruct,??_CommFsmSched
  4534  0015CA  0100               	movlb	0	; () banked
  4535  0015CC  C0BF  F0C1         	movff	CommFsmSched@FsmStruct+1,??_CommFsmSched+1
  4536  0015D0  50F3               	movf	prodl,w,c
  4537  0015D2  0100               	movlb	0	; () banked
  4538  0015D4  27C0               	addwf	??_CommFsmSched& (0+255),f,b
  4539  0015D6  50F4               	movf	prodh,w,c
  4540  0015D8  0100               	movlb	0	; () banked
  4541  0015DA  23C1               	addwfc	(??_CommFsmSched+1)& (0+255),f,b
  4542  0015DC  0E03               	movlw	3
  4543  0015DE  0100               	movlb	0	; () banked
  4544  0015E0  25C0               	addwf	??_CommFsmSched& (0+255),w,b
  4545  0015E2  6ED9               	movwf	fsr2l,c
  4546  0015E4  0E00               	movlw	0
  4547  0015E6  0100               	movlb	0	; () banked
  4548  0015E8  21C1               	addwfc	(??_CommFsmSched+1)& (0+255),w,b
  4549  0015EA  6EDA               	movwf	fsr2h,c
  4550  0015EC  0100               	movlb	0	; () banked
  4551  0015EE  CFDE F0C9          	movff	postinc2,_CommFsmState
  4552  0015F2  0100               	movlb	0	; () banked
  4553  0015F4  CFDD F0CA          	movff	postdec2,_CommFsmState+1
  4554                           
  4555                           ; BSR set to: 0
  4556                           ;comm.c: 88: (* CommFsmState) () ;
  4557  0015F8  D801               	call	u2428
  4558  0015FA  D00C               	goto	u2429
  4559  0015FC                     u2428:
  4560  0015FC  0005               	push	
  4561  0015FE  6EFA               	movwf	pclath,c
  4562  001600  0100               	movlb	0	; () banked
  4563  001602  0100               	movlb	0	; () banked
  4564  001604  51C9               	movf	_CommFsmState& (0+255),w,b
  4565  001606  6EFD               	movwf	tosl,c
  4566  001608  0100               	movlb	0	; () banked
  4567  00160A  51CA               	movf	(_CommFsmState+1)& (0+255),w,b
  4568  00160C  6EFE               	movwf	tosh,c
  4569  00160E  6AFF               	clrf	tosu,c
  4570  001610  50FA               	movf	pclath,w,c
  4571  001612  0012               	return		;indir
  4572  001614                     u2429:
  4573                           
  4574                           ;comm.c: 89: FsmIndx++;
  4575  001614  2A47               	incf	_FsmIndx,f,c
  4576                           
  4577                           ;comm.c: 90: RxFsmFlag = 0;
  4578  001616  0100               	movlb	0	; () banked
  4579  001618  6FC0               	movwf	??_CommFsmSched& (0+255),b
  4580  00161A  0E00               	movlw	0
  4581  00161C  0100               	movlb	0	; () banked
  4582  00161E  0100               	movlb	0	; () banked
  4583  001620  6F89               	movwf	_RxFsmFlag& (0+255),b
  4584  001622  D07F               	goto	L10
  4585  001624                     l442:
  4586                           
  4587                           ; BSR set to: 0
  4588                           ;comm.c: 109: if(TxFsmFlag==0)
  4589  001624  0100               	movlb	0	; () banked
  4590  001626  0100               	movlb	0	; () banked
  4591  001628  678A               	tstfsz	_TxFsmFlag& (0+255),b
  4592  00162A  D01F               	goto	l3395
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;comm.c: 110: {
  4596                           ;comm.c: 111: StartTx(FsmStruct[FsmIndx].Str);
  4597  00162C  5047               	movf	_FsmIndx,w,c
  4598  00162E  0D05               	mullw	5
  4599  001630  0100               	movlb	0	; () banked
  4600  001632  C0BE  F0C0         	movff	CommFsmSched@FsmStruct,??_CommFsmSched
  4601  001636  0100               	movlb	0	; () banked
  4602  001638  C0BF  F0C1         	movff	CommFsmSched@FsmStruct+1,??_CommFsmSched+1
  4603  00163C  50F3               	movf	prodl,w,c
  4604  00163E  0100               	movlb	0	; () banked
  4605  001640  27C0               	addwf	??_CommFsmSched& (0+255),f,b
  4606  001642  50F4               	movf	prodh,w,c
  4607  001644  0100               	movlb	0	; () banked
  4608  001646  23C1               	addwfc	(??_CommFsmSched+1)& (0+255),f,b
  4609  001648  0E01               	movlw	1
  4610  00164A  0100               	movlb	0	; () banked
  4611  00164C  25C0               	addwf	??_CommFsmSched& (0+255),w,b
  4612  00164E  6ED9               	movwf	fsr2l,c
  4613  001650  0E00               	movlw	0
  4614  001652  0100               	movlb	0	; () banked
  4615  001654  21C1               	addwfc	(??_CommFsmSched+1)& (0+255),w,b
  4616  001656  6EDA               	movwf	fsr2h,c
  4617  001658  0100               	movlb	0	; () banked
  4618  00165A  CFDE F0B5          	movff	postinc2,StartTx@TxStr
  4619  00165E  0100               	movlb	0	; () banked
  4620  001660  CFDD F0B6          	movff	postdec2,StartTx@TxStr+1
  4621  001664  ECD7  F012         	call	_StartTx	;wreg free
  4622                           
  4623                           ;comm.c: 112: }
  4624  001668  D071               	goto	l447
  4625  00166A                     l3395:
  4626                           
  4627                           ;comm.c: 113: else
  4628                           ;comm.c: 114: {
  4629                           ;comm.c: 116: CommFsmState = (* FsmStruct[FsmIndx].pCallback);
  4630  00166A  5047               	movf	_FsmIndx,w,c
  4631  00166C  0D05               	mullw	5
  4632  00166E  0100               	movlb	0	; () banked
  4633  001670  C0BE  F0C0         	movff	CommFsmSched@FsmStruct,??_CommFsmSched
  4634  001674  0100               	movlb	0	; () banked
  4635  001676  C0BF  F0C1         	movff	CommFsmSched@FsmStruct+1,??_CommFsmSched+1
  4636  00167A  50F3               	movf	prodl,w,c
  4637  00167C  0100               	movlb	0	; () banked
  4638  00167E  27C0               	addwf	??_CommFsmSched& (0+255),f,b
  4639  001680  50F4               	movf	prodh,w,c
  4640  001682  0100               	movlb	0	; () banked
  4641  001684  23C1               	addwfc	(??_CommFsmSched+1)& (0+255),f,b
  4642  001686  0E03               	movlw	3
  4643  001688  0100               	movlb	0	; () banked
  4644  00168A  25C0               	addwf	??_CommFsmSched& (0+255),w,b
  4645  00168C  6ED9               	movwf	fsr2l,c
  4646  00168E  0E00               	movlw	0
  4647  001690  0100               	movlb	0	; () banked
  4648  001692  21C1               	addwfc	(??_CommFsmSched+1)& (0+255),w,b
  4649  001694  6EDA               	movwf	fsr2h,c
  4650  001696  0100               	movlb	0	; () banked
  4651  001698  CFDE F0C9          	movff	postinc2,_CommFsmState
  4652  00169C  0100               	movlb	0	; () banked
  4653  00169E  CFDD F0CA          	movff	postdec2,_CommFsmState+1
  4654                           
  4655                           ; BSR set to: 0
  4656                           ;comm.c: 117: (* CommFsmState) () ;
  4657  0016A2  D801               	call	u2448
  4658  0016A4  D00C               	goto	u2449
  4659  0016A6                     u2448:
  4660  0016A6  0005               	push	
  4661  0016A8  6EFA               	movwf	pclath,c
  4662  0016AA  0100               	movlb	0	; () banked
  4663  0016AC  0100               	movlb	0	; () banked
  4664  0016AE  51C9               	movf	_CommFsmState& (0+255),w,b
  4665  0016B0  6EFD               	movwf	tosl,c
  4666  0016B2  0100               	movlb	0	; () banked
  4667  0016B4  51CA               	movf	(_CommFsmState+1)& (0+255),w,b
  4668  0016B6  6EFE               	movwf	tosh,c
  4669  0016B8  6AFF               	clrf	tosu,c
  4670  0016BA  50FA               	movf	pclath,w,c
  4671  0016BC  0012               	return		;indir
  4672  0016BE                     u2449:
  4673                           
  4674                           ;comm.c: 118: FsmIndx++;
  4675  0016BE  2A47               	incf	_FsmIndx,f,c
  4676                           
  4677                           ;comm.c: 119: TxFsmFlag = 0;
  4678  0016C0  0100               	movlb	0	; () banked
  4679  0016C2  6FC0               	movwf	??_CommFsmSched& (0+255),b
  4680  0016C4  0E00               	movlw	0
  4681  0016C6  0100               	movlb	0	; () banked
  4682  0016C8  0100               	movlb	0	; () banked
  4683  0016CA  6F8A               	movwf	_TxFsmFlag& (0+255),b
  4684  0016CC  D02A               	goto	L10
  4685  0016CE                     l3403:
  4686                           
  4687                           ; BSR set to: 0
  4688                           ;comm.c: 125: CommFsmState = (* FsmStruct[FsmIndx].pCallback);
  4689  0016CE  5047               	movf	_FsmIndx,w,c
  4690  0016D0  0D05               	mullw	5
  4691  0016D2  0100               	movlb	0	; () banked
  4692  0016D4  C0BE  F0C0         	movff	CommFsmSched@FsmStruct,??_CommFsmSched
  4693  0016D8  0100               	movlb	0	; () banked
  4694  0016DA  C0BF  F0C1         	movff	CommFsmSched@FsmStruct+1,??_CommFsmSched+1
  4695  0016DE  50F3               	movf	prodl,w,c
  4696  0016E0  0100               	movlb	0	; () banked
  4697  0016E2  27C0               	addwf	??_CommFsmSched& (0+255),f,b
  4698  0016E4  50F4               	movf	prodh,w,c
  4699  0016E6  0100               	movlb	0	; () banked
  4700  0016E8  23C1               	addwfc	(??_CommFsmSched+1)& (0+255),f,b
  4701  0016EA  0E03               	movlw	3
  4702  0016EC  0100               	movlb	0	; () banked
  4703  0016EE  25C0               	addwf	??_CommFsmSched& (0+255),w,b
  4704  0016F0  6ED9               	movwf	fsr2l,c
  4705  0016F2  0E00               	movlw	0
  4706  0016F4  0100               	movlb	0	; () banked
  4707  0016F6  21C1               	addwfc	(??_CommFsmSched+1)& (0+255),w,b
  4708  0016F8  6EDA               	movwf	fsr2h,c
  4709  0016FA  0100               	movlb	0	; () banked
  4710  0016FC  CFDE F0C9          	movff	postinc2,_CommFsmState
  4711  001700  0100               	movlb	0	; () banked
  4712  001702  CFDD F0CA          	movff	postdec2,_CommFsmState+1
  4713                           
  4714                           ; BSR set to: 0
  4715                           ;comm.c: 126: (* CommFsmState) () ;
  4716  001706  D801               	call	u2458
  4717  001708  D00F               	goto	l3409
  4718  00170A                     u2458:
  4719  00170A  0005               	push	
  4720  00170C  6EFA               	movwf	pclath,c
  4721  00170E  0100               	movlb	0	; () banked
  4722  001710  0100               	movlb	0	; () banked
  4723  001712  51C9               	movf	_CommFsmState& (0+255),w,b
  4724  001714  6EFD               	movwf	tosl,c
  4725  001716  0100               	movlb	0	; () banked
  4726  001718  51CA               	movf	(_CommFsmState+1)& (0+255),w,b
  4727  00171A  6EFE               	movwf	tosh,c
  4728  00171C  6AFF               	clrf	tosu,c
  4729  00171E  50FA               	movf	pclath,w,c
  4730  001720  0012               	return		;indir
  4731  001722                     L10:
  4732  001722  0100               	movlb	0	; () banked
  4733  001724  51C0               	movf	??_CommFsmSched& (0+255),w,b
  4734                           
  4735                           ;comm.c: 128: break;
  4736  001726  D012               	goto	l447
  4737  001728                     l3409:
  4738                           
  4739                           ; BSR set to: 0
  4740                           ;comm.c: 131: CommFsmFlag = 0;
  4741  001728  0100               	movlb	0	; () banked
  4742  00172A  6FC0               	movwf	??_CommFsmSched& (0+255),b
  4743  00172C  0E00               	movlw	0
  4744  00172E  6E46               	movwf	_CommFsmFlag,c
  4745  001730  D7F8               	goto	L10
  4746  001732                     l3413:
  4747                           
  4748                           ; BSR set to: 0
  4749  001732  0100               	movlb	0	; () banked
  4750  001734  0100               	movlb	0	; () banked
  4751  001736  51C2               	movf	CommFsmSched@FsmStat& (0+255),w,b
  4752                           
  4753                           ; Switch size 1, requested type "space"
  4754                           ; Number of cases is 3, Range of values is 0 to 2
  4755                           ; switch strategies available:
  4756                           ; Name         Instructions Cycles
  4757                           ; simple_byte           10     6 (average)
  4758                           ;	Chosen strategy is simple_byte
  4759  001738  0A00               	xorlw	0	; case 0
  4760  00173A  B4D8               	btfsc	status,2,c
  4761  00173C  D71E               	goto	l438
  4762  00173E  0A01               	xorlw	1	; case 1
  4763  001740  B4D8               	btfsc	status,2,c
  4764  001742  D770               	goto	l442
  4765  001744  0A03               	xorlw	3	; case 2
  4766  001746  B4D8               	btfsc	status,2,c
  4767  001748  D7C2               	goto	l3403
  4768  00174A  D7EE               	goto	l3409
  4769  00174C                     l447:
  4770  00174C  0012               	return	
  4771  00174E                     __end_of_CommFsmSched:
  4772                           	opt stack 0
  4773                           tosu	equ	0xFFF
  4774                           tosh	equ	0xFFE
  4775                           tosl	equ	0xFFD
  4776                           pclath	equ	0xFFA
  4777                           tblptru	equ	0xFF8
  4778                           tblptrh	equ	0xFF7
  4779                           tblptrl	equ	0xFF6
  4780                           tablat	equ	0xFF5
  4781                           prodh	equ	0xFF4
  4782                           prodl	equ	0xFF3
  4783                           intcon	equ	0xFF2
  4784                           intcon2	equ	0xFF1
  4785                           postinc0	equ	0xFEE
  4786                           wreg	equ	0xFE8
  4787                           postdec1	equ	0xFE5
  4788                           fsr1l	equ	0xFE1
  4789                           indf2	equ	0xFDF
  4790                           postinc2	equ	0xFDE
  4791                           postdec2	equ	0xFDD
  4792                           fsr2h	equ	0xFDA
  4793                           fsr2l	equ	0xFD9
  4794                           status	equ	0xFD8
  4795                           
  4796 ;; *************** function _CommFsmIdle *****************
  4797 ;; Defined at:
  4798 ;;		line 57 in file "../comm.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;		None
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;		None
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  1    wreg      unsigned char 
  4805 ;; Registers used:
  4806 ;;		None
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4816 ;;Total ram usage:        0 bytes
  4817 ;; Hardware stack levels used:    1
  4818 ;; Hardware stack levels required when called:    5
  4819 ;; This function calls:
  4820 ;;		Nothing
  4821 ;; This function is called by:
  4822 ;;		_CommFsmSched
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           	psect	text20
  4827  002AA0                     __ptext20:
  4828                           	opt stack 0
  4829  002AA0                     _CommFsmIdle:
  4830                           	opt stack 24
  4831                           
  4832                           ;comm.c: 59: return '0' ;
  4833                           ;	Return value of _CommFsmIdle is never used
  4834                           
  4835                           ;incstack = 0
  4836  002AA0  0012               	return	
  4837  002AA2                     __end_of_CommFsmIdle:
  4838                           	opt stack 0
  4839                           tosu	equ	0xFFF
  4840                           tosh	equ	0xFFE
  4841                           tosl	equ	0xFFD
  4842                           pclath	equ	0xFFA
  4843                           tblptru	equ	0xFF8
  4844                           tblptrh	equ	0xFF7
  4845                           tblptrl	equ	0xFF6
  4846                           tablat	equ	0xFF5
  4847                           prodh	equ	0xFF4
  4848                           prodl	equ	0xFF3
  4849                           intcon	equ	0xFF2
  4850                           intcon2	equ	0xFF1
  4851                           postinc0	equ	0xFEE
  4852                           wreg	equ	0xFE8
  4853                           postdec1	equ	0xFE5
  4854                           fsr1l	equ	0xFE1
  4855                           indf2	equ	0xFDF
  4856                           postinc2	equ	0xFDE
  4857                           postdec2	equ	0xFDD
  4858                           fsr2h	equ	0xFDA
  4859                           fsr2l	equ	0xFD9
  4860                           status	equ	0xFD8
  4861                           
  4862 ;; *************** function _TimeDecode *****************
  4863 ;; Defined at:
  4864 ;;		line 208 in file "../WordClock.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;		None
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;  TimePoint       2   17[BANK0 ] int 
  4869 ;; Return value:  Size  Location     Type
  4870 ;;                  1    wreg      unsigned char 
  4871 ;; Registers used:
  4872 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4879 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4880 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4881 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4882 ;;Total ram usage:        6 bytes
  4883 ;; Hardware stack levels used:    1
  4884 ;; Hardware stack levels required when called:    7
  4885 ;; This function calls:
  4886 ;;		_atoi
  4887 ;;		_strcspn
  4888 ;; This function is called by:
  4889 ;;		_CommFsmSched
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           	psect	text21
  4894  001E6C                     __ptext21:
  4895                           	opt stack 0
  4896  001E6C                     _TimeDecode:
  4897                           	opt stack 22
  4898                           
  4899                           ;WordClock.c: 212: int TimePoint;
  4900                           ;WordClock.c: 214: TimePoint = strcspn(RXbuff, ":" );
  4901                           
  4902                           ;incstack = 0
  4903  001E6C  0101               	movlb	1	; () banked
  4904  001E6E  0E01               	movlw	high _RXbuff
  4905  001E70  0100               	movlb	0	; () banked
  4906  001E72  0100               	movlb	0	; () banked
  4907  001E74  6FB2               	movwf	(strcspn@s1+1)& (0+255),b
  4908  001E76  0101               	movlb	1	; () banked
  4909  001E78  0E00               	movlw	low _RXbuff
  4910  001E7A  0100               	movlb	0	; () banked
  4911  001E7C  0100               	movlb	0	; () banked
  4912  001E7E  6FB1               	movwf	strcspn@s1& (0+255),b
  4913  001E80  0E10               	movlw	high STR_6
  4914  001E82  0100               	movlb	0	; () banked
  4915  001E84  0100               	movlb	0	; () banked
  4916  001E86  6FB4               	movwf	(strcspn@s2+1)& (0+255),b
  4917  001E88  0E16               	movlw	low STR_6
  4918  001E8A  0100               	movlb	0	; () banked
  4919  001E8C  0100               	movlb	0	; () banked
  4920  001E8E  6FB3               	movwf	strcspn@s2& (0+255),b
  4921  001E90  EC64  F012         	call	_strcspn	;wreg free
  4922  001E94  0100               	movlb	0	; () banked
  4923  001E96  C0B1  F0BC         	movff	?_strcspn,TimeDecode@TimePoint
  4924  001E9A  0100               	movlb	0	; () banked
  4925  001E9C  C0B2  F0BD         	movff	?_strcspn+1,TimeDecode@TimePoint+1
  4926                           
  4927                           ; BSR set to: 0
  4928                           ;WordClock.c: 216: Hour = atoi(RXbuff+TimePoint-2);
  4929  001EA0  0EFE               	movlw	low (_RXbuff+-2)
  4930  001EA2  0100               	movlb	0	; () banked
  4931  001EA4  6FB8               	movwf	??_TimeDecode& (0+255),b
  4932  001EA6  0E00               	movlw	high (_RXbuff+-2)
  4933  001EA8  6FB9               	movwf	(??_TimeDecode+1)& (0+255),b
  4934  001EAA  0100               	movlb	0	; () banked
  4935  001EAC  0100               	movlb	0	; () banked
  4936  001EAE  51BC               	movf	TimeDecode@TimePoint& (0+255),w,b
  4937  001EB0  0100               	movlb	0	; () banked
  4938  001EB2  27B8               	addwf	??_TimeDecode& (0+255),f,b
  4939  001EB4  0100               	movlb	0	; () banked
  4940  001EB6  0100               	movlb	0	; () banked
  4941  001EB8  51BD               	movf	(TimeDecode@TimePoint+1)& (0+255),w,b
  4942  001EBA  0100               	movlb	0	; () banked
  4943  001EBC  23B9               	addwfc	(??_TimeDecode+1)& (0+255),f,b
  4944  001EBE  C0B8  F0B1         	movff	??_TimeDecode,atoi@s
  4945  001EC2  C0B9  F0B2         	movff	??_TimeDecode+1,atoi@s+1
  4946  001EC6  ECAE  F00E         	call	_atoi	;wreg free
  4947  001ECA  0100               	movlb	0	; () banked
  4948  001ECC  C0B1  F080         	movff	?_atoi,_Hour
  4949  001ED0  0100               	movlb	0	; () banked
  4950  001ED2  C0B2  F081         	movff	?_atoi+1,_Hour+1
  4951                           
  4952                           ; BSR set to: 0
  4953                           ;WordClock.c: 217: Min = atoi(RXbuff+TimePoint+1);
  4954  001ED6  0E01               	movlw	1
  4955  001ED8  0100               	movlb	0	; () banked
  4956  001EDA  0100               	movlb	0	; () banked
  4957  001EDC  25BC               	addwf	TimeDecode@TimePoint& (0+255),w,b
  4958  001EDE  0100               	movlb	0	; () banked
  4959  001EE0  6FB8               	movwf	??_TimeDecode& (0+255),b
  4960  001EE2  0E00               	movlw	0
  4961  001EE4  0100               	movlb	0	; () banked
  4962  001EE6  0100               	movlb	0	; () banked
  4963  001EE8  21BD               	addwfc	(TimeDecode@TimePoint+1)& (0+255),w,b
  4964  001EEA  0100               	movlb	0	; () banked
  4965  001EEC  6FB9               	movwf	(??_TimeDecode+1)& (0+255),b
  4966  001EEE  0E00               	movlw	low _RXbuff
  4967  001EF0  0100               	movlb	0	; () banked
  4968  001EF2  6FBA               	movwf	(??_TimeDecode+2)& (0+255),b
  4969  001EF4  0E01               	movlw	high _RXbuff
  4970  001EF6  6FBB               	movwf	(??_TimeDecode+3)& (0+255),b
  4971  001EF8  0100               	movlb	0	; () banked
  4972  001EFA  51B8               	movf	??_TimeDecode& (0+255),w,b
  4973  001EFC  0100               	movlb	0	; () banked
  4974  001EFE  27BA               	addwf	(??_TimeDecode+2)& (0+255),f,b
  4975  001F00  0100               	movlb	0	; () banked
  4976  001F02  51B9               	movf	(??_TimeDecode+1)& (0+255),w,b
  4977  001F04  0100               	movlb	0	; () banked
  4978  001F06  23BB               	addwfc	(??_TimeDecode+3)& (0+255),f,b
  4979  001F08  C0BA  F0B1         	movff	??_TimeDecode+2,atoi@s
  4980  001F0C  C0BB  F0B2         	movff	??_TimeDecode+3,atoi@s+1
  4981  001F10  ECAE  F00E         	call	_atoi	;wreg free
  4982  001F14  0100               	movlb	0	; () banked
  4983  001F16  C0B1  F082         	movff	?_atoi,_Min
  4984  001F1A  0100               	movlb	0	; () banked
  4985  001F1C  C0B2  F083         	movff	?_atoi+1,_Min+1
  4986                           
  4987                           ; BSR set to: 0
  4988                           ;WordClock.c: 218: Sec = atoi(RXbuff+TimePoint+4);
  4989  001F20  0E04               	movlw	4
  4990  001F22  0100               	movlb	0	; () banked
  4991  001F24  0100               	movlb	0	; () banked
  4992  001F26  25BC               	addwf	TimeDecode@TimePoint& (0+255),w,b
  4993  001F28  0100               	movlb	0	; () banked
  4994  001F2A  6FB8               	movwf	??_TimeDecode& (0+255),b
  4995  001F2C  0E00               	movlw	0
  4996  001F2E  0100               	movlb	0	; () banked
  4997  001F30  0100               	movlb	0	; () banked
  4998  001F32  21BD               	addwfc	(TimeDecode@TimePoint+1)& (0+255),w,b
  4999  001F34  0100               	movlb	0	; () banked
  5000  001F36  6FB9               	movwf	(??_TimeDecode+1)& (0+255),b
  5001  001F38  0E00               	movlw	low _RXbuff
  5002  001F3A  0100               	movlb	0	; () banked
  5003  001F3C  6FBA               	movwf	(??_TimeDecode+2)& (0+255),b
  5004  001F3E  0E01               	movlw	high _RXbuff
  5005  001F40  6FBB               	movwf	(??_TimeDecode+3)& (0+255),b
  5006  001F42  0100               	movlb	0	; () banked
  5007  001F44  51B8               	movf	??_TimeDecode& (0+255),w,b
  5008  001F46  0100               	movlb	0	; () banked
  5009  001F48  27BA               	addwf	(??_TimeDecode+2)& (0+255),f,b
  5010  001F4A  0100               	movlb	0	; () banked
  5011  001F4C  51B9               	movf	(??_TimeDecode+1)& (0+255),w,b
  5012  001F4E  0100               	movlb	0	; () banked
  5013  001F50  23BB               	addwfc	(??_TimeDecode+3)& (0+255),f,b
  5014  001F52  C0BA  F0B1         	movff	??_TimeDecode+2,atoi@s
  5015  001F56  C0BB  F0B2         	movff	??_TimeDecode+3,atoi@s+1
  5016  001F5A  ECAE  F00E         	call	_atoi	;wreg free
  5017  001F5E  0100               	movlb	0	; () banked
  5018  001F60  C0B1  F084         	movff	?_atoi,_Sec
  5019  001F64  0100               	movlb	0	; () banked
  5020  001F66  C0B2  F085         	movff	?_atoi+1,_Sec+1
  5021                           
  5022                           ; BSR set to: 0
  5023                           
  5024                           ; BSR set to: 0
  5025                           ;WordClock.c: 219: return '0';
  5026                           ;	Return value of _TimeDecode is never used
  5027  001F6A  0012               	return	
  5028  001F6C                     __end_of_TimeDecode:
  5029                           	opt stack 0
  5030                           tosu	equ	0xFFF
  5031                           tosh	equ	0xFFE
  5032                           tosl	equ	0xFFD
  5033                           pclath	equ	0xFFA
  5034                           tblptru	equ	0xFF8
  5035                           tblptrh	equ	0xFF7
  5036                           tblptrl	equ	0xFF6
  5037                           tablat	equ	0xFF5
  5038                           prodh	equ	0xFF4
  5039                           prodl	equ	0xFF3
  5040                           intcon	equ	0xFF2
  5041                           intcon2	equ	0xFF1
  5042                           postinc0	equ	0xFEE
  5043                           wreg	equ	0xFE8
  5044                           postdec1	equ	0xFE5
  5045                           fsr1l	equ	0xFE1
  5046                           indf2	equ	0xFDF
  5047                           postinc2	equ	0xFDE
  5048                           postdec2	equ	0xFDD
  5049                           fsr2h	equ	0xFDA
  5050                           fsr2l	equ	0xFD9
  5051                           status	equ	0xFD8
  5052                           
  5053 ;; *************** function _strcspn *****************
  5054 ;; Defined at:
  5055 ;;		line 4 in file "/Applications/microchip/xc8/v1.31/sources/common/strcspn.c"
  5056 ;; Parameters:    Size  Location     Type
  5057 ;;  s1              2    6[BANK0 ] PTR const unsigned char 
  5058 ;;		 -> RXbuff(64), 
  5059 ;;  s2              2    8[BANK0 ] PTR const unsigned char 
  5060 ;;		 -> STR_6(2), 
  5061 ;; Auto vars:     Size  Location     Type
  5062 ;;  i               2   11[BANK0 ] unsigned int 
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  2    6[BANK0 ] unsigned int 
  5065 ;; Registers used:
  5066 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5072 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5073 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5074 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5075 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5076 ;;Total ram usage:        7 bytes
  5077 ;; Hardware stack levels used:    1
  5078 ;; Hardware stack levels required when called:    6
  5079 ;; This function calls:
  5080 ;;		_strchr
  5081 ;; This function is called by:
  5082 ;;		_TimeDecode
  5083 ;; This function uses a non-reentrant model
  5084 ;;
  5085                           
  5086                           	psect	text22
  5087  0024C8                     __ptext22:
  5088                           	opt stack 0
  5089  0024C8                     _strcspn:
  5090                           	opt stack 22
  5091                           
  5092                           ; BSR set to: 0
  5093                           ;incstack = 0
  5094  0024C8  0E00               	movlw	0
  5095  0024CA  0100               	movlb	0	; () banked
  5096  0024CC  0100               	movlb	0	; () banked
  5097  0024CE  6FB7               	movwf	(strcspn@i+1)& (0+255),b
  5098  0024D0  0E00               	movlw	0
  5099  0024D2  0100               	movlb	0	; () banked
  5100  0024D4  6FB6               	movwf	strcspn@i& (0+255),b
  5101  0024D6  D008               	goto	l2909
  5102  0024D8                     l2907:
  5103                           
  5104                           ; BSR set to: 0
  5105  0024D8  0100               	movlb	0	; () banked
  5106  0024DA  0100               	movlb	0	; () banked
  5107  0024DC  4BB1               	infsnz	strcspn@s1& (0+255),f,b
  5108  0024DE  2BB2               	incf	(strcspn@s1+1)& (0+255),f,b
  5109  0024E0  0100               	movlb	0	; () banked
  5110  0024E2  0100               	movlb	0	; () banked
  5111  0024E4  4BB6               	infsnz	strcspn@i& (0+255),f,b
  5112  0024E6  2BB7               	incf	(strcspn@i+1)& (0+255),f,b
  5113  0024E8                     l2909:
  5114                           
  5115                           ; BSR set to: 0
  5116  0024E8  C0B1  FFD9         	movff	strcspn@s1,fsr2l
  5117  0024EC  C0B2  FFDA         	movff	strcspn@s1+1,fsr2h
  5118  0024F0  50DF               	movf	indf2,w,c
  5119  0024F2  B4D8               	btfsc	status,2,c
  5120  0024F4  D01F               	goto	l1045
  5121                           
  5122                           ; BSR set to: 0
  5123  0024F6  0100               	movlb	0	; () banked
  5124  0024F8  0100               	movlb	0	; () banked
  5125  0024FA  C0B4  F0AC         	movff	strcspn@s2+1,strchr@ptr+1
  5126  0024FE  0100               	movlb	0	; () banked
  5127  002500  0100               	movlb	0	; () banked
  5128  002502  C0B3  F0AB         	movff	strcspn@s2,strchr@ptr
  5129  002506  C0B1  FFD9         	movff	strcspn@s1,fsr2l
  5130  00250A  C0B2  FFDA         	movff	strcspn@s1+1,fsr2h
  5131  00250E  50DF               	movf	indf2,w,c
  5132  002510  0100               	movlb	0	; () banked
  5133  002512  6FB5               	movwf	??_strcspn& (0+255),b
  5134  002514  0100               	movlb	0	; () banked
  5135  002516  51B5               	movf	??_strcspn& (0+255),w,b
  5136  002518  0100               	movlb	0	; () banked
  5137  00251A  0100               	movlb	0	; () banked
  5138  00251C  6FAD               	movwf	strchr@chr& (0+255),b
  5139  00251E  0100               	movlb	0	; () banked
  5140  002520  6BAE               	clrf	(strchr@chr+1)& (0+255),b
  5141  002522  EC4D  F011         	call	_strchr	;wreg free
  5142  002526  0100               	movlb	0	; () banked
  5143  002528  0100               	movlb	0	; () banked
  5144  00252A  51AC               	movf	(?_strchr+1)& (0+255),w,b
  5145  00252C  0100               	movlb	0	; () banked
  5146  00252E  11AB               	iorwf	?_strchr& (0+255),w,b
  5147  002530  B4D8               	btfsc	status,2,c
  5148  002532  D7D2               	goto	l2907
  5149  002534                     l1045:
  5150                           
  5151                           ; BSR set to: 0
  5152  002534  C0B6  F0B1         	movff	strcspn@i,?_strcspn
  5153  002538  C0B7  F0B2         	movff	strcspn@i+1,?_strcspn+1
  5154                           
  5155                           ; BSR set to: 0
  5156  00253C  0012               	return	
  5157  00253E                     __end_of_strcspn:
  5158                           	opt stack 0
  5159                           tosu	equ	0xFFF
  5160                           tosh	equ	0xFFE
  5161                           tosl	equ	0xFFD
  5162                           pclath	equ	0xFFA
  5163                           tblptru	equ	0xFF8
  5164                           tblptrh	equ	0xFF7
  5165                           tblptrl	equ	0xFF6
  5166                           tablat	equ	0xFF5
  5167                           prodh	equ	0xFF4
  5168                           prodl	equ	0xFF3
  5169                           intcon	equ	0xFF2
  5170                           intcon2	equ	0xFF1
  5171                           postinc0	equ	0xFEE
  5172                           wreg	equ	0xFE8
  5173                           postdec1	equ	0xFE5
  5174                           fsr1l	equ	0xFE1
  5175                           indf2	equ	0xFDF
  5176                           postinc2	equ	0xFDE
  5177                           postdec2	equ	0xFDD
  5178                           fsr2h	equ	0xFDA
  5179                           fsr2l	equ	0xFD9
  5180                           status	equ	0xFD8
  5181                           
  5182 ;; *************** function _strchr *****************
  5183 ;; Defined at:
  5184 ;;		line 4 in file "/Applications/microchip/xc8/v1.31/sources/common/strchr.c"
  5185 ;; Parameters:    Size  Location     Type
  5186 ;;  ptr             2    0[BANK0 ] PTR const unsigned char 
  5187 ;;		 -> NULL(0), STR_6(2), RXbuff(64), 
  5188 ;;  chr             2    2[BANK0 ] int 
  5189 ;; Auto vars:     Size  Location     Type
  5190 ;;		None
  5191 ;; Return value:  Size  Location     Type
  5192 ;;                  2    0[BANK0 ] PTR unsigned char 
  5193 ;; Registers used:
  5194 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/0
  5197 ;;		On exit  : 0/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5200 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5202 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5203 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5204 ;;Total ram usage:        6 bytes
  5205 ;; Hardware stack levels used:    1
  5206 ;; Hardware stack levels required when called:    5
  5207 ;; This function calls:
  5208 ;;		Nothing
  5209 ;; This function is called by:
  5210 ;;		_strcspn
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213                           
  5214                           	psect	text23
  5215  00229A                     __ptext23:
  5216                           	opt stack 0
  5217  00229A                     _strchr:
  5218                           	opt stack 22
  5219  00229A                     l1081:
  5220  00229A  0100               	movlb	0	; () banked
  5221  00229C  C0AB  FFF6         	movff	strchr@ptr,tblptrl
  5222  0022A0  0100               	movlb	0	; () banked
  5223  0022A2  C0AC  FFF7         	movff	strchr@ptr+1,tblptrh
  5224  0022A6  0E00               	movlw	low (__smallconst shr (0+16))
  5225  0022A8  6EF8               	movwf	tblptru,c
  5226  0022AA  0E0F               	movlw	(high __ramtop+-1)
  5227  0022AC  64F7               	cpfsgt	tblptrh,c
  5228  0022AE  D003               	bra	u1927
  5229  0022B0  0008               	tblrd		*
  5230  0022B2  50F5               	movf	tablat,w,c
  5231  0022B4  D005               	bra	u1920
  5232  0022B6                     u1927:
  5233  0022B6  CFF6 FFE9          	movff	tblptrl,fsr0l
  5234  0022BA  CFF7 FFEA          	movff	tblptrh,fsr0h
  5235  0022BE  50EF               	movf	indf0,w,c
  5236  0022C0                     u1920:
  5237  0022C0  0100               	movlb	0	; () banked
  5238  0022C2  0100               	movlb	0	; () banked
  5239  0022C4  19AD               	xorwf	strchr@chr& (0+255),w,b
  5240  0022C6  A4D8               	btfss	status,2,c
  5241  0022C8  D009               	goto	l2893
  5242                           
  5243                           ; BSR set to: 0
  5244  0022CA  0100               	movlb	0	; () banked
  5245  0022CC  0100               	movlb	0	; () banked
  5246  0022CE  C0AC  F0AC         	movff	strchr@ptr+1,?_strchr+1
  5247  0022D2  0100               	movlb	0	; () banked
  5248  0022D4  0100               	movlb	0	; () banked
  5249  0022D6  C0AB  F0AB         	movff	strchr@ptr,?_strchr
  5250  0022DA  D029               	goto	l1083
  5251  0022DC                     l2893:
  5252                           
  5253                           ; BSR set to: 0
  5254  0022DC  0100               	movlb	0	; () banked
  5255  0022DE  0100               	movlb	0	; () banked
  5256  0022E0  51AB               	movf	strchr@ptr& (0+255),w,b
  5257  0022E2  0100               	movlb	0	; () banked
  5258  0022E4  6FAF               	movwf	??_strchr& (0+255),b
  5259  0022E6  0100               	movlb	0	; () banked
  5260  0022E8  0100               	movlb	0	; () banked
  5261  0022EA  51AC               	movf	(strchr@ptr+1)& (0+255),w,b
  5262  0022EC  0100               	movlb	0	; () banked
  5263  0022EE  6FB0               	movwf	(??_strchr+1)& (0+255),b
  5264  0022F0  0100               	movlb	0	; () banked
  5265  0022F2  4BAB               	infsnz	strchr@ptr& (0+255),f,b
  5266  0022F4  2BAC               	incf	(strchr@ptr+1)& (0+255),f,b
  5267  0022F6  C0AF  FFF6         	movff	??_strchr,tblptrl
  5268  0022FA  C0B0  FFF7         	movff	??_strchr+1,tblptrh
  5269  0022FE  0E00               	movlw	low (__smallconst shr (0+16))
  5270  002300  6EF8               	movwf	tblptru,c
  5271  002302  0E0F               	movlw	(high __ramtop+-1)
  5272  002304  64F7               	cpfsgt	tblptrh,c
  5273  002306  D003               	bra	u1947
  5274  002308  0008               	tblrd		*
  5275  00230A  50F5               	movf	tablat,w,c
  5276  00230C  D005               	bra	u1940
  5277  00230E                     u1947:
  5278  00230E  CFF6 FFE9          	movff	tblptrl,fsr0l
  5279  002312  CFF7 FFEA          	movff	tblptrh,fsr0h
  5280  002316  50EF               	movf	indf0,w,c
  5281  002318                     u1940:
  5282  002318  0900               	iorlw	0
  5283  00231A  A4D8               	btfss	status,2,c
  5284  00231C  D7BE               	goto	l1081
  5285  00231E  0E00               	movlw	0
  5286  002320  0100               	movlb	0	; () banked
  5287  002322  0100               	movlb	0	; () banked
  5288  002324  6FAC               	movwf	(?_strchr+1)& (0+255),b
  5289  002326  0E00               	movlw	0
  5290  002328  0100               	movlb	0	; () banked
  5291  00232A  0100               	movlb	0	; () banked
  5292  00232C  6FAB               	movwf	?_strchr& (0+255),b
  5293  00232E                     l1083:
  5294                           
  5295                           ; BSR set to: 0
  5296  00232E  0012               	return	
  5297  002330                     __end_of_strchr:
  5298                           	opt stack 0
  5299                           tosu	equ	0xFFF
  5300                           tosh	equ	0xFFE
  5301                           tosl	equ	0xFFD
  5302                           pclath	equ	0xFFA
  5303                           tblptru	equ	0xFF8
  5304                           tblptrh	equ	0xFF7
  5305                           tblptrl	equ	0xFF6
  5306                           tablat	equ	0xFF5
  5307                           prodh	equ	0xFF4
  5308                           prodl	equ	0xFF3
  5309                           intcon	equ	0xFF2
  5310                           intcon2	equ	0xFF1
  5311                           indf0	equ	0xFEF
  5312                           postinc0	equ	0xFEE
  5313                           fsr0h	equ	0xFEA
  5314                           fsr0l	equ	0xFE9
  5315                           wreg	equ	0xFE8
  5316                           postdec1	equ	0xFE5
  5317                           fsr1l	equ	0xFE1
  5318                           indf2	equ	0xFDF
  5319                           postinc2	equ	0xFDE
  5320                           postdec2	equ	0xFDD
  5321                           fsr2h	equ	0xFDA
  5322                           fsr2l	equ	0xFD9
  5323                           status	equ	0xFD8
  5324                           
  5325 ;; *************** function _atoi *****************
  5326 ;; Defined at:
  5327 ;;		line 5 in file "/Applications/microchip/xc8/v1.31/sources/common/atoi.c"
  5328 ;; Parameters:    Size  Location     Type
  5329 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  5330 ;;		 -> RXbuff(64), 
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;  a               2   11[BANK0 ] int 
  5333 ;;  sign            1   10[BANK0 ] unsigned char 
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  2    6[BANK0 ] int 
  5336 ;; Registers used:
  5337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5343 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5344 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5345 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5346 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5347 ;;Total ram usage:        7 bytes
  5348 ;; Hardware stack levels used:    1
  5349 ;; Hardware stack levels required when called:    6
  5350 ;; This function calls:
  5351 ;;		___wmul
  5352 ;;		_isdigit
  5353 ;; This function is called by:
  5354 ;;		_TimeDecode
  5355 ;; This function uses a non-reentrant model
  5356 ;;
  5357                           
  5358                           	psect	text24
  5359  001D5C                     __ptext24:
  5360                           	opt stack 0
  5361  001D5C                     _atoi:
  5362                           	opt stack 22
  5363                           
  5364                           ; BSR set to: 0
  5365                           ;incstack = 0
  5366  001D5C  D004               	goto	l2917
  5367  001D5E                     l2915:
  5368  001D5E  0100               	movlb	0	; () banked
  5369  001D60  0100               	movlb	0	; () banked
  5370  001D62  4BB1               	infsnz	atoi@s& (0+255),f,b
  5371  001D64  2BB2               	incf	(atoi@s+1)& (0+255),f,b
  5372  001D66                     l2917:
  5373  001D66  C0B1  FFD9         	movff	atoi@s,fsr2l
  5374  001D6A  C0B2  FFDA         	movff	atoi@s+1,fsr2h
  5375  001D6E  50DF               	movf	indf2,w,c
  5376  001D70  0A20               	xorlw	32
  5377  001D72  B4D8               	btfsc	status,2,c
  5378  001D74  D7F4               	goto	l2915
  5379  001D76  C0B1  FFD9         	movff	atoi@s,fsr2l
  5380  001D7A  C0B2  FFDA         	movff	atoi@s+1,fsr2h
  5381  001D7E  50DF               	movf	indf2,w,c
  5382  001D80  0A09               	xorlw	9
  5383  001D82  B4D8               	btfsc	status,2,c
  5384  001D84  D7EC               	goto	l2915
  5385  001D86  0E00               	movlw	0
  5386  001D88  0100               	movlb	0	; () banked
  5387  001D8A  0100               	movlb	0	; () banked
  5388  001D8C  6FB7               	movwf	(atoi@a+1)& (0+255),b
  5389  001D8E  0E00               	movlw	0
  5390  001D90  0100               	movlb	0	; () banked
  5391  001D92  6FB6               	movwf	atoi@a& (0+255),b
  5392                           
  5393                           ; BSR set to: 0
  5394  001D94  0100               	movlb	0	; () banked
  5395  001D96  6FB3               	movwf	??_atoi& (0+255),b
  5396  001D98  0E00               	movlw	0
  5397  001D9A  0100               	movlb	0	; () banked
  5398  001D9C  0100               	movlb	0	; () banked
  5399  001D9E  6FB5               	movwf	atoi@sign& (0+255),b
  5400  001DA0  0100               	movlb	0	; () banked
  5401  001DA2  51B3               	movf	??_atoi& (0+255),w,b
  5402                           
  5403                           ; BSR set to: 0
  5404  001DA4  0E2D               	movlw	45
  5405  001DA6  C0B1  FFD9         	movff	atoi@s,fsr2l
  5406  001DAA  C0B2  FFDA         	movff	atoi@s+1,fsr2h
  5407  001DAE  62DF               	cpfseq	indf2,c
  5408  001DB0  D004               	goto	l2929
  5409                           
  5410                           ; BSR set to: 0
  5411  001DB2  0100               	movlb	0	; () banked
  5412  001DB4  0100               	movlb	0	; () banked
  5413  001DB6  2BB5               	incf	atoi@sign& (0+255),f,b
  5414  001DB8  D032               	goto	L11
  5415  001DBA                     l2929:
  5416                           
  5417                           ; BSR set to: 0
  5418  001DBA  0E2B               	movlw	43
  5419  001DBC  C0B1  FFD9         	movff	atoi@s,fsr2l
  5420  001DC0  C0B2  FFDA         	movff	atoi@s+1,fsr2h
  5421  001DC4  62DF               	cpfseq	indf2,c
  5422  001DC6  D02F               	goto	l2937
  5423  001DC8  D02A               	goto	L11
  5424  001DCA                     l2933:
  5425  001DCA  C0B6  F0AB         	movff	atoi@a,___wmul@multiplier
  5426  001DCE  C0B7  F0AC         	movff	atoi@a+1,___wmul@multiplier+1
  5427  001DD2  0E00               	movlw	0
  5428  001DD4  0100               	movlb	0	; () banked
  5429  001DD6  0100               	movlb	0	; () banked
  5430  001DD8  6FAE               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5431  001DDA  0E0A               	movlw	10
  5432  001DDC  0100               	movlb	0	; () banked
  5433  001DDE  6FAD               	movwf	___wmul@multiplicand& (0+255),b
  5434  001DE0  ECDC  F013         	call	___wmul	;wreg free
  5435  001DE4  C0B1  FFD9         	movff	atoi@s,fsr2l
  5436  001DE8  C0B2  FFDA         	movff	atoi@s+1,fsr2h
  5437  001DEC  50DF               	movf	indf2,w,c
  5438  001DEE  0100               	movlb	0	; () banked
  5439  001DF0  6FB3               	movwf	??_atoi& (0+255),b
  5440  001DF2  6BB4               	clrf	(??_atoi+1)& (0+255),b
  5441  001DF4  0100               	movlb	0	; () banked
  5442  001DF6  0100               	movlb	0	; () banked
  5443  001DF8  51AB               	movf	?___wmul& (0+255),w,b
  5444  001DFA  0100               	movlb	0	; () banked
  5445  001DFC  27B3               	addwf	??_atoi& (0+255),f,b
  5446  001DFE  0100               	movlb	0	; () banked
  5447  001E00  0100               	movlb	0	; () banked
  5448  001E02  51AC               	movf	(?___wmul+1)& (0+255),w,b
  5449  001E04  0100               	movlb	0	; () banked
  5450  001E06  23B4               	addwfc	(??_atoi+1)& (0+255),f,b
  5451  001E08  0ED0               	movlw	208
  5452  001E0A  0100               	movlb	0	; () banked
  5453  001E0C  25B3               	addwf	??_atoi& (0+255),w,b
  5454  001E0E  0100               	movlb	0	; () banked
  5455  001E10  0100               	movlb	0	; () banked
  5456  001E12  6FB6               	movwf	atoi@a& (0+255),b
  5457  001E14  0EFF               	movlw	255
  5458  001E16  0100               	movlb	0	; () banked
  5459  001E18  21B4               	addwfc	(??_atoi+1)& (0+255),w,b
  5460  001E1A  0100               	movlb	0	; () banked
  5461  001E1C  6FB7               	movwf	(atoi@a+1)& (0+255),b
  5462  001E1E                     L11:
  5463                           
  5464                           ; BSR set to: 0
  5465  001E1E  0100               	movlb	0	; () banked
  5466  001E20  0100               	movlb	0	; () banked
  5467  001E22  4BB1               	infsnz	atoi@s& (0+255),f,b
  5468  001E24  2BB2               	incf	(atoi@s+1)& (0+255),f,b
  5469  001E26                     l2937:
  5470                           
  5471                           ; BSR set to: 0
  5472  001E26  C0B1  FFD9         	movff	atoi@s,fsr2l
  5473  001E2A  C0B2  FFDA         	movff	atoi@s+1,fsr2h
  5474  001E2E  50DF               	movf	indf2,w,c
  5475  001E30  EC82  F014         	call	_isdigit
  5476  001E34  B0D8               	btfsc	status,0,c
  5477  001E36  D7C9               	goto	l2933
  5478  001E38  0100               	movlb	0	; () banked
  5479  001E3A  0100               	movlb	0	; () banked
  5480  001E3C  51B5               	movf	atoi@sign& (0+255),w,b
  5481  001E3E  B4D8               	btfsc	status,2,c
  5482  001E40  D010               	goto	l641
  5483                           
  5484                           ; BSR set to: 0
  5485  001E42  0100               	movlb	0	; () banked
  5486  001E44  C0B6  F0B3         	movff	atoi@a,??_atoi
  5487  001E48  0100               	movlb	0	; () banked
  5488  001E4A  C0B7  F0B4         	movff	atoi@a+1,??_atoi+1
  5489  001E4E  0100               	movlb	0	; () banked
  5490  001E50  1FB3               	comf	??_atoi& (0+255),f,b
  5491  001E52  1FB4               	comf	(??_atoi+1)& (0+255),f,b
  5492  001E54  4BB3               	infsnz	??_atoi& (0+255),f,b
  5493  001E56  2BB4               	incf	(??_atoi+1)& (0+255),f,b
  5494  001E58  C0B3  F0B1         	movff	??_atoi,?_atoi
  5495  001E5C  C0B4  F0B2         	movff	??_atoi+1,?_atoi+1
  5496  001E60  D004               	goto	l642
  5497  001E62                     l641:
  5498                           
  5499                           ; BSR set to: 0
  5500  001E62  C0B6  F0B1         	movff	atoi@a,?_atoi
  5501  001E66  C0B7  F0B2         	movff	atoi@a+1,?_atoi+1
  5502  001E6A                     l642:
  5503                           
  5504                           ; BSR set to: 0
  5505  001E6A  0012               	return	
  5506  001E6C                     __end_of_atoi:
  5507                           	opt stack 0
  5508                           tosu	equ	0xFFF
  5509                           tosh	equ	0xFFE
  5510                           tosl	equ	0xFFD
  5511                           pclath	equ	0xFFA
  5512                           tblptru	equ	0xFF8
  5513                           tblptrh	equ	0xFF7
  5514                           tblptrl	equ	0xFF6
  5515                           tablat	equ	0xFF5
  5516                           prodh	equ	0xFF4
  5517                           prodl	equ	0xFF3
  5518                           intcon	equ	0xFF2
  5519                           intcon2	equ	0xFF1
  5520                           indf0	equ	0xFEF
  5521                           postinc0	equ	0xFEE
  5522                           fsr0h	equ	0xFEA
  5523                           fsr0l	equ	0xFE9
  5524                           wreg	equ	0xFE8
  5525                           postdec1	equ	0xFE5
  5526                           fsr1l	equ	0xFE1
  5527                           indf2	equ	0xFDF
  5528                           postinc2	equ	0xFDE
  5529                           postdec2	equ	0xFDD
  5530                           fsr2h	equ	0xFDA
  5531                           fsr2l	equ	0xFD9
  5532                           status	equ	0xFD8
  5533                           
  5534 ;; *************** function _isdigit *****************
  5535 ;; Defined at:
  5536 ;;		line 8 in file "/Applications/microchip/xc8/v1.31/sources/common/isdigit.c"
  5537 ;; Parameters:    Size  Location     Type
  5538 ;;  c               1    wreg     unsigned char 
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;  c               1    2[BANK0 ] unsigned char 
  5541 ;; Return value:  Size  Location     Type
  5542 ;;		None               void
  5543 ;; Registers used:
  5544 ;;		wreg, status,2, status,0
  5545 ;; Tracked objects:
  5546 ;;		On entry : 0/0
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5551 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5552 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5553 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5554 ;;Total ram usage:        3 bytes
  5555 ;; Hardware stack levels used:    1
  5556 ;; Hardware stack levels required when called:    5
  5557 ;; This function calls:
  5558 ;;		Nothing
  5559 ;; This function is called by:
  5560 ;;		_atoi
  5561 ;; This function uses a non-reentrant model
  5562 ;;
  5563                           
  5564                           	psect	text25
  5565  002904                     __ptext25:
  5566                           	opt stack 0
  5567  002904                     _isdigit:
  5568                           	opt stack 22
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;incstack = 0
  5572                           ;isdigit@c stored from wreg
  5573  002904  CFE8 F0AD          	movff	wreg,isdigit@c
  5574  002908  0100               	movlb	0	; () banked
  5575  00290A  6FAB               	movwf	??_isdigit& (0+255),b
  5576  00290C  0E00               	movlw	0
  5577  00290E  0100               	movlb	0	; () banked
  5578  002910  0100               	movlb	0	; () banked
  5579  002912  6FAC               	movwf	_isdigit$2072& (0+255),b
  5580  002914  0100               	movlb	0	; () banked
  5581  002916  51AB               	movf	??_isdigit& (0+255),w,b
  5582                           
  5583                           ; BSR set to: 0
  5584  002918  0E3A               	movlw	58
  5585  00291A  0100               	movlb	0	; () banked
  5586  00291C  0100               	movlb	0	; () banked
  5587  00291E  5DAD               	subwf	isdigit@c& (0+255),w,b
  5588  002920  B0D8               	btfsc	status,0,c
  5589  002922  D00D               	goto	l2883
  5590                           
  5591                           ; BSR set to: 0
  5592  002924  0E2F               	movlw	47
  5593  002926  0100               	movlb	0	; () banked
  5594  002928  0100               	movlb	0	; () banked
  5595  00292A  65AD               	cpfsgt	isdigit@c& (0+255),b
  5596  00292C  D008               	goto	l2883
  5597                           
  5598                           ; BSR set to: 0
  5599  00292E  0100               	movlb	0	; () banked
  5600  002930  6FAB               	movwf	??_isdigit& (0+255),b
  5601  002932  0E01               	movlw	1
  5602  002934  0100               	movlb	0	; () banked
  5603  002936  0100               	movlb	0	; () banked
  5604  002938  6FAC               	movwf	_isdigit$2072& (0+255),b
  5605  00293A  0100               	movlb	0	; () banked
  5606  00293C  51AB               	movf	??_isdigit& (0+255),w,b
  5607  00293E                     l2883:
  5608                           
  5609                           ; BSR set to: 0
  5610  00293E  C0AC  F0AB         	movff	_isdigit$2072,??_isdigit
  5611  002942  0100               	movlb	0	; () banked
  5612  002944  31AB               	rrcf	??_isdigit& (0+255),w,b
  5613                           
  5614                           ; BSR set to: 0
  5615                           
  5616                           ; BSR set to: 0
  5617  002946  0012               	return	
  5618  002948                     __end_of_isdigit:
  5619                           	opt stack 0
  5620                           tosu	equ	0xFFF
  5621                           tosh	equ	0xFFE
  5622                           tosl	equ	0xFFD
  5623                           pclath	equ	0xFFA
  5624                           tblptru	equ	0xFF8
  5625                           tblptrh	equ	0xFF7
  5626                           tblptrl	equ	0xFF6
  5627                           tablat	equ	0xFF5
  5628                           prodh	equ	0xFF4
  5629                           prodl	equ	0xFF3
  5630                           intcon	equ	0xFF2
  5631                           intcon2	equ	0xFF1
  5632                           indf0	equ	0xFEF
  5633                           postinc0	equ	0xFEE
  5634                           fsr0h	equ	0xFEA
  5635                           fsr0l	equ	0xFE9
  5636                           wreg	equ	0xFE8
  5637                           postdec1	equ	0xFE5
  5638                           fsr1l	equ	0xFE1
  5639                           indf2	equ	0xFDF
  5640                           postinc2	equ	0xFDE
  5641                           postdec2	equ	0xFDD
  5642                           fsr2h	equ	0xFDA
  5643                           fsr2l	equ	0xFD9
  5644                           status	equ	0xFD8
  5645                           
  5646 ;; *************** function ___wmul *****************
  5647 ;; Defined at:
  5648 ;;		line 3 in file "/Applications/microchip/xc8/v1.31/sources/common/wmul.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5651 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;  product         2    4[BANK0 ] unsigned int 
  5654 ;; Return value:  Size  Location     Type
  5655 ;;                  2    0[BANK0 ] unsigned int 
  5656 ;; Registers used:
  5657 ;;		wreg, status,2, status,0, prodl, prodh
  5658 ;; Tracked objects:
  5659 ;;		On entry : 0/0
  5660 ;;		On exit  : 0/0
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5663 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5664 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5666 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5667 ;;Total ram usage:        6 bytes
  5668 ;; Hardware stack levels used:    1
  5669 ;; Hardware stack levels required when called:    5
  5670 ;; This function calls:
  5671 ;;		Nothing
  5672 ;; This function is called by:
  5673 ;;		_I2cSettings
  5674 ;;		_atoi
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678                           	psect	text26
  5679  0027B8                     __ptext26:
  5680                           	opt stack 0
  5681  0027B8                     ___wmul:
  5682                           	opt stack 24
  5683                           
  5684                           ; BSR set to: 0
  5685                           ;incstack = 0
  5686  0027B8  0100               	movlb	0	; () banked
  5687  0027BA  0100               	movlb	0	; () banked
  5688  0027BC  51AB               	movf	___wmul@multiplier& (0+255),w,b
  5689  0027BE  0100               	movlb	0	; () banked
  5690  0027C0  0100               	movlb	0	; () banked
  5691  0027C2  03AD               	mulwf	___wmul@multiplicand& (0+255),b
  5692  0027C4  CFF3 F0AF          	movff	prodl,___wmul@product
  5693  0027C8  CFF4 F0B0          	movff	prodh,___wmul@product+1
  5694  0027CC  0100               	movlb	0	; () banked
  5695  0027CE  0100               	movlb	0	; () banked
  5696  0027D0  51AB               	movf	___wmul@multiplier& (0+255),w,b
  5697  0027D2  0100               	movlb	0	; () banked
  5698  0027D4  0100               	movlb	0	; () banked
  5699  0027D6  03AE               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5700  0027D8  CFF3 FFF4          	movff	prodl,prodh
  5701  0027DC  6AF3               	clrf	prodl,c
  5702  0027DE  50F3               	movf	prodl,w,c
  5703  0027E0  0100               	movlb	0	; () banked
  5704  0027E2  0100               	movlb	0	; () banked
  5705  0027E4  27AF               	addwf	___wmul@product& (0+255),f,b
  5706  0027E6  50F4               	movf	prodh,w,c
  5707  0027E8  0100               	movlb	0	; () banked
  5708  0027EA  0100               	movlb	0	; () banked
  5709  0027EC  23B0               	addwfc	(___wmul@product+1)& (0+255),f,b
  5710  0027EE  0100               	movlb	0	; () banked
  5711  0027F0  0100               	movlb	0	; () banked
  5712  0027F2  51AC               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5713  0027F4  0100               	movlb	0	; () banked
  5714  0027F6  0100               	movlb	0	; () banked
  5715  0027F8  03AD               	mulwf	___wmul@multiplicand& (0+255),b
  5716  0027FA  CFF3 FFF4          	movff	prodl,prodh
  5717  0027FE  6AF3               	clrf	prodl,c
  5718  002800  50F3               	movf	prodl,w,c
  5719  002802  0100               	movlb	0	; () banked
  5720  002804  0100               	movlb	0	; () banked
  5721  002806  27AF               	addwf	___wmul@product& (0+255),f,b
  5722  002808  50F4               	movf	prodh,w,c
  5723  00280A  0100               	movlb	0	; () banked
  5724  00280C  0100               	movlb	0	; () banked
  5725  00280E  23B0               	addwfc	(___wmul@product+1)& (0+255),f,b
  5726                           
  5727                           ; BSR set to: 0
  5728  002810  C0AF  F0AB         	movff	___wmul@product,?___wmul
  5729  002814  C0B0  F0AC         	movff	___wmul@product+1,?___wmul+1
  5730                           
  5731                           ; BSR set to: 0
  5732                           
  5733                           ; BSR set to: 0
  5734  002818  0012               	return	
  5735  00281A                     __end_of___wmul:
  5736                           	opt stack 0
  5737                           tosu	equ	0xFFF
  5738                           tosh	equ	0xFFE
  5739                           tosl	equ	0xFFD
  5740                           pclath	equ	0xFFA
  5741                           tblptru	equ	0xFF8
  5742                           tblptrh	equ	0xFF7
  5743                           tblptrl	equ	0xFF6
  5744                           tablat	equ	0xFF5
  5745                           prodh	equ	0xFF4
  5746                           prodl	equ	0xFF3
  5747                           intcon	equ	0xFF2
  5748                           intcon2	equ	0xFF1
  5749                           indf0	equ	0xFEF
  5750                           postinc0	equ	0xFEE
  5751                           fsr0h	equ	0xFEA
  5752                           fsr0l	equ	0xFE9
  5753                           wreg	equ	0xFE8
  5754                           postdec1	equ	0xFE5
  5755                           fsr1l	equ	0xFE1
  5756                           indf2	equ	0xFDF
  5757                           postinc2	equ	0xFDE
  5758                           postdec2	equ	0xFDD
  5759                           fsr2h	equ	0xFDA
  5760                           fsr2l	equ	0xFD9
  5761                           status	equ	0xFD8
  5762                           
  5763 ;; *************** function _StartTx *****************
  5764 ;; Defined at:
  5765 ;;		line 136 in file "../comm.c"
  5766 ;; Parameters:    Size  Location     Type
  5767 ;;  TxStr           2   10[BANK0 ] PTR const unsigned char 
  5768 ;;		 -> STR_11(1), STR_10(7), STR_9(6), STR_8(4), 
  5769 ;;		 -> STR_7(4), STR_5(1), STR_4(7), STR_3(6), 
  5770 ;;		 -> STR_2(4), STR_1(4), 
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;		None
  5773 ;; Return value:  Size  Location     Type
  5774 ;;		None               void
  5775 ;; Registers used:
  5776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5777 ;; Tracked objects:
  5778 ;;		On entry : 0/0
  5779 ;;		On exit  : 0/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5782 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5784 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5785 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5786 ;;Total ram usage:        3 bytes
  5787 ;; Hardware stack levels used:    1
  5788 ;; Hardware stack levels required when called:    6
  5789 ;; This function calls:
  5790 ;;		_memcpy
  5791 ;;		_strlen
  5792 ;; This function is called by:
  5793 ;;		_CommFsmSched
  5794 ;; This function uses a non-reentrant model
  5795 ;;
  5796                           
  5797                           	psect	text27
  5798  0025AE                     __ptext27:
  5799                           	opt stack 0
  5800  0025AE                     _StartTx:
  5801                           	opt stack 23
  5802                           
  5803                           ;comm.c: 138: CommFsmFlag = 0;
  5804                           
  5805                           ; BSR set to: 0
  5806                           ;incstack = 0
  5807  0025AE  0100               	movlb	0	; () banked
  5808  0025B0  6FB7               	movwf	??_StartTx& (0+255),b
  5809  0025B2  0E00               	movlw	0
  5810  0025B4  6E46               	movwf	_CommFsmFlag,c
  5811  0025B6  0100               	movlb	0	; () banked
  5812  0025B8  51B7               	movf	??_StartTx& (0+255),w,b
  5813                           
  5814                           ; BSR set to: 0
  5815                           ;comm.c: 139: TxBuffLen = strlen(TxStr);
  5816  0025BA  0100               	movlb	0	; () banked
  5817  0025BC  0100               	movlb	0	; () banked
  5818  0025BE  C0B6  F0AC         	movff	StartTx@TxStr+1,strlen@s+1
  5819  0025C2  0100               	movlb	0	; () banked
  5820  0025C4  0100               	movlb	0	; () banked
  5821  0025C6  C0B5  F0AB         	movff	StartTx@TxStr,strlen@s
  5822  0025CA  EC0E  F013         	call	_strlen	;wreg free
  5823  0025CE  0100               	movlb	0	; () banked
  5824  0025D0  0100               	movlb	0	; () banked
  5825  0025D2  51AB               	movf	?_strlen& (0+255),w,b
  5826  0025D4  6E53               	movwf	_TxBuffLen,c
  5827                           
  5828                           ; BSR set to: 0
  5829                           ;comm.c: 140: TxBuffIndx=0;
  5830  0025D6  0100               	movlb	0	; () banked
  5831  0025D8  6FB7               	movwf	??_StartTx& (0+255),b
  5832  0025DA  0E00               	movlw	0
  5833  0025DC  6E52               	movwf	_TxBuffIndx,c
  5834  0025DE  0100               	movlb	0	; () banked
  5835  0025E0  51B7               	movf	??_StartTx& (0+255),w,b
  5836                           
  5837                           ; BSR set to: 0
  5838                           ;comm.c: 141: memcpy(TxBuff, TxStr, TxBuffLen);
  5839  0025E2  0100               	movlb	0	; () banked
  5840  0025E4  0E00               	movlw	high _TxBuff
  5841  0025E6  0100               	movlb	0	; () banked
  5842  0025E8  0100               	movlb	0	; () banked
  5843  0025EA  6FAC               	movwf	(memcpy@d1+1)& (0+255),b
  5844  0025EC  0100               	movlb	0	; () banked
  5845  0025EE  0E8B               	movlw	low _TxBuff
  5846  0025F0  0100               	movlb	0	; () banked
  5847  0025F2  0100               	movlb	0	; () banked
  5848  0025F4  6FAB               	movwf	memcpy@d1& (0+255),b
  5849  0025F6  0100               	movlb	0	; () banked
  5850  0025F8  0100               	movlb	0	; () banked
  5851  0025FA  C0B6  F0AE         	movff	StartTx@TxStr+1,memcpy@s1+1
  5852  0025FE  0100               	movlb	0	; () banked
  5853  002600  0100               	movlb	0	; () banked
  5854  002602  C0B5  F0AD         	movff	StartTx@TxStr,memcpy@s1
  5855  002606  0100               	movlb	0	; () banked
  5856  002608  C053  F0AF         	movff	_TxBuffLen,memcpy@n
  5857  00260C  0100               	movlb	0	; () banked
  5858  00260E  0100               	movlb	0	; () banked
  5859  002610  6BB0               	clrf	(memcpy@n+1)& (0+255),b
  5860  002612  EC77  F013         	call	_memcpy	;wreg free
  5861                           
  5862                           ;comm.c: 142: TXSTAbits.TXEN=1;
  5863  002616  8AAC               	bsf	4012,5,c	;volatile
  5864                           
  5865                           ;comm.c: 143: PIE1bits.TXIE=1;
  5866  002618  889D               	bsf	3997,4,c	;volatile
  5867  00261A  0012               	return	
  5868  00261C                     __end_of_StartTx:
  5869                           	opt stack 0
  5870                           tosu	equ	0xFFF
  5871                           tosh	equ	0xFFE
  5872                           tosl	equ	0xFFD
  5873                           pclath	equ	0xFFA
  5874                           tblptru	equ	0xFF8
  5875                           tblptrh	equ	0xFF7
  5876                           tblptrl	equ	0xFF6
  5877                           tablat	equ	0xFF5
  5878                           prodh	equ	0xFF4
  5879                           prodl	equ	0xFF3
  5880                           intcon	equ	0xFF2
  5881                           intcon2	equ	0xFF1
  5882                           indf0	equ	0xFEF
  5883                           postinc0	equ	0xFEE
  5884                           fsr0h	equ	0xFEA
  5885                           fsr0l	equ	0xFE9
  5886                           wreg	equ	0xFE8
  5887                           postdec1	equ	0xFE5
  5888                           fsr1l	equ	0xFE1
  5889                           indf2	equ	0xFDF
  5890                           postinc2	equ	0xFDE
  5891                           postdec2	equ	0xFDD
  5892                           fsr2h	equ	0xFDA
  5893                           fsr2l	equ	0xFD9
  5894                           status	equ	0xFD8
  5895                           
  5896 ;; *************** function _strlen *****************
  5897 ;; Defined at:
  5898 ;;		line 4 in file "/Applications/microchip/xc8/v1.31/sources/common/strlen.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  5901 ;;		 -> STR_11(1), STR_10(7), STR_9(6), STR_8(4), 
  5902 ;;		 -> STR_7(4), STR_5(1), STR_4(7), STR_3(6), 
  5903 ;;		 -> STR_2(4), STR_1(4), 
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
  5906 ;;		 -> STR_11(1), STR_10(7), STR_9(6), STR_8(4), 
  5907 ;;		 -> STR_7(4), STR_5(1), STR_4(7), STR_3(6), 
  5908 ;;		 -> STR_2(4), STR_1(4), 
  5909 ;; Return value:  Size  Location     Type
  5910 ;;                  2    0[BANK0 ] unsigned int 
  5911 ;; Registers used:
  5912 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5913 ;; Tracked objects:
  5914 ;;		On entry : 0/0
  5915 ;;		On exit  : 0/0
  5916 ;;		Unchanged: 0/0
  5917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5918 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5919 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5920 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5921 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5922 ;;Total ram usage:        6 bytes
  5923 ;; Hardware stack levels used:    1
  5924 ;; Hardware stack levels required when called:    5
  5925 ;; This function calls:
  5926 ;;		Nothing
  5927 ;; This function is called by:
  5928 ;;		_StartTx
  5929 ;; This function uses a non-reentrant model
  5930 ;;
  5931                           
  5932                           	psect	text28
  5933  00261C                     __ptext28:
  5934                           	opt stack 0
  5935  00261C                     _strlen:
  5936                           	opt stack 23
  5937                           
  5938                           ;incstack = 0
  5939  00261C  0100               	movlb	0	; () banked
  5940  00261E  0100               	movlb	0	; () banked
  5941  002620  C0AC  F0B0         	movff	strlen@s+1,strlen@cp+1
  5942  002624  0100               	movlb	0	; () banked
  5943  002626  0100               	movlb	0	; () banked
  5944  002628  C0AB  F0AF         	movff	strlen@s,strlen@cp
  5945  00262C  D004               	goto	l3043
  5946  00262E                     l3041:
  5947                           
  5948                           ; BSR set to: 0
  5949  00262E  0100               	movlb	0	; () banked
  5950  002630  0100               	movlb	0	; () banked
  5951  002632  4BAF               	infsnz	strlen@cp& (0+255),f,b
  5952  002634  2BB0               	incf	(strlen@cp+1)& (0+255),f,b
  5953  002636                     l3043:
  5954                           
  5955                           ; BSR set to: 0
  5956  002636  0100               	movlb	0	; () banked
  5957  002638  C0AF  FFF6         	movff	strlen@cp,tblptrl
  5958  00263C  0100               	movlb	0	; () banked
  5959  00263E  C0B0  FFF7         	movff	strlen@cp+1,tblptrh
  5960  002642  0E00               	movlw	low (__mediumconst shr (0+16))
  5961  002644  6EF8               	movwf	tblptru,c
  5962  002646  0008               	tblrd		*
  5963  002648  50F5               	movf	tablat,w,c
  5964  00264A  0900               	iorlw	0
  5965  00264C  A4D8               	btfss	status,2,c
  5966  00264E  D7EF               	goto	l3041
  5967                           
  5968                           ; BSR set to: 0
  5969                           
  5970                           ; BSR set to: 0
  5971  002650  0100               	movlb	0	; () banked
  5972  002652  C0AB  F0AD         	movff	strlen@s,??_strlen
  5973  002656  0100               	movlb	0	; () banked
  5974  002658  C0AC  F0AE         	movff	strlen@s+1,??_strlen+1
  5975  00265C  0100               	movlb	0	; () banked
  5976  00265E  1FAD               	comf	??_strlen& (0+255),f,b
  5977  002660  1FAE               	comf	(??_strlen+1)& (0+255),f,b
  5978  002662  4BAD               	infsnz	??_strlen& (0+255),f,b
  5979  002664  2BAE               	incf	(??_strlen+1)& (0+255),f,b
  5980  002666  0100               	movlb	0	; () banked
  5981  002668  0100               	movlb	0	; () banked
  5982  00266A  51AF               	movf	strlen@cp& (0+255),w,b
  5983  00266C  0100               	movlb	0	; () banked
  5984  00266E  25AD               	addwf	??_strlen& (0+255),w,b
  5985  002670  0100               	movlb	0	; () banked
  5986  002672  0100               	movlb	0	; () banked
  5987  002674  6FAB               	movwf	?_strlen& (0+255),b
  5988  002676  0100               	movlb	0	; () banked
  5989  002678  0100               	movlb	0	; () banked
  5990  00267A  51B0               	movf	(strlen@cp+1)& (0+255),w,b
  5991  00267C  0100               	movlb	0	; () banked
  5992  00267E  21AE               	addwfc	(??_strlen+1)& (0+255),w,b
  5993  002680  0100               	movlb	0	; () banked
  5994  002682  6FAC               	movwf	(?_strlen+1)& (0+255),b
  5995                           
  5996                           ; BSR set to: 0
  5997                           
  5998                           ; BSR set to: 0
  5999  002684  0012               	return	
  6000  002686                     __end_of_strlen:
  6001                           	opt stack 0
  6002                           tosu	equ	0xFFF
  6003                           tosh	equ	0xFFE
  6004                           tosl	equ	0xFFD
  6005                           pclath	equ	0xFFA
  6006                           tblptru	equ	0xFF8
  6007                           tblptrh	equ	0xFF7
  6008                           tblptrl	equ	0xFF6
  6009                           tablat	equ	0xFF5
  6010                           prodh	equ	0xFF4
  6011                           prodl	equ	0xFF3
  6012                           intcon	equ	0xFF2
  6013                           intcon2	equ	0xFF1
  6014                           indf0	equ	0xFEF
  6015                           postinc0	equ	0xFEE
  6016                           fsr0h	equ	0xFEA
  6017                           fsr0l	equ	0xFE9
  6018                           wreg	equ	0xFE8
  6019                           postdec1	equ	0xFE5
  6020                           fsr1l	equ	0xFE1
  6021                           indf2	equ	0xFDF
  6022                           postinc2	equ	0xFDE
  6023                           postdec2	equ	0xFDD
  6024                           fsr2h	equ	0xFDA
  6025                           fsr2l	equ	0xFD9
  6026                           status	equ	0xFD8
  6027                           
  6028 ;; *************** function _memcpy *****************
  6029 ;; Defined at:
  6030 ;;		line 11 in file "/Applications/microchip/xc8/v1.31/sources/common/memcpy.c"
  6031 ;; Parameters:    Size  Location     Type
  6032 ;;  d1              2    0[BANK0 ] PTR void 
  6033 ;;		 -> TxBuff(32), 
  6034 ;;  s1              2    2[BANK0 ] PTR const void 
  6035 ;;		 -> STR_11(1), STR_10(7), STR_9(6), STR_8(4), 
  6036 ;;		 -> STR_7(4), STR_5(1), STR_4(7), STR_3(6), 
  6037 ;;		 -> STR_2(4), STR_1(4), 
  6038 ;;  n               2    4[BANK0 ] unsigned int 
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  6041 ;;		 -> STR_11(1), STR_10(7), STR_9(6), STR_8(4), 
  6042 ;;		 -> STR_7(4), STR_5(1), STR_4(7), STR_3(6), 
  6043 ;;		 -> STR_2(4), STR_1(4), 
  6044 ;;  d               2    6[BANK0 ] PTR unsigned char 
  6045 ;;		 -> TxBuff(32), 
  6046 ;; Return value:  Size  Location     Type
  6047 ;;                  2    0[BANK0 ] PTR void 
  6048 ;; Registers used:
  6049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6050 ;; Tracked objects:
  6051 ;;		On entry : 0/0
  6052 ;;		On exit  : 0/0
  6053 ;;		Unchanged: 0/0
  6054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6055 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6056 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6058 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6059 ;;Total ram usage:       10 bytes
  6060 ;; Hardware stack levels used:    1
  6061 ;; Hardware stack levels required when called:    5
  6062 ;; This function calls:
  6063 ;;		Nothing
  6064 ;; This function is called by:
  6065 ;;		_StartTx
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069                           	psect	text29
  6070  0026EE                     __ptext29:
  6071                           	opt stack 0
  6072  0026EE                     _memcpy:
  6073                           	opt stack 23
  6074                           
  6075                           ; BSR set to: 0
  6076                           ;incstack = 0
  6077  0026EE  0100               	movlb	0	; () banked
  6078  0026F0  0100               	movlb	0	; () banked
  6079  0026F2  C0AE  F0B4         	movff	memcpy@s1+1,memcpy@s+1
  6080  0026F6  0100               	movlb	0	; () banked
  6081  0026F8  0100               	movlb	0	; () banked
  6082  0026FA  C0AD  F0B3         	movff	memcpy@s1,memcpy@s
  6083  0026FE  0100               	movlb	0	; () banked
  6084  002700  0100               	movlb	0	; () banked
  6085  002702  C0AC  F0B2         	movff	memcpy@d1+1,memcpy@d+1
  6086  002706  0100               	movlb	0	; () banked
  6087  002708  0100               	movlb	0	; () banked
  6088  00270A  C0AB  F0B1         	movff	memcpy@d1,memcpy@d
  6089  00270E  D017               	goto	l3057
  6090  002710                     l3051:
  6091                           
  6092                           ; BSR set to: 0
  6093  002710  0100               	movlb	0	; () banked
  6094  002712  C0B3  FFF6         	movff	memcpy@s,tblptrl
  6095  002716  0100               	movlb	0	; () banked
  6096  002718  C0B4  FFF7         	movff	memcpy@s+1,tblptrh
  6097  00271C  0E00               	movlw	low (__mediumconst shr (0+16))
  6098  00271E  6EF8               	movwf	tblptru,c
  6099  002720  C0B1  FFD9         	movff	memcpy@d,fsr2l
  6100  002724  C0B2  FFDA         	movff	memcpy@d+1,fsr2h
  6101  002728  0008               	tblrd		*
  6102  00272A  CFF5 FFDF          	movff	tablat,indf2
  6103                           
  6104                           ; BSR set to: 0
  6105  00272E  0100               	movlb	0	; () banked
  6106  002730  0100               	movlb	0	; () banked
  6107  002732  4BB3               	infsnz	memcpy@s& (0+255),f,b
  6108  002734  2BB4               	incf	(memcpy@s+1)& (0+255),f,b
  6109                           
  6110                           ; BSR set to: 0
  6111  002736  0100               	movlb	0	; () banked
  6112  002738  0100               	movlb	0	; () banked
  6113  00273A  4BB1               	infsnz	memcpy@d& (0+255),f,b
  6114  00273C  2BB2               	incf	(memcpy@d+1)& (0+255),f,b
  6115  00273E                     l3057:
  6116                           
  6117                           ; BSR set to: 0
  6118  00273E  0100               	movlb	0	; () banked
  6119  002740  0100               	movlb	0	; () banked
  6120  002742  07AF               	decf	memcpy@n& (0+255),f,b
  6121  002744  A0D8               	btfss	status,0,c
  6122  002746  07B0               	decf	(memcpy@n+1)& (0+255),f,b
  6123  002748  0100               	movlb	0	; () banked
  6124  00274A  29AF               	incf	memcpy@n& (0+255),w,b
  6125  00274C  B4D8               	btfsc	status,2,c
  6126  00274E  29B0               	incf	(memcpy@n+1)& (0+255),w,b
  6127  002750  B4D8               	btfsc	status,2,c
  6128                           
  6129                           ; BSR set to: 0
  6130                           
  6131                           ; BSR set to: 0
  6132                           ;	Return value of _memcpy is never used
  6133  002752  0012               	return	
  6134  002754  D7DD               	goto	l3051
  6135  002756                     __end_of_memcpy:
  6136                           	opt stack 0
  6137                           tosu	equ	0xFFF
  6138                           tosh	equ	0xFFE
  6139                           tosl	equ	0xFFD
  6140                           pclath	equ	0xFFA
  6141                           tblptru	equ	0xFF8
  6142                           tblptrh	equ	0xFF7
  6143                           tblptrl	equ	0xFF6
  6144                           tablat	equ	0xFF5
  6145                           prodh	equ	0xFF4
  6146                           prodl	equ	0xFF3
  6147                           intcon	equ	0xFF2
  6148                           intcon2	equ	0xFF1
  6149                           indf0	equ	0xFEF
  6150                           postinc0	equ	0xFEE
  6151                           fsr0h	equ	0xFEA
  6152                           fsr0l	equ	0xFE9
  6153                           wreg	equ	0xFE8
  6154                           postdec1	equ	0xFE5
  6155                           fsr1l	equ	0xFE1
  6156                           indf2	equ	0xFDF
  6157                           postinc2	equ	0xFDE
  6158                           postdec2	equ	0xFDD
  6159                           fsr2h	equ	0xFDA
  6160                           fsr2l	equ	0xFD9
  6161                           status	equ	0xFD8
  6162                           
  6163 ;; *************** function _StartRx *****************
  6164 ;; Defined at:
  6165 ;;		line 146 in file "../comm.c"
  6166 ;; Parameters:    Size  Location     Type
  6167 ;;  TxStr           2    0[BANK0 ] PTR const unsigned char 
  6168 ;;		 -> STR_11(1), STR_10(7), STR_9(6), STR_8(4), 
  6169 ;;		 -> STR_7(4), STR_5(1), STR_4(7), STR_3(6), 
  6170 ;;		 -> STR_2(4), STR_1(4), 
  6171 ;; Auto vars:     Size  Location     Type
  6172 ;;		None
  6173 ;; Return value:  Size  Location     Type
  6174 ;;		None               void
  6175 ;; Registers used:
  6176 ;;		status,2
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6182 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6184 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6185 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6186 ;;Total ram usage:        3 bytes
  6187 ;; Hardware stack levels used:    1
  6188 ;; Hardware stack levels required when called:    5
  6189 ;; This function calls:
  6190 ;;		Nothing
  6191 ;; This function is called by:
  6192 ;;		_CommFsmSched
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195                           
  6196                           	psect	text30
  6197  0029F6                     __ptext30:
  6198                           	opt stack 0
  6199  0029F6                     _StartRx:
  6200                           	opt stack 24
  6201                           
  6202                           ;comm.c: 148: CommFsmFlag = 0;
  6203                           
  6204                           ; BSR set to: 0
  6205                           ;incstack = 0
  6206  0029F6  0100               	movlb	0	; () banked
  6207  0029F8  6FAD               	movwf	??_StartRx& (0+255),b
  6208  0029FA  0E00               	movlw	0
  6209  0029FC  6E46               	movwf	_CommFsmFlag,c
  6210  0029FE  0100               	movlb	0	; () banked
  6211  002A00  51AD               	movf	??_StartRx& (0+255),w,b
  6212                           
  6213                           ;comm.c: 149: RxBuffIndx=0;
  6214  002A02  0100               	movlb	0	; () banked
  6215  002A04  6FAD               	movwf	??_StartRx& (0+255),b
  6216  002A06  0E00               	movlw	0
  6217  002A08  6E4F               	movwf	_RxBuffIndx,c
  6218  002A0A  0100               	movlb	0	; () banked
  6219  002A0C  51AD               	movf	??_StartRx& (0+255),w,b
  6220                           
  6221                           ; BSR set to: 0
  6222                           ;comm.c: 150: PIE1bits.RCIE=1;
  6223  002A0E  8A9D               	bsf	3997,5,c	;volatile
  6224                           
  6225                           ; BSR set to: 0
  6226  002A10  0012               	return	
  6227  002A12                     __end_of_StartRx:
  6228                           	opt stack 0
  6229                           tosu	equ	0xFFF
  6230                           tosh	equ	0xFFE
  6231                           tosl	equ	0xFFD
  6232                           pclath	equ	0xFFA
  6233                           tblptru	equ	0xFF8
  6234                           tblptrh	equ	0xFF7
  6235                           tblptrl	equ	0xFF6
  6236                           tablat	equ	0xFF5
  6237                           prodh	equ	0xFF4
  6238                           prodl	equ	0xFF3
  6239                           intcon	equ	0xFF2
  6240                           intcon2	equ	0xFF1
  6241                           indf0	equ	0xFEF
  6242                           postinc0	equ	0xFEE
  6243                           fsr0h	equ	0xFEA
  6244                           fsr0l	equ	0xFE9
  6245                           wreg	equ	0xFE8
  6246                           postdec1	equ	0xFE5
  6247                           fsr1l	equ	0xFE1
  6248                           indf2	equ	0xFDF
  6249                           postinc2	equ	0xFDE
  6250                           postdec2	equ	0xFDD
  6251                           fsr2h	equ	0xFDA
  6252                           fsr2l	equ	0xFD9
  6253                           status	equ	0xFD8
  6254                           
  6255 ;; *************** function _low_isr *****************
  6256 ;; Defined at:
  6257 ;;		line 224 in file "../WordClock.c"
  6258 ;; Parameters:    Size  Location     Type
  6259 ;;		None
  6260 ;; Auto vars:     Size  Location     Type
  6261 ;;		None
  6262 ;; Return value:  Size  Location     Type
  6263 ;;		None               void
  6264 ;; Registers used:
  6265 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6266 ;; Tracked objects:
  6267 ;;		On entry : 0/0
  6268 ;;		On exit  : 0/0
  6269 ;;		Unchanged: 0/0
  6270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6273 ;;      Temps:         19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6274 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6275 ;;Total ram usage:       19 bytes
  6276 ;; Hardware stack levels used:    1
  6277 ;; Hardware stack levels required when called:    4
  6278 ;; This function calls:
  6279 ;;		_ReadUSART
  6280 ;;		_SetTimer0
  6281 ;;		_strstr
  6282 ;; This function is called by:
  6283 ;;		Interrupt level 1
  6284 ;; This function uses a non-reentrant model
  6285 ;;
  6286                           
  6287                           	psect	intcodelo
  6288  000018                     __pintcodelo:
  6289                           	opt stack 0
  6290  000018                     _low_isr:
  6291                           	opt stack 22
  6292                           
  6293                           ; BSR set to: 0
  6294                           ;incstack = 0
  6295  000018  CFD8 F029          	movff	status,??_low_isr+2
  6296  00001C  CFE8 F02A          	movff	wreg,??_low_isr+3
  6297  000020  CFE0 F02B          	movff	bsr,??_low_isr+4
  6298  000024  CFFA F02C          	movff	pclath,??_low_isr+5
  6299  000028  CFFB F02D          	movff	pclatu,??_low_isr+6
  6300  00002C  CFE9 F02E          	movff	fsr0l,??_low_isr+7
  6301  000030  CFEA F02F          	movff	fsr0h,??_low_isr+8
  6302  000034  CFE1 F030          	movff	fsr1l,??_low_isr+9
  6303  000038  CFE2 F031          	movff	fsr1h,??_low_isr+10
  6304  00003C  CFD9 F032          	movff	fsr2l,??_low_isr+11
  6305  000040  CFDA F033          	movff	fsr2h,??_low_isr+12
  6306  000044  CFF3 F034          	movff	prodl,??_low_isr+13
  6307  000048  CFF4 F035          	movff	prodh,??_low_isr+14
  6308  00004C  CFF6 F036          	movff	tblptrl,??_low_isr+15
  6309  000050  CFF7 F037          	movff	tblptrh,??_low_isr+16
  6310  000054  CFF8 F038          	movff	tblptru,??_low_isr+17
  6311  000058  CFF5 F039          	movff	tablat,??_low_isr+18
  6312                           
  6313                           ;WordClock.c: 226: if (PIR1bits.RCIF)
  6314  00005C  AA9E               	btfss	3998,5,c	;volatile
  6315  00005E  D059               	goto	i1l2835
  6316                           
  6317                           ;WordClock.c: 227: {
  6318                           ;WordClock.c: 228: if (RxBuffIndx >= 64)
  6319  000060  0E3F               	movlw	63
  6320  000062  644F               	cpfsgt	_RxBuffIndx,c
  6321  000064  D004               	goto	i1l2805
  6322                           
  6323                           ;WordClock.c: 229: {
  6324                           ;WordClock.c: 230: RXerr = 3;
  6325  000066  0E00               	movlw	0
  6326  000068  6E41               	movwf	_RXerr+1,c
  6327  00006A  0E03               	movlw	3
  6328  00006C  D014               	goto	L12
  6329  00006E                     i1l2805:
  6330                           
  6331                           ;WordClock.c: 235: else
  6332                           ;WordClock.c: 236: {
  6333                           ;WordClock.c: 237: RXbuff[RxBuffIndx] = ReadUSART();
  6334  00006E  504F               	movf	_RxBuffIndx,w,c
  6335  000070  0D01               	mullw	1
  6336  000072  0101               	movlb	1	; () banked
  6337  000074  0E00               	movlw	low _RXbuff
  6338  000076  24F3               	addwf	prodl,w,c
  6339  000078  6ED9               	movwf	fsr2l,c
  6340  00007A  0101               	movlb	1	; () banked
  6341  00007C  0E01               	movlw	high _RXbuff
  6342  00007E  20F4               	addwfc	prodh,w,c
  6343  000080  6EDA               	movwf	fsr2h,c
  6344  000082  ECEC  F014         	call	_ReadUSART	;wreg free
  6345  000086  6EDF               	movwf	indf2,c
  6346                           
  6347                           ;WordClock.c: 238: if(RCSTAbits.OERR || RCSTAbits.FERR)
  6348  000088  B2AB               	btfsc	4011,1,c	;volatile
  6349  00008A  D002               	goto	i1l2811
  6350  00008C  A4AB               	btfss	4011,2,c	;volatile
  6351  00008E  D00B               	goto	i1l2819
  6352  000090                     i1l2811:
  6353                           
  6354                           ;WordClock.c: 239: {
  6355                           ;WordClock.c: 240: RXerr = 1;
  6356  000090  0E00               	movlw	0
  6357  000092  6E41               	movwf	_RXerr+1,c
  6358  000094  0E01               	movlw	1
  6359  000096                     L12:
  6360  000096  6E40               	movwf	_RXerr,c
  6361                           
  6362                           ;WordClock.c: 241: RxFlag = 1;
  6363  000098  6E27               	movwf	??_low_isr& (0+255),c
  6364  00009A  0E01               	movlw	1
  6365  00009C  6E50               	movwf	_RxFlag,c
  6366  00009E  5027               	movf	??_low_isr& (0+255),w,c
  6367                           
  6368                           ;WordClock.c: 242: INTCONbits.TMR0IE=0;
  6369  0000A0  9AF2               	bcf	intcon,5,c	;volatile
  6370                           
  6371                           ;WordClock.c: 243: T0CONbits.TMR0ON=0;
  6372  0000A2  9ED5               	bcf	4053,7,c	;volatile
  6373                           
  6374                           ;WordClock.c: 244: }
  6375  0000A4  D036               	goto	i1l2835
  6376  0000A6                     i1l2819:
  6377                           
  6378                           ;WordClock.c: 245: else
  6379                           ;WordClock.c: 246: {
  6380                           ;WordClock.c: 247: if(strstr(RXbuff, FsmStructActive[FsmIndx].Str))
  6381  0000A6  0101               	movlb	1	; () banked
  6382  0000A8  0E01               	movlw	high _RXbuff
  6383  0000AA  6E24               	movwf	strstr@s1+1,c
  6384  0000AC  0101               	movlb	1	; () banked
  6385  0000AE  0E00               	movlw	low _RXbuff
  6386  0000B0  6E23               	movwf	strstr@s1,c
  6387  0000B2  5047               	movf	_FsmIndx,w,c
  6388  0000B4  0D05               	mullw	5
  6389  0000B6  C03C  F027         	movff	_FsmStructActive,??_low_isr
  6390  0000BA  C03D  F028         	movff	_FsmStructActive+1,??_low_isr+1
  6391  0000BE  50F3               	movf	prodl,w,c
  6392  0000C0  2627               	addwf	??_low_isr,f,c
  6393  0000C2  50F4               	movf	prodh,w,c
  6394  0000C4  2228               	addwfc	??_low_isr+1,f,c
  6395  0000C6  0E01               	movlw	1
  6396  0000C8  2427               	addwf	??_low_isr,w,c
  6397  0000CA  6ED9               	movwf	fsr2l,c
  6398  0000CC  0E00               	movlw	0
  6399  0000CE  2028               	addwfc	??_low_isr+1,w,c
  6400  0000D0  6EDA               	movwf	fsr2h,c
  6401  0000D2  CFDE F025          	movff	postinc2,strstr@s2
  6402  0000D6  CFDD F026          	movff	postdec2,strstr@s2+1
  6403  0000DA  ECFC  F010         	call	_strstr	;wreg free
  6404  0000DE  5024               	movf	?_strstr+1,w,c
  6405  0000E0  1023               	iorwf	?_strstr,w,c
  6406  0000E2  B4D8               	btfsc	status,2,c
  6407  0000E4  D00C               	goto	i1l2825
  6408                           
  6409                           ;WordClock.c: 248: {
  6410                           ;WordClock.c: 249: PIE1bits.RCIE=0;
  6411  0000E6  9A9D               	bcf	3997,5,c	;volatile
  6412                           
  6413                           ;WordClock.c: 250: RxFsmFlag=1;
  6414  0000E8  6E27               	movwf	??_low_isr& (0+255),c
  6415  0000EA  0E01               	movlw	1
  6416  0000EC  0100               	movlb	0	; () banked
  6417  0000EE  0100               	movlb	0	; () banked
  6418  0000F0  6F89               	movwf	_RxFsmFlag& (0+255),b
  6419  0000F2  5027               	movf	??_low_isr& (0+255),w,c
  6420                           
  6421                           ;WordClock.c: 251: CommFsmFlag=1;
  6422  0000F4  6E27               	movwf	??_low_isr& (0+255),c
  6423  0000F6  0E01               	movlw	1
  6424  0000F8  6E46               	movwf	_CommFsmFlag,c
  6425  0000FA  5027               	movf	??_low_isr& (0+255),w,c
  6426                           
  6427                           ;WordClock.c: 252: }
  6428  0000FC  D00A               	goto	i1l2835
  6429  0000FE                     i1l2825:
  6430                           
  6431                           ;WordClock.c: 253: else
  6432                           ;WordClock.c: 254: {
  6433                           ;WordClock.c: 255: RxBuffIndx ++;
  6434  0000FE  2A4F               	incf	_RxBuffIndx,f,c
  6435                           
  6436                           ;WordClock.c: 256: SetTimer0(Timer0_ms);
  6437  000100  C060  F014         	movff	_Timer0_ms,SetTimer0@Count
  6438  000104  C061  F015         	movff	_Timer0_ms+1,SetTimer0@Count+1
  6439  000108  EC3C  F015         	call	_SetTimer0	;wreg free
  6440                           
  6441                           ;WordClock.c: 257: INTCONbits.TMR0IF = 0;
  6442  00010C  94F2               	bcf	intcon,2,c	;volatile
  6443                           
  6444                           ;WordClock.c: 258: INTCONbits.TMR0IE=1;
  6445  00010E  8AF2               	bsf	intcon,5,c	;volatile
  6446                           
  6447                           ;WordClock.c: 259: T0CONbits.TMR0ON=1;
  6448  000110  8ED5               	bsf	4053,7,c	;volatile
  6449  000112                     i1l2835:
  6450                           
  6451                           ;WordClock.c: 260: }
  6452                           ;WordClock.c: 261: }
  6453                           ;WordClock.c: 262: }
  6454                           ;WordClock.c: 263: }
  6455                           ;WordClock.c: 265: if (PIR1bits.TXIF)
  6456  000112  A89E               	btfss	3998,4,c	;volatile
  6457  000114  D01D               	goto	i1l2847
  6458                           
  6459                           ;WordClock.c: 266: {
  6460                           ;WordClock.c: 267: TXREG = TxBuff[TxBuffIndx];
  6461  000116  5052               	movf	_TxBuffIndx,w,c
  6462  000118  0D01               	mullw	1
  6463  00011A  0100               	movlb	0	; () banked
  6464  00011C  0E8B               	movlw	low _TxBuff
  6465  00011E  24F3               	addwf	prodl,w,c
  6466  000120  6ED9               	movwf	fsr2l,c
  6467  000122  0100               	movlb	0	; () banked
  6468  000124  0E00               	movlw	high _TxBuff
  6469  000126  20F4               	addwfc	prodh,w,c
  6470  000128  6EDA               	movwf	fsr2h,c
  6471  00012A  50DF               	movf	indf2,w,c
  6472  00012C  6EAD               	movwf	4013,c	;volatile
  6473                           
  6474                           ; BSR set to: 0
  6475                           ;WordClock.c: 268: TxBuffIndx++;
  6476  00012E  2A52               	incf	_TxBuffIndx,f,c
  6477                           
  6478                           ; BSR set to: 0
  6479                           ;WordClock.c: 269: if(TxBuffIndx>=TxBuffLen)
  6480  000130  5053               	movf	_TxBuffLen,w,c
  6481  000132  5C52               	subwf	_TxBuffIndx,w,c
  6482  000134  A0D8               	btfss	status,0,c
  6483  000136  D00C               	goto	i1l2847
  6484                           
  6485                           ; BSR set to: 0
  6486                           ;WordClock.c: 270: {
  6487                           ;WordClock.c: 271: TXSTAbits.TXEN=0;
  6488  000138  9AAC               	bcf	4012,5,c	;volatile
  6489                           
  6490                           ;WordClock.c: 272: PIE1bits.TXIE=0;
  6491  00013A  989D               	bcf	3997,4,c	;volatile
  6492                           
  6493                           ; BSR set to: 0
  6494                           ;WordClock.c: 273: TxFsmFlag=1;
  6495  00013C  6E27               	movwf	??_low_isr& (0+255),c
  6496  00013E  0E01               	movlw	1
  6497  000140  0100               	movlb	0	; () banked
  6498  000142  0100               	movlb	0	; () banked
  6499  000144  6F8A               	movwf	_TxFsmFlag& (0+255),b
  6500  000146  5027               	movf	??_low_isr& (0+255),w,c
  6501                           
  6502                           ;WordClock.c: 274: CommFsmFlag=1;
  6503  000148  6E27               	movwf	??_low_isr& (0+255),c
  6504  00014A  0E01               	movlw	1
  6505  00014C  6E46               	movwf	_CommFsmFlag,c
  6506  00014E  5027               	movf	??_low_isr& (0+255),w,c
  6507  000150                     i1l2847:
  6508                           
  6509                           ;WordClock.c: 275: }
  6510                           ;WordClock.c: 276: }
  6511                           ;WordClock.c: 278: if (INTCONbits.TMR0IF)
  6512  000150  A4F2               	btfss	intcon,2,c	;volatile
  6513  000152  D00A               	goto	i1l245
  6514                           
  6515                           ;WordClock.c: 279: {
  6516                           ;WordClock.c: 280: INTCONbits.TMR0IE=0;
  6517  000154  9AF2               	bcf	intcon,5,c	;volatile
  6518                           
  6519                           ;WordClock.c: 281: INTCONbits.TMR0IF=0;
  6520  000156  94F2               	bcf	intcon,2,c	;volatile
  6521                           
  6522                           ;WordClock.c: 282: RXerr = 2;
  6523  000158  0E00               	movlw	0
  6524  00015A  6E41               	movwf	_RXerr+1,c
  6525  00015C  0E02               	movlw	2
  6526  00015E  6E40               	movwf	_RXerr,c
  6527                           
  6528                           ;WordClock.c: 283: RxFlag = 1;
  6529  000160  6E27               	movwf	??_low_isr& (0+255),c
  6530  000162  0E01               	movlw	1
  6531  000164  6E50               	movwf	_RxFlag,c
  6532  000166  5027               	movf	??_low_isr& (0+255),w,c
  6533  000168                     i1l245:
  6534  000168  C039  FFF5         	movff	??_low_isr+18,tablat
  6535  00016C  C038  FFF8         	movff	??_low_isr+17,tblptru
  6536  000170  C037  FFF7         	movff	??_low_isr+16,tblptrh
  6537  000174  C036  FFF6         	movff	??_low_isr+15,tblptrl
  6538  000178  C035  FFF4         	movff	??_low_isr+14,prodh
  6539  00017C  C034  FFF3         	movff	??_low_isr+13,prodl
  6540  000180  C033  FFDA         	movff	??_low_isr+12,fsr2h
  6541  000184  C032  FFD9         	movff	??_low_isr+11,fsr2l
  6542  000188  C031  FFE2         	movff	??_low_isr+10,fsr1h
  6543  00018C  C030  FFE1         	movff	??_low_isr+9,fsr1l
  6544  000190  C02F  FFEA         	movff	??_low_isr+8,fsr0h
  6545  000194  C02E  FFE9         	movff	??_low_isr+7,fsr0l
  6546  000198  C02D  FFFB         	movff	??_low_isr+6,pclatu
  6547  00019C  C02C  FFFA         	movff	??_low_isr+5,pclath
  6548  0001A0  C02B  FFE0         	movff	??_low_isr+4,bsr
  6549  0001A4  C02A  FFE8         	movff	??_low_isr+3,wreg
  6550  0001A8  C029  FFD8         	movff	??_low_isr+2,status
  6551  0001AC  0010               	retfie	
  6552  0001AE                     __end_of_low_isr:
  6553                           	opt stack 0
  6554                           tosu	equ	0xFFF
  6555                           tosh	equ	0xFFE
  6556                           tosl	equ	0xFFD
  6557                           pclatu	equ	0xFFB
  6558                           pclath	equ	0xFFA
  6559                           tblptru	equ	0xFF8
  6560                           tblptrh	equ	0xFF7
  6561                           tblptrl	equ	0xFF6
  6562                           tablat	equ	0xFF5
  6563                           prodh	equ	0xFF4
  6564                           prodl	equ	0xFF3
  6565                           intcon	equ	0xFF2
  6566                           intcon2	equ	0xFF1
  6567                           indf0	equ	0xFEF
  6568                           postinc0	equ	0xFEE
  6569                           fsr0h	equ	0xFEA
  6570                           fsr0l	equ	0xFE9
  6571                           wreg	equ	0xFE8
  6572                           postdec1	equ	0xFE5
  6573                           fsr1h	equ	0xFE2
  6574                           fsr1l	equ	0xFE1
  6575                           bsr	equ	0xFE0
  6576                           indf2	equ	0xFDF
  6577                           postinc2	equ	0xFDE
  6578                           postdec2	equ	0xFDD
  6579                           fsr2h	equ	0xFDA
  6580                           fsr2l	equ	0xFD9
  6581                           status	equ	0xFD8
  6582                           
  6583 ;; *************** function _strstr *****************
  6584 ;; Defined at:
  6585 ;;		line 4 in file "/Applications/microchip/xc8/v1.31/sources/common/strstr.c"
  6586 ;; Parameters:    Size  Location     Type
  6587 ;;  s1              2   34[COMRAM] PTR const unsigned char 
  6588 ;;		 -> NULL(0), STR_6(2), RXbuff(64), 
  6589 ;;  s2              2   36[COMRAM] PTR const unsigned char 
  6590 ;;		 -> STR_11(1), STR_10(7), STR_9(6), STR_8(4), 
  6591 ;;		 -> STR_7(4), STR_5(1), STR_4(7), STR_3(6), 
  6592 ;;		 -> STR_2(4), STR_1(4), 
  6593 ;; Auto vars:     Size  Location     Type
  6594 ;;		None
  6595 ;; Return value:  Size  Location     Type
  6596 ;;                  2   34[COMRAM] PTR unsigned char 
  6597 ;; Registers used:
  6598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6599 ;; Tracked objects:
  6600 ;;		On entry : 0/0
  6601 ;;		On exit  : 0/0
  6602 ;;		Unchanged: 0/0
  6603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6604 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6607 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6608 ;;Total ram usage:        4 bytes
  6609 ;; Hardware stack levels used:    1
  6610 ;; Hardware stack levels required when called:    3
  6611 ;; This function calls:
  6612 ;;		_strncmp
  6613 ;;		i1_strchr
  6614 ;;		i1_strlen
  6615 ;; This function is called by:
  6616 ;;		_low_isr
  6617 ;; This function uses a non-reentrant model
  6618 ;;
  6619                           
  6620                           	psect	text32
  6621  0021F8                     __ptext32:
  6622                           	opt stack 0
  6623  0021F8                     _strstr:
  6624                           	opt stack 22
  6625                           
  6626                           ;incstack = 0
  6627  0021F8  D033               	goto	i1l2715
  6628  0021FA                     i1l2707:
  6629  0021FA  C024  F01B         	movff	strstr@s1+1,strncmp@s1+1
  6630  0021FE  C023  F01A         	movff	strstr@s1,strncmp@s1
  6631  002202  C026  F01D         	movff	strstr@s2+1,strncmp@s2+1
  6632  002206  C025  F01C         	movff	strstr@s2,strncmp@s2
  6633  00220A  C026  F015         	movff	strstr@s2+1,i1strlen@s+1
  6634  00220E  C025  F014         	movff	strstr@s2,i1strlen@s
  6635  002212  ECA4  F014         	call	i1_strlen	;wreg free
  6636  002216  C014  F01E         	movff	?i1_strlen,strncmp@len
  6637  00221A  C015  F01F         	movff	?i1_strlen+1,strncmp@len+1
  6638  00221E  EC33  F010         	call	_strncmp	;wreg free
  6639  002222  501B               	movf	?_strncmp+1,w,c
  6640  002224  101A               	iorwf	?_strncmp,w,c
  6641  002226  A4D8               	btfss	status,2,c
  6642  002228  D005               	goto	i1l2713
  6643  00222A  C024  F024         	movff	strstr@s1+1,?_strstr+1
  6644  00222E  C023  F023         	movff	strstr@s1,?_strstr
  6645  002232  D032               	goto	i1l1064
  6646  002234                     i1l2713:
  6647  002234  0E01               	movlw	1
  6648  002236  2423               	addwf	strstr@s1,w,c
  6649  002238  6E14               	movwf	i1strchr@ptr,c
  6650  00223A  0E00               	movlw	0
  6651  00223C  2024               	addwfc	strstr@s1+1,w,c
  6652  00223E  6E15               	movwf	i1strchr@ptr+1,c
  6653  002240  C025  FFF6         	movff	strstr@s2,tblptrl
  6654  002244  C026  FFF7         	movff	strstr@s2+1,tblptrh
  6655  002248  0E00               	movlw	low (__mediumconst shr (0+16))
  6656  00224A  6EF8               	movwf	tblptru,c
  6657  00224C  0008               	tblrd		*
  6658  00224E  50F5               	movf	tablat,w,c
  6659  002250  6E16               	movwf	i1strchr@chr,c
  6660  002252  6A17               	clrf	i1strchr@chr+1,c
  6661  002254  EC9F  F012         	call	i1_strchr	;wreg free
  6662  002258  C014  F023         	movff	?i1_strchr,strstr@s1
  6663  00225C  C015  F024         	movff	?i1_strchr+1,strstr@s1+1
  6664  002260                     i1l2715:
  6665  002260  5024               	movf	strstr@s1+1,w,c
  6666  002262  1023               	iorwf	strstr@s1,w,c
  6667  002264  B4D8               	btfsc	status,2,c
  6668  002266  D014               	goto	i1l2719
  6669  002268  C023  FFF6         	movff	strstr@s1,tblptrl
  6670  00226C  C024  FFF7         	movff	strstr@s1+1,tblptrh
  6671  002270  0E00               	movlw	low (__smallconst shr (0+16))
  6672  002272  6EF8               	movwf	tblptru,c
  6673  002274  0E0F               	movlw	(high __ramtop+-1)
  6674  002276  64F7               	cpfsgt	tblptrh,c
  6675  002278  D003               	bra	i1u171_27
  6676  00227A  0008               	tblrd		*
  6677  00227C  50F5               	movf	tablat,w,c
  6678  00227E  D005               	bra	i1u171_20
  6679  002280                     i1u171_27:
  6680  002280  CFF6 FFE9          	movff	tblptrl,fsr0l
  6681  002284  CFF7 FFEA          	movff	tblptrh,fsr0h
  6682  002288  50EF               	movf	indf0,w,c
  6683  00228A                     i1u171_20:
  6684  00228A  0900               	iorlw	0
  6685  00228C  A4D8               	btfss	status,2,c
  6686  00228E  D7B5               	goto	i1l2707
  6687  002290                     i1l2719:
  6688  002290  0E00               	movlw	0
  6689  002292  6E24               	movwf	?_strstr+1,c
  6690  002294  0E00               	movlw	0
  6691  002296  6E23               	movwf	?_strstr,c
  6692  002298                     i1l1064:
  6693  002298  0012               	return	
  6694  00229A                     __end_of_strstr:
  6695                           	opt stack 0
  6696                           tosu	equ	0xFFF
  6697                           tosh	equ	0xFFE
  6698                           tosl	equ	0xFFD
  6699                           pclatu	equ	0xFFB
  6700                           pclath	equ	0xFFA
  6701                           tblptru	equ	0xFF8
  6702                           tblptrh	equ	0xFF7
  6703                           tblptrl	equ	0xFF6
  6704                           tablat	equ	0xFF5
  6705                           prodh	equ	0xFF4
  6706                           prodl	equ	0xFF3
  6707                           intcon	equ	0xFF2
  6708                           intcon2	equ	0xFF1
  6709                           indf0	equ	0xFEF
  6710                           postinc0	equ	0xFEE
  6711                           fsr0h	equ	0xFEA
  6712                           fsr0l	equ	0xFE9
  6713                           wreg	equ	0xFE8
  6714                           postdec1	equ	0xFE5
  6715                           fsr1h	equ	0xFE2
  6716                           fsr1l	equ	0xFE1
  6717                           bsr	equ	0xFE0
  6718                           indf2	equ	0xFDF
  6719                           postinc2	equ	0xFDE
  6720                           postdec2	equ	0xFDD
  6721                           fsr2h	equ	0xFDA
  6722                           fsr2l	equ	0xFD9
  6723                           status	equ	0xFD8
  6724                           
  6725 ;; *************** function i1_strlen *****************
  6726 ;; Defined at:
  6727 ;;		line 4 in file "/Applications/microchip/xc8/v1.31/sources/common/strlen.c"
  6728 ;; Parameters:    Size  Location     Type
  6729 ;;  s               2   19[COMRAM] PTR const unsigned char 
  6730 ;;		 -> STR_11(1), STR_10(7), STR_9(6), STR_8(4), 
  6731 ;;		 -> STR_7(4), STR_5(1), STR_4(7), STR_3(6), 
  6732 ;;		 -> STR_2(4), STR_1(4), 
  6733 ;; Auto vars:     Size  Location     Type
  6734 ;;  strlen          2   23[COMRAM] PTR const unsigned char 
  6735 ;;		 -> STR_11(1), STR_10(7), STR_9(6), STR_8(4), 
  6736 ;;		 -> STR_7(4), STR_5(1), STR_4(7), STR_3(6), 
  6737 ;;		 -> STR_2(4), STR_1(4), 
  6738 ;; Return value:  Size  Location     Type
  6739 ;;                  2   19[COMRAM] unsigned int 
  6740 ;; Registers used:
  6741 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6742 ;; Tracked objects:
  6743 ;;		On entry : 0/0
  6744 ;;		On exit  : 0/0
  6745 ;;		Unchanged: 0/0
  6746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6747 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6748 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6749 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6750 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6751 ;;Total ram usage:        6 bytes
  6752 ;; Hardware stack levels used:    1
  6753 ;; Hardware stack levels required when called:    2
  6754 ;; This function calls:
  6755 ;;		Nothing
  6756 ;; This function is called by:
  6757 ;;		_strstr
  6758 ;; This function uses a non-reentrant model
  6759 ;;
  6760                           
  6761                           	psect	text33
  6762  002948                     __ptext33:
  6763                           	opt stack 0
  6764  002948                     i1_strlen:
  6765                           	opt stack 22
  6766                           
  6767                           ;incstack = 0
  6768  002948  C015  F019         	movff	i1strlen@s+1,i1strlen@cp+1
  6769  00294C  C014  F018         	movff	i1strlen@s,i1strlen@cp
  6770  002950  D002               	goto	i1l2427
  6771  002952                     i1l2425:
  6772  002952  4A18               	infsnz	i1strlen@cp,f,c
  6773  002954  2A19               	incf	i1strlen@cp+1,f,c
  6774  002956                     i1l2427:
  6775  002956  C018  FFF6         	movff	i1strlen@cp,tblptrl
  6776  00295A  C019  FFF7         	movff	i1strlen@cp+1,tblptrh
  6777  00295E  0E00               	movlw	low (__mediumconst shr (0+16))
  6778  002960  6EF8               	movwf	tblptru,c
  6779  002962  0008               	tblrd		*
  6780  002964  50F5               	movf	tablat,w,c
  6781  002966  0900               	iorlw	0
  6782  002968  A4D8               	btfss	status,2,c
  6783  00296A  D7F3               	goto	i1l2425
  6784  00296C  C014  F016         	movff	i1strlen@s,??i1_strlen
  6785  002970  C015  F017         	movff	i1strlen@s+1,??i1_strlen+1
  6786  002974  1E16               	comf	??i1_strlen,f,c
  6787  002976  1E17               	comf	??i1_strlen+1,f,c
  6788  002978  4A16               	infsnz	??i1_strlen,f,c
  6789  00297A  2A17               	incf	??i1_strlen+1,f,c
  6790  00297C  5018               	movf	i1strlen@cp,w,c
  6791  00297E  2416               	addwf	??i1_strlen,w,c
  6792  002980  6E14               	movwf	?i1_strlen,c
  6793  002982  5019               	movf	i1strlen@cp+1,w,c
  6794  002984  2017               	addwfc	??i1_strlen+1,w,c
  6795  002986  6E15               	movwf	?i1_strlen+1,c
  6796  002988  0012               	return	
  6797  00298A                     __end_ofi1_strlen:
  6798                           	opt stack 0
  6799                           tosu	equ	0xFFF
  6800                           tosh	equ	0xFFE
  6801                           tosl	equ	0xFFD
  6802                           pclatu	equ	0xFFB
  6803                           pclath	equ	0xFFA
  6804                           tblptru	equ	0xFF8
  6805                           tblptrh	equ	0xFF7
  6806                           tblptrl	equ	0xFF6
  6807                           tablat	equ	0xFF5
  6808                           prodh	equ	0xFF4
  6809                           prodl	equ	0xFF3
  6810                           intcon	equ	0xFF2
  6811                           intcon2	equ	0xFF1
  6812                           indf0	equ	0xFEF
  6813                           postinc0	equ	0xFEE
  6814                           fsr0h	equ	0xFEA
  6815                           fsr0l	equ	0xFE9
  6816                           wreg	equ	0xFE8
  6817                           postdec1	equ	0xFE5
  6818                           fsr1h	equ	0xFE2
  6819                           fsr1l	equ	0xFE1
  6820                           bsr	equ	0xFE0
  6821                           indf2	equ	0xFDF
  6822                           postinc2	equ	0xFDE
  6823                           postdec2	equ	0xFDD
  6824                           fsr2h	equ	0xFDA
  6825                           fsr2l	equ	0xFD9
  6826                           status	equ	0xFD8
  6827                           
  6828 ;; *************** function i1_strchr *****************
  6829 ;; Defined at:
  6830 ;;		line 4 in file "/Applications/microchip/xc8/v1.31/sources/common/strchr.c"
  6831 ;; Parameters:    Size  Location     Type
  6832 ;;  ptr             2   19[COMRAM] PTR const unsigned char 
  6833 ;;		 -> NULL(0), STR_6(2), RXbuff(64), 
  6834 ;;  chr             2   21[COMRAM] int 
  6835 ;; Auto vars:     Size  Location     Type
  6836 ;;		None
  6837 ;; Return value:  Size  Location     Type
  6838 ;;                  2   19[COMRAM] PTR unsigned char 
  6839 ;; Registers used:
  6840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  6841 ;; Tracked objects:
  6842 ;;		On entry : 0/0
  6843 ;;		On exit  : 0/0
  6844 ;;		Unchanged: 0/0
  6845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6846 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6848 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6849 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6850 ;;Total ram usage:        6 bytes
  6851 ;; Hardware stack levels used:    1
  6852 ;; Hardware stack levels required when called:    2
  6853 ;; This function calls:
  6854 ;;		Nothing
  6855 ;; This function is called by:
  6856 ;;		_strstr
  6857 ;; This function uses a non-reentrant model
  6858 ;;
  6859                           
  6860                           	psect	text34
  6861  00253E                     __ptext34:
  6862                           	opt stack 0
  6863  00253E                     i1_strchr:
  6864                           	opt stack 22
  6865  00253E                     i1l1081:
  6866  00253E  C014  FFF6         	movff	i1strchr@ptr,tblptrl
  6867  002542  C015  FFF7         	movff	i1strchr@ptr+1,tblptrh
  6868  002546  0E00               	movlw	low (__smallconst shr (0+16))
  6869  002548  6EF8               	movwf	tblptru,c
  6870  00254A  0E0F               	movlw	(high __ramtop+-1)
  6871  00254C  64F7               	cpfsgt	tblptrh,c
  6872  00254E  D003               	bra	i1u145_27
  6873  002550  0008               	tblrd		*
  6874  002552  50F5               	movf	tablat,w,c
  6875  002554  D005               	bra	i1u145_20
  6876  002556                     i1u145_27:
  6877  002556  CFF6 FFE9          	movff	tblptrl,fsr0l
  6878  00255A  CFF7 FFEA          	movff	tblptrh,fsr0h
  6879  00255E  50EF               	movf	indf0,w,c
  6880  002560                     i1u145_20:
  6881  002560  1816               	xorwf	i1strchr@chr,w,c
  6882  002562  A4D8               	btfss	status,2,c
  6883  002564  D005               	goto	i1l2439
  6884  002566  C015  F015         	movff	i1strchr@ptr+1,?i1_strchr+1
  6885  00256A  C014  F014         	movff	i1strchr@ptr,?i1_strchr
  6886  00256E  D01E               	goto	i1l1083
  6887  002570                     i1l2439:
  6888  002570  5014               	movf	i1strchr@ptr,w,c
  6889  002572  6E18               	movwf	??i1_strchr& (0+255),c
  6890  002574  5015               	movf	i1strchr@ptr+1,w,c
  6891  002576  6E19               	movwf	(??i1_strchr+1)& (0+255),c
  6892  002578  4A14               	infsnz	i1strchr@ptr,f,c
  6893  00257A  2A15               	incf	i1strchr@ptr+1,f,c
  6894  00257C  C018  FFF6         	movff	??i1_strchr,tblptrl
  6895  002580  C019  FFF7         	movff	??i1_strchr+1,tblptrh
  6896  002584  0E00               	movlw	low (__smallconst shr (0+16))
  6897  002586  6EF8               	movwf	tblptru,c
  6898  002588  0E0F               	movlw	(high __ramtop+-1)
  6899  00258A  64F7               	cpfsgt	tblptrh,c
  6900  00258C  D003               	bra	i1u147_27
  6901  00258E  0008               	tblrd		*
  6902  002590  50F5               	movf	tablat,w,c
  6903  002592  D005               	bra	i1u147_20
  6904  002594                     i1u147_27:
  6905  002594  CFF6 FFE9          	movff	tblptrl,fsr0l
  6906  002598  CFF7 FFEA          	movff	tblptrh,fsr0h
  6907  00259C  50EF               	movf	indf0,w,c
  6908  00259E                     i1u147_20:
  6909  00259E  0900               	iorlw	0
  6910  0025A0  A4D8               	btfss	status,2,c
  6911  0025A2  D7CD               	goto	i1l1081
  6912  0025A4  0E00               	movlw	0
  6913  0025A6  6E15               	movwf	?i1_strchr+1,c
  6914  0025A8  0E00               	movlw	0
  6915  0025AA  6E14               	movwf	?i1_strchr,c
  6916  0025AC                     i1l1083:
  6917  0025AC  0012               	return	
  6918  0025AE                     __end_ofi1_strchr:
  6919                           	opt stack 0
  6920                           tosu	equ	0xFFF
  6921                           tosh	equ	0xFFE
  6922                           tosl	equ	0xFFD
  6923                           pclatu	equ	0xFFB
  6924                           pclath	equ	0xFFA
  6925                           tblptru	equ	0xFF8
  6926                           tblptrh	equ	0xFF7
  6927                           tblptrl	equ	0xFF6
  6928                           tablat	equ	0xFF5
  6929                           prodh	equ	0xFF4
  6930                           prodl	equ	0xFF3
  6931                           intcon	equ	0xFF2
  6932                           intcon2	equ	0xFF1
  6933                           indf0	equ	0xFEF
  6934                           postinc0	equ	0xFEE
  6935                           fsr0h	equ	0xFEA
  6936                           fsr0l	equ	0xFE9
  6937                           wreg	equ	0xFE8
  6938                           postdec1	equ	0xFE5
  6939                           fsr1h	equ	0xFE2
  6940                           fsr1l	equ	0xFE1
  6941                           bsr	equ	0xFE0
  6942                           indf2	equ	0xFDF
  6943                           postinc2	equ	0xFDE
  6944                           postdec2	equ	0xFDD
  6945                           fsr2h	equ	0xFDA
  6946                           fsr2l	equ	0xFD9
  6947                           status	equ	0xFD8
  6948                           
  6949 ;; *************** function _strncmp *****************
  6950 ;; Defined at:
  6951 ;;		line 4 in file "/Applications/microchip/xc8/v1.31/sources/common/strncmp.c"
  6952 ;; Parameters:    Size  Location     Type
  6953 ;;  s1              2   25[COMRAM] PTR const unsigned char 
  6954 ;;		 -> NULL(0), STR_6(2), RXbuff(64), 
  6955 ;;  s2              2   27[COMRAM] PTR const unsigned char 
  6956 ;;		 -> STR_11(1), STR_10(7), STR_9(6), STR_8(4), 
  6957 ;;		 -> STR_7(4), STR_5(1), STR_4(7), STR_3(6), 
  6958 ;;		 -> STR_2(4), STR_1(4), 
  6959 ;;  len             2   29[COMRAM] unsigned int 
  6960 ;; Auto vars:     Size  Location     Type
  6961 ;;		None
  6962 ;; Return value:  Size  Location     Type
  6963 ;;                  2   25[COMRAM] int 
  6964 ;; Registers used:
  6965 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  6966 ;; Tracked objects:
  6967 ;;		On entry : 0/0
  6968 ;;		On exit  : 0/0
  6969 ;;		Unchanged: 0/0
  6970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6971 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6973 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6974 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6975 ;;Total ram usage:        9 bytes
  6976 ;; Hardware stack levels used:    1
  6977 ;; Hardware stack levels required when called:    2
  6978 ;; This function calls:
  6979 ;;		Nothing
  6980 ;; This function is called by:
  6981 ;;		_strstr
  6982 ;; This function uses a non-reentrant model
  6983 ;;
  6984                           
  6985                           	psect	text35
  6986  002066                     __ptext35:
  6987                           	opt stack 0
  6988  002066                     _strncmp:
  6989                           	opt stack 22
  6990                           
  6991                           ;incstack = 0
  6992  002066  D05C               	goto	i1l2417
  6993  002068                     i1l2407:
  6994  002068  C01A  FFF6         	movff	strncmp@s1,tblptrl
  6995  00206C  C01B  FFF7         	movff	strncmp@s1+1,tblptrh
  6996  002070  0E00               	movlw	low (__smallconst shr (0+16))
  6997  002072  6EF8               	movwf	tblptru,c
  6998  002074  0E0F               	movlw	(high __ramtop+-1)
  6999  002076  64F7               	cpfsgt	tblptrh,c
  7000  002078  D003               	bra	i1u138_27
  7001  00207A  0008               	tblrd		*
  7002  00207C  50F5               	movf	tablat,w,c
  7003  00207E  D005               	bra	i1u138_20
  7004  002080                     i1u138_27:
  7005  002080  CFF6 FFE9          	movff	tblptrl,fsr0l
  7006  002084  CFF7 FFEA          	movff	tblptrh,fsr0h
  7007  002088  50EF               	movf	indf0,w,c
  7008  00208A                     i1u138_20:
  7009  00208A  0900               	iorlw	0
  7010  00208C  B4D8               	btfsc	status,2,c
  7011  00208E  D01D               	goto	i1l2411
  7012  002090  C01C  FFF6         	movff	strncmp@s2,tblptrl
  7013  002094  C01D  FFF7         	movff	strncmp@s2+1,tblptrh
  7014  002098  0E00               	movlw	low (__mediumconst shr (0+16))
  7015  00209A  6EF8               	movwf	tblptru,c
  7016  00209C  0008               	tblrd		*
  7017  00209E  CFF5 F020          	movff	tablat,??_strncmp
  7018  0020A2  C01A  FFF6         	movff	strncmp@s1,tblptrl
  7019  0020A6  C01B  FFF7         	movff	strncmp@s1+1,tblptrh
  7020  0020AA  0E00               	movlw	low (__smallconst shr (0+16))
  7021  0020AC  6EF8               	movwf	tblptru,c
  7022  0020AE  0E0F               	movlw	(high __ramtop+-1)
  7023  0020B0  64F7               	cpfsgt	tblptrh,c
  7024  0020B2  D003               	bra	i1u140_27
  7025  0020B4  0008               	tblrd		*
  7026  0020B6  50F5               	movf	tablat,w,c
  7027  0020B8  D005               	bra	i1u140_20
  7028  0020BA                     i1u140_27:
  7029  0020BA  CFF6 FFE9          	movff	tblptrl,fsr0l
  7030  0020BE  CFF7 FFEA          	movff	tblptrh,fsr0h
  7031  0020C2  50EF               	movf	indf0,w,c
  7032  0020C4                     i1u140_20:
  7033  0020C4  1820               	xorwf	??_strncmp,w,c
  7034  0020C6  B4D8               	btfsc	status,2,c
  7035  0020C8  D027               	goto	i1l2415
  7036  0020CA                     i1l2411:
  7037  0020CA  C01C  FFF6         	movff	strncmp@s2,tblptrl
  7038  0020CE  C01D  FFF7         	movff	strncmp@s2+1,tblptrh
  7039  0020D2  0E00               	movlw	low (__mediumconst shr (0+16))
  7040  0020D4  6EF8               	movwf	tblptru,c
  7041  0020D6  0008               	tblrd		*
  7042  0020D8  50F5               	movf	tablat,w,c
  7043  0020DA  6E20               	movwf	??_strncmp& (0+255),c
  7044  0020DC  6A21               	clrf	(??_strncmp+1)& (0+255),c
  7045  0020DE  1E20               	comf	??_strncmp,f,c
  7046  0020E0  1E21               	comf	??_strncmp+1,f,c
  7047  0020E2  4A20               	infsnz	??_strncmp,f,c
  7048  0020E4  2A21               	incf	??_strncmp+1,f,c
  7049  0020E6  C01A  FFF6         	movff	strncmp@s1,tblptrl
  7050  0020EA  C01B  FFF7         	movff	strncmp@s1+1,tblptrh
  7051  0020EE  0E00               	movlw	low (__smallconst shr (0+16))
  7052  0020F0  6EF8               	movwf	tblptru,c
  7053  0020F2  0E0F               	movlw	(high __ramtop+-1)
  7054  0020F4  64F7               	cpfsgt	tblptrh,c
  7055  0020F6  D003               	bra	i1u142_27
  7056  0020F8  0008               	tblrd		*
  7057  0020FA  50F5               	movf	tablat,w,c
  7058  0020FC  D005               	bra	i1u142_20
  7059  0020FE                     i1u142_27:
  7060  0020FE  CFF6 FFE9          	movff	tblptrl,fsr0l
  7061  002102  CFF7 FFEA          	movff	tblptrh,fsr0h
  7062  002106  50EF               	movf	indf0,w,c
  7063  002108                     i1u142_20:
  7064  002108  6E22               	movwf	(??_strncmp+2)& (0+255),c
  7065  00210A  5022               	movf	??_strncmp+2,w,c
  7066  00210C  2420               	addwf	??_strncmp,w,c
  7067  00210E  6E1A               	movwf	?_strncmp,c
  7068  002110  0E00               	movlw	0
  7069  002112  2021               	addwfc	??_strncmp+1,w,c
  7070  002114  6E1B               	movwf	?_strncmp+1,c
  7071  002116  D010               	goto	i1l1092
  7072  002118                     i1l2415:
  7073  002118  4A1A               	infsnz	strncmp@s1,f,c
  7074  00211A  2A1B               	incf	strncmp@s1+1,f,c
  7075  00211C  4A1C               	infsnz	strncmp@s2,f,c
  7076  00211E  2A1D               	incf	strncmp@s2+1,f,c
  7077  002120                     i1l2417:
  7078  002120  061E               	decf	strncmp@len,f,c
  7079  002122  A0D8               	btfss	status,0,c
  7080  002124  061F               	decf	strncmp@len+1,f,c
  7081  002126  281E               	incf	strncmp@len& (0+255),w,c
  7082  002128  B4D8               	btfsc	status,2,c
  7083  00212A  281F               	incf	(strncmp@len+1)& (0+255),w,c
  7084  00212C  A4D8               	btfss	status,2,c
  7085  00212E  D79C               	goto	i1l2407
  7086  002130  0E00               	movlw	0
  7087  002132  6E1B               	movwf	?_strncmp+1,c
  7088  002134  0E00               	movlw	0
  7089  002136  6E1A               	movwf	?_strncmp,c
  7090  002138                     i1l1092:
  7091  002138  0012               	return	
  7092  00213A                     __end_of_strncmp:
  7093                           	opt stack 0
  7094                           tosu	equ	0xFFF
  7095                           tosh	equ	0xFFE
  7096                           tosl	equ	0xFFD
  7097                           pclatu	equ	0xFFB
  7098                           pclath	equ	0xFFA
  7099                           tblptru	equ	0xFF8
  7100                           tblptrh	equ	0xFF7
  7101                           tblptrl	equ	0xFF6
  7102                           tablat	equ	0xFF5
  7103                           prodh	equ	0xFF4
  7104                           prodl	equ	0xFF3
  7105                           intcon	equ	0xFF2
  7106                           intcon2	equ	0xFF1
  7107                           indf0	equ	0xFEF
  7108                           postinc0	equ	0xFEE
  7109                           fsr0h	equ	0xFEA
  7110                           fsr0l	equ	0xFE9
  7111                           wreg	equ	0xFE8
  7112                           postdec1	equ	0xFE5
  7113                           fsr1h	equ	0xFE2
  7114                           fsr1l	equ	0xFE1
  7115                           bsr	equ	0xFE0
  7116                           indf2	equ	0xFDF
  7117                           postinc2	equ	0xFDE
  7118                           postdec2	equ	0xFDD
  7119                           fsr2h	equ	0xFDA
  7120                           fsr2l	equ	0xFD9
  7121                           status	equ	0xFD8
  7122                           
  7123 ;; *************** function _SetTimer0 *****************
  7124 ;; Defined at:
  7125 ;;		line 134 in file "../WordClock.c"
  7126 ;; Parameters:    Size  Location     Type
  7127 ;;  Count           2   19[COMRAM] int 
  7128 ;; Auto vars:     Size  Location     Type
  7129 ;;		None
  7130 ;; Return value:  Size  Location     Type
  7131 ;;		None               void
  7132 ;; Registers used:
  7133 ;;		wreg, status,2
  7134 ;; Tracked objects:
  7135 ;;		On entry : 0/0
  7136 ;;		On exit  : 0/0
  7137 ;;		Unchanged: 0/0
  7138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7141 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7142 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7143 ;;Total ram usage:        4 bytes
  7144 ;; Hardware stack levels used:    1
  7145 ;; Hardware stack levels required when called:    2
  7146 ;; This function calls:
  7147 ;;		Nothing
  7148 ;; This function is called by:
  7149 ;;		_low_isr
  7150 ;; This function uses a non-reentrant model
  7151 ;;
  7152                           
  7153                           	psect	text36
  7154  002A78                     __ptext36:
  7155                           	opt stack 0
  7156  002A78                     _SetTimer0:
  7157                           	opt stack 23
  7158                           
  7159                           ;WordClock.c: 141: TMR0H = Count >> 8;
  7160                           
  7161                           ;incstack = 0
  7162  002A78  C015  F016         	movff	SetTimer0@Count+1,??_SetTimer0
  7163  002A7C  6A17               	clrf	(??_SetTimer0+1)& (0+255),c
  7164  002A7E  BE16               	btfsc	??_SetTimer0& (0+255),7,c
  7165  002A80  6817               	setf	(??_SetTimer0+1)& (0+255),c
  7166  002A82  5016               	movf	??_SetTimer0,w,c
  7167  002A84  6ED7               	movwf	4055,c	;volatile
  7168                           
  7169                           ;WordClock.c: 142: TMR0L = Count;
  7170  002A86  C014  FFD6         	movff	SetTimer0@Count,4054	;volatile
  7171  002A8A  0012               	return	
  7172  002A8C                     __end_of_SetTimer0:
  7173                           	opt stack 0
  7174                           tosu	equ	0xFFF
  7175                           tosh	equ	0xFFE
  7176                           tosl	equ	0xFFD
  7177                           pclatu	equ	0xFFB
  7178                           pclath	equ	0xFFA
  7179                           tblptru	equ	0xFF8
  7180                           tblptrh	equ	0xFF7
  7181                           tblptrl	equ	0xFF6
  7182                           tablat	equ	0xFF5
  7183                           prodh	equ	0xFF4
  7184                           prodl	equ	0xFF3
  7185                           intcon	equ	0xFF2
  7186                           intcon2	equ	0xFF1
  7187                           indf0	equ	0xFEF
  7188                           postinc0	equ	0xFEE
  7189                           fsr0h	equ	0xFEA
  7190                           fsr0l	equ	0xFE9
  7191                           wreg	equ	0xFE8
  7192                           postdec1	equ	0xFE5
  7193                           fsr1h	equ	0xFE2
  7194                           fsr1l	equ	0xFE1
  7195                           bsr	equ	0xFE0
  7196                           indf2	equ	0xFDF
  7197                           postinc2	equ	0xFDE
  7198                           postdec2	equ	0xFDD
  7199                           fsr2h	equ	0xFDA
  7200                           fsr2l	equ	0xFD9
  7201                           status	equ	0xFD8
  7202                           
  7203 ;; *************** function _ReadUSART *****************
  7204 ;; Defined at:
  7205 ;;		line 15 in file "/Applications/microchip/xc8/v1.31/sources/pic18/plib/USART/uread.c"
  7206 ;; Parameters:    Size  Location     Type
  7207 ;;		None
  7208 ;; Auto vars:     Size  Location     Type
  7209 ;;  data            1   19[COMRAM] unsigned char 
  7210 ;; Return value:  Size  Location     Type
  7211 ;;                  1    wreg      unsigned char 
  7212 ;; Registers used:
  7213 ;;		wreg, status,2, status,0
  7214 ;; Tracked objects:
  7215 ;;		On entry : 0/0
  7216 ;;		On exit  : 0/0
  7217 ;;		Unchanged: 0/0
  7218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7220 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7222 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7223 ;;Total ram usage:        1 bytes
  7224 ;; Hardware stack levels used:    1
  7225 ;; Hardware stack levels required when called:    2
  7226 ;; This function calls:
  7227 ;;		Nothing
  7228 ;; This function is called by:
  7229 ;;		_low_isr
  7230 ;; This function uses a non-reentrant model
  7231 ;;
  7232                           
  7233                           	psect	text37
  7234  0029D8                     __ptext37:
  7235                           	opt stack 0
  7236  0029D8                     _ReadUSART:
  7237                           	opt stack 23
  7238                           
  7239                           ;incstack = 0
  7240  0029D8  0EF2               	movlw	242
  7241  0029DA  1654               	andwf	_USART_Status,f,c
  7242  0029DC  ACAB               	btfss	4011,6,c	;volatile
  7243  0029DE  D003               	goto	i1l462
  7244  0029E0  9054               	bcf	_USART_Status,0,c
  7245  0029E2  B0AB               	btfsc	4011,0,c	;volatile
  7246  0029E4  8054               	bsf	_USART_Status,0,c
  7247  0029E6                     i1l462:
  7248  0029E6  B4AB               	btfsc	4011,2,c	;volatile
  7249  0029E8  8454               	bsf	_USART_Status,2,c
  7250  0029EA  B2AB               	btfsc	4011,1,c	;volatile
  7251  0029EC  8654               	bsf	_USART_Status,3,c
  7252  0029EE  CFAE F014          	movff	4014,ReadUSART@data	;volatile
  7253  0029F2  5014               	movf	ReadUSART@data,w,c
  7254  0029F4  0012               	return	
  7255  0029F6                     __end_of_ReadUSART:
  7256                           	opt stack 0
  7257                           tosu	equ	0xFFF
  7258                           tosh	equ	0xFFE
  7259                           tosl	equ	0xFFD
  7260                           pclatu	equ	0xFFB
  7261                           pclath	equ	0xFFA
  7262                           tblptru	equ	0xFF8
  7263                           tblptrh	equ	0xFF7
  7264                           tblptrl	equ	0xFF6
  7265                           tablat	equ	0xFF5
  7266                           prodh	equ	0xFF4
  7267                           prodl	equ	0xFF3
  7268                           intcon	equ	0xFF2
  7269                           intcon2	equ	0xFF1
  7270                           indf0	equ	0xFEF
  7271                           postinc0	equ	0xFEE
  7272                           fsr0h	equ	0xFEA
  7273                           fsr0l	equ	0xFE9
  7274                           wreg	equ	0xFE8
  7275                           postdec1	equ	0xFE5
  7276                           fsr1h	equ	0xFE2
  7277                           fsr1l	equ	0xFE1
  7278                           bsr	equ	0xFE0
  7279                           indf2	equ	0xFDF
  7280                           postinc2	equ	0xFDE
  7281                           postdec2	equ	0xFDD
  7282                           fsr2h	equ	0xFDA
  7283                           fsr2l	equ	0xFD9
  7284                           status	equ	0xFD8
  7285                           
  7286 ;; *************** function _high_isr *****************
  7287 ;; Defined at:
  7288 ;;		line 289 in file "../WordClock.c"
  7289 ;; Parameters:    Size  Location     Type
  7290 ;;		None
  7291 ;; Auto vars:     Size  Location     Type
  7292 ;;		None
  7293 ;; Return value:  Size  Location     Type
  7294 ;;		None               void
  7295 ;; Registers used:
  7296 ;;		wreg, status,2, status,0, cstack
  7297 ;; Tracked objects:
  7298 ;;		On entry : 0/0
  7299 ;;		On exit  : 0/0
  7300 ;;		Unchanged: 0/0
  7301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7304 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7305 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7306 ;;Total ram usage:       15 bytes
  7307 ;; Hardware stack levels used:    1
  7308 ;; Hardware stack levels required when called:    1
  7309 ;; This function calls:
  7310 ;;		i2_SetTimer3
  7311 ;; This function is called by:
  7312 ;;		Interrupt level 2
  7313 ;; This function uses a non-reentrant model
  7314 ;;
  7315                           
  7316                           	psect	intcode
  7317  000008                     __pintcode:
  7318                           	opt stack 0
  7319  000008                     _high_isr:
  7320                           	opt stack 22
  7321                           
  7322                           ;incstack = 0
  7323  000008  CFFA F006          	movff	pclath,??_high_isr+1
  7324  00000C  CFFB F007          	movff	pclatu,??_high_isr+2
  7325  000010  CFE9 F008          	movff	fsr0l,??_high_isr+3
  7326  000014  ED9D  F010         	call	int_func,f	;refresh shadow registers
  7327                           tosu	equ	0xFFF
  7328                           tosh	equ	0xFFE
  7329                           tosl	equ	0xFFD
  7330                           pclatu	equ	0xFFB
  7331                           pclath	equ	0xFFA
  7332                           tblptru	equ	0xFF8
  7333                           tblptrh	equ	0xFF7
  7334                           tblptrl	equ	0xFF6
  7335                           tablat	equ	0xFF5
  7336                           prodh	equ	0xFF4
  7337                           prodl	equ	0xFF3
  7338                           intcon	equ	0xFF2
  7339                           intcon2	equ	0xFF1
  7340                           indf0	equ	0xFEF
  7341                           postinc0	equ	0xFEE
  7342                           fsr0h	equ	0xFEA
  7343                           fsr0l	equ	0xFE9
  7344                           wreg	equ	0xFE8
  7345                           postdec1	equ	0xFE5
  7346                           fsr1h	equ	0xFE2
  7347                           fsr1l	equ	0xFE1
  7348                           bsr	equ	0xFE0
  7349                           indf2	equ	0xFDF
  7350                           postinc2	equ	0xFDE
  7351                           postdec2	equ	0xFDD
  7352                           fsr2h	equ	0xFDA
  7353                           fsr2l	equ	0xFD9
  7354                           status	equ	0xFD8
  7355                           
  7356                           	psect	intcode_body
  7357  00213A                     __pintcode_body:
  7358                           	opt stack 22
  7359  00213A                     int_func:
  7360                           	opt stack 22
  7361  00213A  0006               	pop		; remove dummy address from shadow register refresh
  7362  00213C  CFEA F009          	movff	fsr0h,??_high_isr+4
  7363  002140  CFE1 F00A          	movff	fsr1l,??_high_isr+5
  7364  002144  CFE2 F00B          	movff	fsr1h,??_high_isr+6
  7365  002148  CFD9 F00C          	movff	fsr2l,??_high_isr+7
  7366  00214C  CFDA F00D          	movff	fsr2h,??_high_isr+8
  7367  002150  CFF3 F00E          	movff	prodl,??_high_isr+9
  7368  002154  CFF4 F00F          	movff	prodh,??_high_isr+10
  7369  002158  CFF6 F010          	movff	tblptrl,??_high_isr+11
  7370  00215C  CFF7 F011          	movff	tblptrh,??_high_isr+12
  7371  002160  CFF8 F012          	movff	tblptru,??_high_isr+13
  7372  002164  CFF5 F013          	movff	tablat,??_high_isr+14
  7373                           
  7374                           ;WordClock.c: 291: if (PIR2bits.TMR3IF)
  7375  002168  A2A1               	btfss	4001,1,c	;volatile
  7376  00216A  D008               	goto	i2l2057
  7377                           
  7378                           ;WordClock.c: 292: {
  7379                           ;WordClock.c: 293: VARbits1.bit2 = 1;
  7380  00216C  8455               	bsf	_VARbits1,2,c
  7381                           
  7382                           ;WordClock.c: 294: SetTimer3(Timer3_ms);
  7383  00216E  C062  F001         	movff	_Timer3_ms,i2SetTimer3@Count
  7384  002172  C063  F002         	movff	_Timer3_ms+1,i2SetTimer3@Count+1
  7385  002176  EC46  F015         	call	i2_SetTimer3	;wreg free
  7386                           
  7387                           ;WordClock.c: 295: PIR2bits.TMR3IF = 0;
  7388  00217A  92A1               	bcf	4001,1,c	;volatile
  7389  00217C                     i2l2057:
  7390                           
  7391                           ;WordClock.c: 296: }
  7392                           ;WordClock.c: 298: if (PIR1bits.TMR1IF)
  7393  00217C  A09E               	btfss	3998,0,c	;volatile
  7394  00217E  D008               	goto	i2l2065
  7395                           
  7396                           ;WordClock.c: 299: {
  7397                           ;WordClock.c: 300: SetTimer3(Timer3_ms);
  7398  002180  C062  F001         	movff	_Timer3_ms,i2SetTimer3@Count
  7399  002184  C063  F002         	movff	_Timer3_ms+1,i2SetTimer3@Count+1
  7400  002188  EC46  F015         	call	i2_SetTimer3	;wreg free
  7401                           
  7402                           ;WordClock.c: 307: T1CONbits.TMR1ON=0;
  7403  00218C  90CD               	bcf	4045,0,c	;volatile
  7404                           
  7405                           ;WordClock.c: 308: PIR1bits.TMR1IF = 0;
  7406  00218E  909E               	bcf	3998,0,c	;volatile
  7407  002190                     i2l2065:
  7408                           
  7409                           ;WordClock.c: 309: }
  7410                           ;WordClock.c: 311: if (INTCONbits.INT0IF)
  7411  002190  A2F2               	btfss	intcon,1,c	;volatile
  7412  002192  D003               	goto	i2l2073
  7413                           
  7414                           ;WordClock.c: 312: {
  7415                           ;WordClock.c: 313: LATBbits.LATB5 ^= 1;
  7416  002194  7A8A               	btg	3978,5,c	;volatile
  7417                           
  7418                           ;WordClock.c: 314: VARbits1.bit1=1;
  7419  002196  8255               	bsf	_VARbits1,1,c
  7420                           
  7421                           ;WordClock.c: 315: INTCONbits.INT0IF = 0;
  7422  002198  92F2               	bcf	intcon,1,c	;volatile
  7423  00219A                     i2l2073:
  7424                           
  7425                           ;WordClock.c: 316: }
  7426                           ;WordClock.c: 318: if (PIR1bits.SSPIF)
  7427  00219A  A69E               	btfss	3998,3,c	;volatile
  7428  00219C  D005               	goto	i2l2079
  7429                           
  7430                           ;WordClock.c: 319: {
  7431                           ;WordClock.c: 320: PIR1bits.SSPIF = 0;
  7432  00219E  969E               	bcf	3998,3,c	;volatile
  7433                           
  7434                           ;WordClock.c: 321: I2cEventFlag = 1;
  7435  0021A0  6E05               	movwf	??_high_isr& (0+255),c
  7436  0021A2  0E01               	movlw	1
  7437  0021A4  6E4C               	movwf	_I2cEventFlag,c
  7438  0021A6  5005               	movf	??_high_isr& (0+255),w,c
  7439  0021A8                     i2l2079:
  7440                           
  7441                           ;WordClock.c: 322: }
  7442                           ;WordClock.c: 324: if (PIR2bits.BCLIF)
  7443  0021A8  A6A1               	btfss	4001,3,c	;volatile
  7444  0021AA  D009               	goto	i2l253
  7445                           
  7446                           ;WordClock.c: 325: {
  7447                           ;WordClock.c: 326: PIR2bits.BCLIF = 0;
  7448  0021AC  96A1               	bcf	4001,3,c	;volatile
  7449                           
  7450                           ;WordClock.c: 327: I2cEventFlag = 1;
  7451  0021AE  6E05               	movwf	??_high_isr& (0+255),c
  7452  0021B0  0E01               	movlw	1
  7453  0021B2  6E4C               	movwf	_I2cEventFlag,c
  7454  0021B4  5005               	movf	??_high_isr& (0+255),w,c
  7455                           
  7456                           ;WordClock.c: 328: I2cBusCollFlag = 1;
  7457  0021B6  6E05               	movwf	??_high_isr& (0+255),c
  7458  0021B8  0E01               	movlw	1
  7459  0021BA  6E49               	movwf	_I2cBusCollFlag,c
  7460  0021BC  5005               	movf	??_high_isr& (0+255),w,c
  7461  0021BE                     i2l253:
  7462  0021BE  C013  FFF5         	movff	??_high_isr+14,tablat
  7463  0021C2  C012  FFF8         	movff	??_high_isr+13,tblptru
  7464  0021C6  C011  FFF7         	movff	??_high_isr+12,tblptrh
  7465  0021CA  C010  FFF6         	movff	??_high_isr+11,tblptrl
  7466  0021CE  C00F  FFF4         	movff	??_high_isr+10,prodh
  7467  0021D2  C00E  FFF3         	movff	??_high_isr+9,prodl
  7468  0021D6  C00D  FFDA         	movff	??_high_isr+8,fsr2h
  7469  0021DA  C00C  FFD9         	movff	??_high_isr+7,fsr2l
  7470  0021DE  C00B  FFE2         	movff	??_high_isr+6,fsr1h
  7471  0021E2  C00A  FFE1         	movff	??_high_isr+5,fsr1l
  7472  0021E6  C009  FFEA         	movff	??_high_isr+4,fsr0h
  7473  0021EA  C008  FFE9         	movff	??_high_isr+3,fsr0l
  7474  0021EE  C007  FFFB         	movff	??_high_isr+2,pclatu
  7475  0021F2  C006  FFFA         	movff	??_high_isr+1,pclath
  7476  0021F6  0011               	retfie		f
  7477  0021F8                     __end_of_high_isr:
  7478                           	opt stack 0
  7479                           tosu	equ	0xFFF
  7480                           tosh	equ	0xFFE
  7481                           tosl	equ	0xFFD
  7482                           pclatu	equ	0xFFB
  7483                           pclath	equ	0xFFA
  7484                           tblptru	equ	0xFF8
  7485                           tblptrh	equ	0xFF7
  7486                           tblptrl	equ	0xFF6
  7487                           tablat	equ	0xFF5
  7488                           prodh	equ	0xFF4
  7489                           prodl	equ	0xFF3
  7490                           intcon	equ	0xFF2
  7491                           intcon2	equ	0xFF1
  7492                           indf0	equ	0xFEF
  7493                           postinc0	equ	0xFEE
  7494                           fsr0h	equ	0xFEA
  7495                           fsr0l	equ	0xFE9
  7496                           wreg	equ	0xFE8
  7497                           postdec1	equ	0xFE5
  7498                           fsr1h	equ	0xFE2
  7499                           fsr1l	equ	0xFE1
  7500                           bsr	equ	0xFE0
  7501                           indf2	equ	0xFDF
  7502                           postinc2	equ	0xFDE
  7503                           postdec2	equ	0xFDD
  7504                           fsr2h	equ	0xFDA
  7505                           fsr2l	equ	0xFD9
  7506                           status	equ	0xFD8
  7507                           
  7508 ;; *************** function i2_SetTimer3 *****************
  7509 ;; Defined at:
  7510 ;;		line 153 in file "../WordClock.c"
  7511 ;; Parameters:    Size  Location     Type
  7512 ;;  Count           2    0[COMRAM] int 
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;		None
  7515 ;; Return value:  Size  Location     Type
  7516 ;;		None               void
  7517 ;; Registers used:
  7518 ;;		wreg, status,2
  7519 ;; Tracked objects:
  7520 ;;		On entry : 0/0
  7521 ;;		On exit  : 0/0
  7522 ;;		Unchanged: 0/0
  7523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7526 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7527 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7528 ;;Total ram usage:        4 bytes
  7529 ;; Hardware stack levels used:    1
  7530 ;; This function calls:
  7531 ;;		Nothing
  7532 ;; This function is called by:
  7533 ;;		_high_isr
  7534 ;; This function uses a non-reentrant model
  7535 ;;
  7536                           
  7537                           	psect	text39
  7538  002A8C                     __ptext39:
  7539                           	opt stack 0
  7540  002A8C                     i2_SetTimer3:
  7541                           	opt stack 22
  7542                           
  7543                           ;WordClock.c: 160: TMR3H = Count >> 8;
  7544                           
  7545                           ;incstack = 0
  7546  002A8C  C002  F003         	movff	i2SetTimer3@Count+1,??i2_SetTimer3
  7547  002A90  6A04               	clrf	(??i2_SetTimer3+1)& (0+255),c
  7548  002A92  BE03               	btfsc	??i2_SetTimer3& (0+255),7,c
  7549  002A94  6804               	setf	(??i2_SetTimer3+1)& (0+255),c
  7550  002A96  5003               	movf	??i2_SetTimer3,w,c
  7551  002A98  6EB3               	movwf	4019,c	;volatile
  7552                           
  7553                           ;WordClock.c: 161: TMR3L = Count;
  7554  002A9A  C001  FFB2         	movff	i2SetTimer3@Count,4018	;volatile
  7555  002A9E  0012               	return	
  7556  002AA0                     __end_ofi2_SetTimer3:
  7557                           	opt stack 0
  7558                           tosu	equ	0xFFF
  7559                           tosh	equ	0xFFE
  7560                           tosl	equ	0xFFD
  7561                           pclatu	equ	0xFFB
  7562                           pclath	equ	0xFFA
  7563                           tblptru	equ	0xFF8
  7564                           tblptrh	equ	0xFF7
  7565                           tblptrl	equ	0xFF6
  7566                           tablat	equ	0xFF5
  7567                           prodh	equ	0xFF4
  7568                           prodl	equ	0xFF3
  7569                           intcon	equ	0xFF2
  7570                           intcon2	equ	0xFF1
  7571                           indf0	equ	0xFEF
  7572                           postinc0	equ	0xFEE
  7573                           fsr0h	equ	0xFEA
  7574                           fsr0l	equ	0xFE9
  7575                           wreg	equ	0xFE8
  7576                           postdec1	equ	0xFE5
  7577                           fsr1h	equ	0xFE2
  7578                           fsr1l	equ	0xFE1
  7579                           bsr	equ	0xFE0
  7580                           indf2	equ	0xFDF
  7581                           postinc2	equ	0xFDE
  7582                           postdec2	equ	0xFDD
  7583                           fsr2h	equ	0xFDA
  7584                           fsr2l	equ	0xFD9
  7585                           status	equ	0xFD8
  7586                           tosu	equ	0xFFF
  7587                           tosh	equ	0xFFE
  7588                           tosl	equ	0xFFD
  7589                           pclatu	equ	0xFFB
  7590                           pclath	equ	0xFFA
  7591                           tblptru	equ	0xFF8
  7592                           tblptrh	equ	0xFF7
  7593                           tblptrl	equ	0xFF6
  7594                           tablat	equ	0xFF5
  7595                           prodh	equ	0xFF4
  7596                           prodl	equ	0xFF3
  7597                           intcon	equ	0xFF2
  7598                           intcon2	equ	0xFF1
  7599                           indf0	equ	0xFEF
  7600                           postinc0	equ	0xFEE
  7601                           fsr0h	equ	0xFEA
  7602                           fsr0l	equ	0xFE9
  7603                           wreg	equ	0xFE8
  7604                           postdec1	equ	0xFE5
  7605                           fsr1h	equ	0xFE2
  7606                           fsr1l	equ	0xFE1
  7607                           bsr	equ	0xFE0
  7608                           indf2	equ	0xFDF
  7609                           postinc2	equ	0xFDE
  7610                           postdec2	equ	0xFDD
  7611                           fsr2h	equ	0xFDA
  7612                           fsr2l	equ	0xFD9
  7613                           status	equ	0xFD8
  7614                           
  7615                           	psect	text40
  7616  000000                     __ptext40:
  7617                           	opt stack 0
  7618                           tosu	equ	0xFFF
  7619                           tosh	equ	0xFFE
  7620                           tosl	equ	0xFFD
  7621                           pclatu	equ	0xFFB
  7622                           pclath	equ	0xFFA
  7623                           tblptru	equ	0xFF8
  7624                           tblptrh	equ	0xFF7
  7625                           tblptrl	equ	0xFF6
  7626                           tablat	equ	0xFF5
  7627                           prodh	equ	0xFF4
  7628                           prodl	equ	0xFF3
  7629                           intcon	equ	0xFF2
  7630                           intcon2	equ	0xFF1
  7631                           indf0	equ	0xFEF
  7632                           postinc0	equ	0xFEE
  7633                           fsr0h	equ	0xFEA
  7634                           fsr0l	equ	0xFE9
  7635                           wreg	equ	0xFE8
  7636                           postdec1	equ	0xFE5
  7637                           fsr1h	equ	0xFE2
  7638                           fsr1l	equ	0xFE1
  7639                           bsr	equ	0xFE0
  7640                           indf2	equ	0xFDF
  7641                           postinc2	equ	0xFDE
  7642                           postdec2	equ	0xFDD
  7643                           fsr2h	equ	0xFDA
  7644                           fsr2l	equ	0xFD9
  7645                           status	equ	0xFD8
  7646                           
  7647                           	psect	rparam
  7648  0000                     tosu	equ	0xFFF
  7649                           tosh	equ	0xFFE
  7650                           tosl	equ	0xFFD
  7651                           pclatu	equ	0xFFB
  7652                           pclath	equ	0xFFA
  7653                           tblptru	equ	0xFF8
  7654                           tblptrh	equ	0xFF7
  7655                           tblptrl	equ	0xFF6
  7656                           tablat	equ	0xFF5
  7657                           prodh	equ	0xFF4
  7658                           prodl	equ	0xFF3
  7659                           intcon	equ	0xFF2
  7660                           intcon2	equ	0xFF1
  7661                           indf0	equ	0xFEF
  7662                           postinc0	equ	0xFEE
  7663                           fsr0h	equ	0xFEA
  7664                           fsr0l	equ	0xFE9
  7665                           wreg	equ	0xFE8
  7666                           postdec1	equ	0xFE5
  7667                           fsr1h	equ	0xFE2
  7668                           fsr1l	equ	0xFE1
  7669                           bsr	equ	0xFE0
  7670                           indf2	equ	0xFDF
  7671                           postinc2	equ	0xFDE
  7672                           postdec2	equ	0xFDD
  7673                           fsr2h	equ	0xFDA
  7674                           fsr2l	equ	0xFD9
  7675                           status	equ	0xFD8


Data Sizes:
    Strings     23
    Constant    0
    Data        27
    BSS         145
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     57      99
    BANK0           128     30     100
    BANK1           256      0      64
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    StartRx@TxStr	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_11(CODE[1]), STR_10(CODE[7]), STR_9(CODE[6]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_5(CODE[1]), STR_4(CODE[7]), STR_3(CODE[6]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_11(CODE[1]), STR_10(CODE[7]), STR_9(CODE[6]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_5(CODE[1]), STR_4(CODE[7]), STR_3(CODE[6]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), STR_6(CODE[2]), RXbuff(BANK1[64]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), STR_6(CODE[2]), RXbuff(BANK1[64]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_11(CODE[1]), STR_10(CODE[7]), STR_9(CODE[6]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_5(CODE[1]), STR_4(CODE[7]), STR_3(CODE[6]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), STR_6(CODE[2]), RXbuff(BANK1[64]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_11(CODE[1]), STR_10(CODE[7]), STR_9(CODE[6]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_5(CODE[1]), STR_4(CODE[7]), STR_3(CODE[6]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_11(CODE[1]), STR_10(CODE[7]), STR_9(CODE[6]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_5(CODE[1]), STR_4(CODE[7]), STR_3(CODE[6]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), STR_6(CODE[2]), RXbuff(BANK1[64]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_6(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> RXbuff(BANK1[64]), 

    memcpy@d1	PTR void  size(2) Largest target is 32
		 -> TxBuff(BANK0[32]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 32
		 -> TxBuff(BANK0[32]), 

    memcpy@s1	PTR const void  size(2) Largest target is 7
		 -> STR_11(CODE[1]), STR_10(CODE[7]), STR_9(CODE[6]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_5(CODE[1]), STR_4(CODE[7]), STR_3(CODE[6]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_11(CODE[1]), STR_10(CODE[7]), STR_9(CODE[6]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_5(CODE[1]), STR_4(CODE[7]), STR_3(CODE[6]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 64
		 -> RXbuff(BANK1[64]), 

    sp__memcpy	PTR void  size(2) Largest target is 32
		 -> TxBuff(BANK0[32]), 

    StartTx@TxStr	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_11(CODE[1]), STR_10(CODE[7]), STR_9(CODE[6]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_5(CODE[1]), STR_4(CODE[7]), STR_3(CODE[6]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    CommFsmSched@FsmStruct.pCallback	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> TimeDecode(), CommFsmIdle(), 

    CommFsmSched@FsmStruct.Str	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_11(CODE[1]), STR_10(CODE[7]), STR_9(CODE[6]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_5(CODE[1]), STR_4(CODE[7]), STR_3(CODE[6]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    CommFsmSched@FsmStruct	PTR struct FsmTable size(2) Largest target is 30
		 -> NULL(NULL[0]), ReadTimeFsm(BANK0[25]), 

    StartCommFsmSched@FsmStruct	PTR struct FsmTable size(2) Largest target is 30
		 -> ReadTimeFsm(BANK0[25]), 

    CommFsmState	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> TimeDecode(), CommFsmIdle(), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), STR_6(CODE[2]), RXbuff(BANK1[64]), 

    FsmStructActive.pCallback	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> TimeDecode(), CommFsmIdle(), 

    FsmStructActive.Str	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_11(CODE[1]), STR_10(CODE[7]), STR_9(CODE[6]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_5(CODE[1]), STR_4(CODE[7]), STR_3(CODE[6]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    FsmStructActive	PTR struct FsmTable size(2) Largest target is 30
		 -> NULL(NULL[0]), ReadTimeFsm(BANK0[25]), 

    S682FsmTable$pCallback	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> TimeDecode(), CommFsmIdle(), 

    ReadTimeFsm.pCallback	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> TimeDecode(), CommFsmIdle(), 

    S682FsmTable$Str	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_11(CODE[1]), STR_10(CODE[7]), STR_9(CODE[6]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_5(CODE[1]), STR_4(CODE[7]), STR_3(CODE[6]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    ReadTimeFsm.Str	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_11(CODE[1]), STR_10(CODE[7]), STR_9(CODE[6]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_5(CODE[1]), STR_4(CODE[7]), STR_3(CODE[6]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    _low_isr->_strstr
    _strstr->_strncmp
    _strncmp->i1_strlen

Critical Paths under _high_isr in COMRAM

    _high_isr->i2_SetTimer3

Critical Paths under _main in BANK0

    _main->_CommFsmSched
    _RtcWriteTime->___awdiv
    _RtcInit->_I2cData
    _I2cService->_I2cLowService
    _I2cSettings->___wmul
    _CommFsmSched->_TimeDecode
    _TimeDecode->_atoi
    _TimeDecode->_strcspn
    _strcspn->_strchr
    _atoi->___wmul
    _StartTx->_memcpy

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   15095
                                             24 BANK0      6     6      0
                       _CommFsmSched
                        _CommSetting
                         _I2cBuffChk
                            _I2cData
                         _I2cService
                        _I2cSettings
                  _InterruptSettings
                            _RtcInit
                        _RtcReadTime
                       _RtcWriteTime
                          _SetTimer1
                          _SetTimer3
                           _Settings
                  _StartCommFsmSched
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     362
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _StartCommFsmSched                                    3     1      2      96
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _Settings                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetTimer3                                            4     2      2     187
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _SetTimer1                                            4     2      2     127
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _RtcWriteTime                                         5     5      0    3974
                                              9 BANK0      5     5      0
                         _I2cBuffChk
                            _I2cData
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     835
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _I2cBuffChk                                           3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _RtcReadTime                                          2     2      0     204
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _RtcInit                                              7     7      0    2780
                                              8 BANK0      7     7      0
                            _I2cData
                         _I2cService
 ---------------------------------------------------------------------------------
 (2) _I2cService                                           1     1      0       0
                                              4 BANK0      1     1      0
                     _I2cHighService
                      _I2cLowService
 ---------------------------------------------------------------------------------
 (3) _I2cLowService                                        4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _I2cHighService                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2cData                                              8     2      6    2743
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _InterruptSettings                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2cSettings                                          4     4      0    1139
                                              6 BANK0      4     4      0
                            _OpenI2C
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _OpenI2C                                              2     1      1     127
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _CommSetting                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CommFsmSched                                         5     3      2    3384
                                             19 BANK0      5     3      2
                        _CommFsmIdle *
                            _StartRx
                            _StartTx
                         _TimeDecode *
 ---------------------------------------------------------------------------------
 (2) _TimeDecode                                           6     6      0    2313
                                             13 BANK0      6     6      0
                               _atoi
                            _strcspn
 ---------------------------------------------------------------------------------
 (3) _strcspn                                              7     3      4     577
                                              6 BANK0      7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strchr                                               6     2      4     314
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    1640
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1012
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _StartTx                                              3     1      2     721
                                             10 BANK0      3     1      2
                             _memcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     225
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     369
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) _StartRx                                              3     1      2      65
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _CommFsmIdle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _low_isr                                             19    19      0     952
                                             38 COMRAM    19    19      0
                          _ReadUSART
                          _SetTimer0
                             _strstr
 ---------------------------------------------------------------------------------
 (6) _strstr                                               4     0      4     832
                                             34 COMRAM     4     0      4
                            _strncmp
                           i1_strchr
                           i1_strlen
 ---------------------------------------------------------------------------------
 (7) i1_strlen                                             6     4      2     116
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) i1_strchr                                             6     2      4     140
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _strncmp                                              9     3      6     293
                                             25 COMRAM     9     3      6
                           i1_strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _SetTimer0                                            4     2      2      97
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _ReadUSART                                            1     1      0      23
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _high_isr                                            15    15      0      68
                                              4 COMRAM    15    15      0
                        i2_SetTimer3
 ---------------------------------------------------------------------------------
 (9) i2_SetTimer3                                          4     2      2      68
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CommFsmSched
     _CommFsmIdle *
     _StartRx *
     _StartTx *
       _memcpy
       _strlen
     _TimeDecode *
       _atoi
         ___wmul
         _isdigit
       _strcspn
         _strchr
   _CommSetting
   _I2cBuffChk
   _I2cData
   _I2cService
     _I2cHighService
     _I2cLowService
   _I2cSettings
     _OpenI2C
     ___wmul
   _InterruptSettings
   _RtcInit
     _I2cData
     _I2cService
       _I2cHighService
       _I2cLowService
   _RtcReadTime
   _RtcWriteTime
     _I2cBuffChk
     _I2cData
     ___awdiv
   _SetTimer1
   _SetTimer3
   _Settings
   _StartCommFsmSched
   ___lwmod

 _low_isr (ROOT)
   _ReadUSART
   _SetTimer0
   _strstr
     _strncmp
       i1_strlen (ARG)
     i1_strchr
     i1_strlen

 _high_isr (ROOT)
   i2_SetTimer3

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      40       7       25.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     1E      64       5       78.1%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     39      63       1       78.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     107      34        0.0%
DATA                 0      0     107       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Thu Jul 17 00:07:12 2014

         _InterruptSettings 2A62                           _i 0042                           _j 0044  
              ___awdiv@sign 00B1          ?_InterruptSettings 0001                          bsr 000FE0  
       ___wmul@multiplicand 00AD                 __CFG_BORV$1 000000                 __CFG_WDT$ON 000000  
                       l302 1556                         l330 125E                         l322 114C  
                       l227 1AEE                         l308 1048                         l334 1272  
                       l326 1202                         l344 1346                         l442 1624  
                       l347 24C2                         l339 12DE                         l363 2872  
                       l438 157A                         l447 174C                         l641 1E62  
                       l642 1E6A                         _I2c 0056                         _Min 0082  
                       _Sec 0084                         _Ptr 004E             _FsmStructActive 003C  
                       prod 000FF3         ??_InterruptSettings 00AB                         tosl 000FFD  
                       wreg 000FE8                StartRx@TxStr 00AB             __end_of_I2cData 2066  
              StartTx@TxStr 00B5                __CFG_LVP$OFF 000000                        l1013 2442  
                      l1045 2534                        l1081 229A                        l3001 1264  
                      l1083 232E                        l3005 1278                        l3023 130E  
                      l3041 262E                        l3017 12E4                        l3009 12A0  
                      l3051 2710                        l3043 2636                        l3301 1550  
                      l3231 1838                        l3223 17C2                        l3151 1CC6  
                      l3057 273E                        l3073 2860                        l3065 2826  
                      l3225 17C6                        l3153 1CD8                        l3145 1C9A  
                      l3403 16CE                        l3171 1D52                        l3163 1D26  
                      l3155 1CE0                        l3139 1C6C                        l3413 1732  
                      l3077 2866                        l3245 1920                        l3237 18B0  
                      l3229 1834                        l3421 23F2                        l3247 1924  
                      l3239 18B4                        l3087 26E6                        l3167 1D3A  
                      l3423 23FA                        l3409 1728                        l3427 242E  
                      l3419 23E0                        l3471 1BF4                        l3463 1BDA  
                      l3385 15C0                        l3289 14D2                        l3465 1BDE  
                      l3449 1B1A                        l2915 1D5E                        l2907 24D8  
                      l3395 166A                        l3483 1C20                        l3459 1B68  
                      l2933 1DCA                        l2917 1D66                        l2909 24E8  
                      l3479 1C0A                        l2937 1E26                        l2929 1DBA  
                      l2953 104E                        l2883 293E                        l2963 108A  
                      l2893 22DC                        l2973 113C                        l2949 102E  
                      l2983 119E                        l2975 1144                        l2993 1208  
                      l2985 11AC                        STR_1 100E                        STR_2 1012  
                      STR_3 1008                        STR_4 1001                        STR_6 1016  
                      STR_7 100E                        STR_8 1012                        STR_9 1008  
                      u2428 15FC                        u2429 1614                        u1920 22C0  
                      u2448 16A6                        u2449 16BE                        u2458 170A  
                      u1940 2318                        u1927 22B6                        u1947 230E  
                      _Hour 0080         __end_of_CommFsmIdle 2AA2                        _atoi 1D5C  
                      _main 1AF0                        fsr0h 000FEA                        fsr1h 000FE2  
                      indf0 000FEF                        fsr0l 000FE9                        fsr2h 000FDA  
                      fsr1l 000FE1                        indf2 000FDF                        fsr2l 000FD9  
                      pclat 000FFA                        prodh 000FF4                        prodl 000FF3  
                      start 01AE   __end_of_InterruptSettings 2A78           _StartCommFsmSched 28BE  
       __end_of_CommSetting 29D8         __size_of_I2cBuffChk 0068          ?_StartCommFsmSched 00AB  
           __end_of_OpenI2C 29B2             __end_of_RtcInit 192C             __end_of_StartRx 2A12  
           __end_of_StartTx 261C         __size_of_I2cService 005A                       ?_atoi 00B1  
                     ?_main 0001             __end_of___awdiv 1D5C                       STR_10 1001  
                     STR_11 100D         ??_StartCommFsmSched 00AD             ___awdiv@divisor 00AD  
                     i1l245 0168             __end_of___lwmod 244C                       i1l462 29E6  
                     i2l253 21BE             ___awdiv@counter 00B0                       _RCREG 000FAE  
                     _TMR0H 000FD7                       _TMR1H 000FCF                       _TMR0L 000FD6  
                     _TMR3H 000FB3                       _TMR1L 000FCE                       _TMR3L 000FB2  
                     _SPBRG 000FAF                       _START 007E3B                       _TRISA 000F92  
                     _TRISB 000F93                       _TRISC 000F94                       _TRISE 000F96  
                     _TXREG 000FAD                       _RXerr 0040        __end_of_CommFsmSched 174E  
           __end_of_isdigit 2948                       atoi@a 00B6                       atoi@s 00B1  
           __end_of_low_isr 01AE                       pclath 000FFA                       tablat 000FF5  
       CommFsmSched@FsmStat 00C2     __size_of_I2cHighService 007C                       status 000FD8  
           __end_of_strcspn 253E             __end_of_strncmp 213A   __end_of_StartCommFsmSched 2904  
          __end_ofi1_strchr 25AE            __end_ofi1_strlen 298A             __initialization 2874  
              __end_of_atoi 1E6C                __end_of_main 1C26            RtcWriteTime@Tens 00B8  
            __CFG_OSC$HSPLL 000000                      ??_atoi 00B3                      ??_main 00C3  
                 ??_I2cData 00B1                  i1strlen@cp 0018               __activetblptr 000003  
          __end_of_Settings 27B8                  RtcInit@Tmp 00B9                 _CommFsmFlag 0046  
               _CommFsmIdle 2AA0        __size_of_I2cSettings 0210         TimeDecode@TimePoint 00BC  
          ___awdiv@dividend 00AB                      _I2cAdr 0048                  _RxBuffIndx 004F  
                    i1l1064 2298                      i1l1081 253E                      i1l1083 25AC  
                    i1l1092 2138                      i1l2411 20CA                      i1l2415 2118  
                    i1l2407 2068                      i1l2417 2120                      i1l2425 2952  
                    i1l2427 2956                 OpenI2C@slew 00AB                      i1l2439 2570  
                    i1l2713 2234                      i1l2707 21FA                      i1l2715 2260  
                    i1l2811 0090                      i1l2805 006E                      i1l2719 2290  
                    i1l2825 00FE                      i1l2819 00A6                      i1l2835 0112  
                    i1l2847 0150                      i2l2073 219A                      i2l2065 2190  
                    i2l2057 217C                      i2l2079 21A8          __size_of_ReadUSART 001E  
               _CommSetting 29B2              __CFG_WDTPS$256 000000                      _SPBRGH 000FB0  
             ??_RtcReadTime 00AB                      _SSPADD 000FC8                      _SSPBUF 000FC9  
                _TimeDecode 1E6C                   ??_OpenI2C 00AC                      _RXbuff 0100  
                _TxBuffIndx 0052            i2SetTimer3@Count 0001  __size_of_InterruptSettings 0016  
                    _RxFlag 0050                   ??_RtcInit 00B3                      _NtpMin 0087  
                    _NtpSec 0088                      _TxBuff 008B            __end_of_high_isr 21F8  
       I2cBuffChk@I2cDevice 00AD                   ??_StartRx 00AD                   ??_StartTx 00B7  
                    ___wmul 27B8                   ??___awdiv 00AF          __size_of_SetTimer0 0014  
                 ??___lwmod 00AF          __size_of_SetTimer1 001A          __size_of_SetTimer3 001A  
                    _memcpy 26EE                      clear_0 287A                      clear_1 2886  
                    clear_2 2892            ___awdiv@quotient 00B2                      _strchr 229A  
                    _strlen 261C                      _strstr 21F8                   ??_isdigit 00AB  
              ??_I2cBuffChk 00AB                __mediumconst 0000                   ??_low_isr 0027  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
                 ??_strcspn 00B5                   ??_strncmp 0020                ??_I2cService 00AF  
                __accesstop 0080     __end_of__initialization 28B8  __size_of_StartCommFsmSched 0046  
              ?i2_SetTimer3 0001              __pcstackCOMRAM 0001         __end_of_RtcReadTime 23C2  
     __end_of_I2cLowService 1348          __end_of_I2cBuffChk 26EE                __pidataBANK0 2A12  
               _ReadTimeFsm 00CB           __end_of_ReadUSART 29F6          __end_of_I2cService 2874  
     __size_of_CommFsmSched 01F6           RtcWriteTime@Units 00B7                 i1strchr@chr 0016  
                 ?i1_strchr 0014                   ?i1_strlen 0014                 i1strchr@ptr 0014  
             ReadUSART@data 0014  StartCommFsmSched@FsmStruct 00AB           __end_of_SetTimer0 2A8C  
         __end_of_SetTimer1 2A62           __end_of_SetTimer3 2A48                  __pbssBANK0 0080  
                __pbssBANK1 0100              _I2cBusCollFlag 0049              _I2cHighService 244C  
                __pnvCOMRAM 0060                 ?_TimeDecode 0001                   ?_Settings 0001  
                   ?___wmul 00AB                _CommFsmSched 1558                _CommFsmState 00C9  
                   ?_memcpy 00AB                _I2cEventFlag 004C                     _I2cData 1F6C  
                   ?_strchr 00AB                     ?_strlen 00AB                     ?_strstr 0023  
            SetTimer0@Count 0014                     _I2cStat 004D              SetTimer1@Count 00AB  
            SetTimer3@Count 00AB                  ??i1_strchr 0018                  ??i1_strlen 0016  
                   _SSPCON1 000FC6                     _SSPCON2 000FC5               ?_RtcWriteTime 0001  
                 ?_high_isr 0001      __end_of_I2cHighService 24C8                     _SSPSTAT 000FC7  
               _RtcReadTime 2330                     _FsmIndx 0047                     _OpenI2C 298A  
                   __Hparam 0000                     __Lparam 0000                     _NtpHour 0086  
                   _RtcInit 174E                  ??_Settings 00AB                     _StartRx 29F6  
                   _StartTx 25AE                     ___awdiv 1C26             __size_of___wmul 0062  
                   ___lwmod 23C2                __psmallconst 1000                   _I2cDevPtr 004B  
                   __pcinit 2874             __size_of_memcpy 0068                     __ramtop 1000  
                   __ptext0 1AF0                     __ptext1 23C2                     __ptext2 28BE  
                   __ptext3 2756                     __ptext4 2A2E                     __ptext5 2A48  
                   __ptext6 192C                     __ptext7 1C26                     __ptext8 2686  
                   __ptext9 2330                   _T0CONbits 000FD5             __size_of_strchr 0096  
           __size_of_strlen 006A                   _T1CONbits 000FCD             __size_of_strstr 00A2  
               _TimerStatus 0051                     _isdigit 2904                   _T3CONbits 000FB1  
       __size_of_TimeDecode 0100                  I2cData@TX1 00AC                  I2cData@TX2 00AD  
                I2cData@TX3 00AE                  I2cData@TX4 00AF                     _low_isr 0018  
              ?_CommFsmIdle 0001              ??_RtcWriteTime 00B4                  ??_high_isr 0005  
                   _strcspn 24C8                     _strncmp 2066              __pintcode_body 213A  
           ?_I2cHighService 0001        end_of_initialization 28B8                ?_CommSetting 0001  
                   memcpy@d 00B1                     memcpy@n 00AF               I2cData@DevPtr 00B2  
                   memcpy@s 00B3                     int_func 213A        __size_ofi2_SetTimer3 0014  
                 _RCSTAbits 000FAB                     postdec1 000FE5                     postdec2 000FDD  
                   postinc0 000FEE                     postinc2 000FDE       CommFsmSched@FsmStruct 00BE  
                   strlen@s 00AB             RtcReadTime@Tens 00AC               ??_I2cSettings 00B1  
                 _TRISCbits 000F94                   _TXSTAbits 000FAC              __end_of___wmul 281A  
           _I2cBuffChk$1447 00AC                 _BAUDCONbits 000FB8              __end_of_memcpy 2756  
            __end_of_strchr 2330              __end_of_strlen 2686              __end_of_strstr 229A  
       start_initialization 2874                   _ReadUSART 29D8                   _OneHzTick 003E  
                 _DutyCycle 003A                   i1strlen@s 0014           __size_ofi1_strchr 0070  
         __size_ofi1_strlen 0042         __end_of_I2cSettings 1558                ??_TimeDecode 00B8  
                 _SetTimer0 2A78                   _SetTimer1 2A48                   _SetTimer3 2A2E  
                 _RxFsmFlag 0089                   _TxBuffLen 0053                   _TxFsmFlag 008A  
                 _Timer0_ms 0060                   _Timer3_ms 0062                    ??___wmul 00AF  
      __end_of_RtcWriteTime 1AF0                 __pdataBANK0 00C9                    ??_memcpy 00B1  
         __size_of_Settings 0062                    ?_I2cData 00AB                    ??_strchr 00AF  
                  ??_strlen 00AD                    ??_strstr 0027                 __pbssCOMRAM 003A  
                ?_ReadUSART 0001          __end_of_TimeDecode 1F6C               __pcstackBANK0 00AB  
       __end_of__stringdata 1018                _isdigit$2072 00AC      __size_of_I2cLowService 032E  
      __size_of_CommFsmIdle 0002           __size_of_high_isr 21F0                ?_RtcReadTime 0001  
                ?_SetTimer0 0014                  ?_SetTimer1 00AB                  ?_SetTimer3 00AB  
      __size_of_CommSetting 0026                    ?_OpenI2C 00AB                    ?_RtcInit 0001  
                 __pintcode 0008                    ?_StartRx 00AB                    ?_StartTx 00B5  
               _I2cBusyFlag 004A                    ?___awdiv 00AB                    ?___lwmod 00AB  
               __pintcodelo 0018                 __smallconst 1000                    ?_isdigit 0001  
          ??_I2cHighService 00AB                 _I2cSettings 1348                    ?_low_isr 0001  
                  ?_strcspn 00B1                    ?_strncmp 001A              ___wmul@product 00AF  
                  _LATBbits 000F8A                    _IPR1bits 000F9F                    _IPR2bits 000FA2  
                  _PIE1bits 000F9D                    _PIE2bits 000FA0                    i1u140_20 20C4  
                  i1u140_27 20BA                    i1u142_20 2108                    i1u142_27 20FE  
                  i1u145_20 2560                    i1u145_27 2556                    i1u138_20 208A  
                  i1u138_27 2080                    i1u147_20 259E                    i1u171_20 228A  
                  i1u147_27 2594                    i1u171_27 2280                    _PIR1bits 000F9E  
                  _PIR2bits 000FA1                    _RCONbits 000FD0               _I2cLowService 101A  
                  _VARbits1 0055                  _ADCON1bits 000FC1                 __stringdata 1001  
         ___wmul@multiplier 00AB            __size_of_I2cData 00FA                 ??_ReadUSART 0014  
                  i1_strchr 253E                    i1_strlen 2948                 _INTCON2bits 000FF1  
                 copy_data0 28AC            OpenI2C@sync_mode 00AC               ??i2_SetTimer3 0003  
               ??_SetTimer0 0016                 ??_SetTimer1 00AD                 ??_SetTimer3 00AD  
     __size_of_RtcWriteTime 01C4                    __Hrparam 0000            __size_of_OpenI2C 0028  
                  __Lrparam 0000          __CFG_BOREN$SBORDIS 000000            __size_of_RtcInit 01DE  
                  _Settings 2756              ?_I2cLowService 0001            __size_of_StartRx 001C  
          __size_of_StartTx 006E            __size_of___awdiv 0136            __size_of___lwmod 008A  
                _I2cBuffChk 2686            __size_of_isdigit 0044            __size_of_low_isr 0196  
                  __ptext10 174E                    __ptext11 281A                    __ptext20 2AA0  
                  __ptext12 101A                    __ptext21 1E6C                    __ptext13 244C  
                  __ptext30 29F6                    __ptext22 24C8                    __ptext14 1F6C  
                  __ptext23 229A                    __ptext15 2A62                    __ptext40 0000  
                  __ptext32 21F8                    __ptext24 1D5C                    __ptext16 1348  
                  __ptext33 2948                    __ptext25 2904                    __ptext17 298A  
                  __ptext34 253E                    __ptext26 27B8                    __ptext18 29B2  
                  __ptext35 2066                    __ptext27 25AE                    __ptext19 1558  
                  __ptext36 2A78                    __ptext28 261C                    __ptext37 29D8  
                  __ptext29 26EE                    __ptext39 2A8C                    _high_isr 0008  
              _RtcWriteTime 192C            __size_of_strcspn 0076            __size_of_strncmp 00D4  
                _I2cService 281A               __size_of_atoi 0110               __size_of_main 0136  
                strncmp@len 001E        __size_of_RtcReadTime 0092               ?_CommFsmSched 00BE  
       __end_ofi2_SetTimer3 2AA0                    atoi@sign 00B5                  _INTCONbits 000FF2  
                  memcpy@d1 00AB                    memcpy@s1 00AD                    isdigit@c 00AD  
                  intlevel1 0000                    intlevel2 0000              I2cData@RxBytes 00B0  
                 strchr@chr 00AD              I2cData@TxBytes 00AB            ___lwmod@dividend 00AB  
                 strchr@ptr 00AB                   strcspn@s1 00B1                   strcspn@s2 00B3  
                 strncmp@s1 001A                   strncmp@s2 001C             ??_I2cLowService 00AB  
            ??_CommFsmSched 00C0             ___lwmod@divisor 00AD                    strlen@cp 00AF  
              ?_I2cSettings 0001             ___lwmod@counter 00B0                    strcspn@i 00B6  
               ?_I2cBuffChk 0001               ??_CommFsmIdle 00AB                 _SSPCON2bits 000FC5  
                  strstr@s1 0023                    strstr@s2 0025               ??_CommSetting 00AB  
               ?_I2cService 0001            RtcReadTime@Units 00AB                 i2_SetTimer3 2A8C  
              _USART_Status 0054  
